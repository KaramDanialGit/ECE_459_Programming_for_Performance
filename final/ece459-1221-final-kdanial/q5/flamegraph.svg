<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1414" onload="init(evt)" viewBox="0 0 1200 1414" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1414" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1397.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1397.00"> </text><svg id="frames" x="10" width="1180" total_samples="872"><g><title>perf-exec (5 samples, 0.57%)</title><rect x="0.0000%" y="1349" width="0.5734%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1359.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1333" width="0.5734%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1343.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1317" width="0.5734%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1327.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1301" width="0.5734%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1285" width="0.5734%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1269" width="0.5734%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1253" width="0.5734%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1237" width="0.5734%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1221" width="0.5734%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1205" width="0.5734%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1189" width="0.5734%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1173" width="0.5734%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1157" width="0.5734%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1141" width="0.5734%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="0.0000%" y="1125" width="0.5734%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1135.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="0.5734%" y="1317" width="0.1147%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="0.8234%" y="1327.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="0.6881%" y="1317" width="0.1147%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="0.9381%" y="1327.50"></text></g><g><title>core::unicode::unicode_data::white_space::lookup (1 samples, 0.11%)</title><rect x="0.8028%" y="1317" width="0.1147%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="1.0528%" y="1327.50"></text></g><g><title>[[heap]] (4 samples, 0.46%)</title><rect x="0.5734%" y="1333" width="0.4587%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="4"/><text x="0.8234%" y="1343.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::insert (1 samples, 0.11%)</title><rect x="0.9174%" y="1317" width="0.1147%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1327.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::insert_tokens (1 samples, 0.11%)</title><rect x="0.9174%" y="1301" width="0.1147%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1311.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (1 samples, 0.11%)</title><rect x="0.9174%" y="1285" width="0.1147%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1295.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (1 samples, 0.11%)</title><rect x="0.9174%" y="1269" width="0.1147%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1279.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::into_mut (1 samples, 0.11%)</title><rect x="0.9174%" y="1253" width="0.1147%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::rustc_entry::RustcOccupiedEntry&lt;alloc::string::String,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="0.9174%" y="1237" width="0.1147%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.11%)</title><rect x="0.9174%" y="1221" width="0.1147%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.11%)</title><rect x="0.9174%" y="1205" width="0.1147%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="0.9174%" y="1189" width="0.1147%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="0.9174%" y="1173" width="0.1147%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="0.9174%" y="1157" width="0.1147%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="0.9174%" y="1141" width="0.1147%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="0.9174%" y="1125" width="0.1147%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="1"/><text x="1.1674%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.11%)</title><rect x="1.0321%" y="1317" width="0.1147%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="1"/><text x="1.2821%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="1.1468%" y="1253" width="0.1147%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.11%)</title><rect x="1.1468%" y="1237" width="0.1147%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.11%)</title><rect x="1.1468%" y="1221" width="0.1147%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1231.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::tokenize::{{closure}} (1 samples, 0.11%)</title><rect x="1.1468%" y="1205" width="0.1147%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1215.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.11%)</title><rect x="1.1468%" y="1189" width="0.1147%" height="15" fill="rgb(245,192,40)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.11%)</title><rect x="1.1468%" y="1173" width="0.1147%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1183.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.11%)</title><rect x="1.1468%" y="1157" width="0.1147%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.11%)</title><rect x="1.1468%" y="1141" width="0.1147%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="1.1468%" y="1125" width="0.1147%" height="15" fill="rgb(208,69,12)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="1.1468%" y="1109" width="0.1147%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="1.1468%" y="1093" width="0.1147%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="1.1468%" y="1077" width="0.1147%" height="15" fill="rgb(222,207,29)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="1.1468%" y="1061" width="0.1147%" height="15" fill="rgb(206,96,30)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="1.1468%" y="1045" width="0.1147%" height="15" fill="rgb(218,138,4)" fg:x="10" fg:w="1"/><text x="1.3968%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="1.1468%" y="1317" width="0.2294%" height="15" fill="rgb(250,191,14)" fg:x="10" fg:w="2"/><text x="1.3968%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="1.1468%" y="1301" width="0.2294%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="2"/><text x="1.3968%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.23%)</title><rect x="1.1468%" y="1285" width="0.2294%" height="15" fill="rgb(206,27,48)" fg:x="10" fg:w="2"/><text x="1.3968%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.23%)</title><rect x="1.1468%" y="1269" width="0.2294%" height="15" fill="rgb(225,35,8)" fg:x="10" fg:w="2"/><text x="1.3968%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="1.2615%" y="1253" width="0.1147%" height="15" fill="rgb(250,213,24)" fg:x="11" fg:w="1"/><text x="1.5115%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="1.2615%" y="1237" width="0.1147%" height="15" fill="rgb(247,123,22)" fg:x="11" fg:w="1"/><text x="1.5115%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="1.3761%" y="1317" width="0.1147%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="1"/><text x="1.6261%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="1.3761%" y="1301" width="0.1147%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="1"/><text x="1.6261%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="1.3761%" y="1285" width="0.1147%" height="15" fill="rgb(251,118,11)" fg:x="12" fg:w="1"/><text x="1.6261%" y="1295.50"></text></g><g><title>[[stack]] (5 samples, 0.57%)</title><rect x="1.0321%" y="1333" width="0.5734%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="5"/><text x="1.2821%" y="1343.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.11%)</title><rect x="1.4908%" y="1317" width="0.1147%" height="15" fill="rgb(247,81,37)" fg:x="13" fg:w="1"/><text x="1.7408%" y="1327.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (1 samples, 0.11%)</title><rect x="1.4908%" y="1301" width="0.1147%" height="15" fill="rgb(209,12,38)" fg:x="13" fg:w="1"/><text x="1.7408%" y="1311.50"></text></g><g><title>core::unicode::printable::is_printable (1 samples, 0.11%)</title><rect x="1.4908%" y="1285" width="0.1147%" height="15" fill="rgb(227,1,9)" fg:x="13" fg:w="1"/><text x="1.7408%" y="1295.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="1.6055%" y="1317" width="0.2294%" height="15" fill="rgb(248,47,43)" fg:x="14" fg:w="2"/><text x="1.8555%" y="1327.50"></text></g><g><title>[anon] (3 samples, 0.34%)</title><rect x="1.6055%" y="1333" width="0.3440%" height="15" fill="rgb(221,10,30)" fg:x="14" fg:w="3"/><text x="1.8555%" y="1343.50"></text></g><g><title>strsim::jaro_winkler (1 samples, 0.11%)</title><rect x="1.8349%" y="1317" width="0.1147%" height="15" fill="rgb(210,229,1)" fg:x="16" fg:w="1"/><text x="2.0849%" y="1327.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="1.9495%" y="1317" width="0.1147%" height="15" fill="rgb(222,148,37)" fg:x="17" fg:w="1"/><text x="2.1995%" y="1327.50"></text></g><g><title>[simsearch] (3 samples, 0.34%)</title><rect x="1.9495%" y="1333" width="0.3440%" height="15" fill="rgb(234,67,33)" fg:x="17" fg:w="3"/><text x="2.1995%" y="1343.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.23%)</title><rect x="2.0642%" y="1317" width="0.2294%" height="15" fill="rgb(247,98,35)" fg:x="18" fg:w="2"/><text x="2.3142%" y="1327.50"></text></g><g><title>std::sys_common::memchr::memrchr (2 samples, 0.23%)</title><rect x="2.0642%" y="1301" width="0.2294%" height="15" fill="rgb(247,138,52)" fg:x="18" fg:w="2"/><text x="2.3142%" y="1311.50"></text></g><g><title>std::sys::unix::memchr::memrchr (2 samples, 0.23%)</title><rect x="2.0642%" y="1285" width="0.2294%" height="15" fill="rgb(213,79,30)" fg:x="18" fg:w="2"/><text x="2.3142%" y="1295.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (2 samples, 0.23%)</title><rect x="2.0642%" y="1269" width="0.2294%" height="15" fill="rgb(246,177,23)" fg:x="18" fg:w="2"/><text x="2.3142%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.23%)</title><rect x="2.6376%" y="1317" width="0.2294%" height="15" fill="rgb(230,62,27)" fg:x="23" fg:w="2"/><text x="2.8876%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="2.8670%" y="1317" width="0.1147%" height="15" fill="rgb(216,154,8)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.11%)</title><rect x="2.8670%" y="1301" width="0.1147%" height="15" fill="rgb(244,35,45)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1311.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.11%)</title><rect x="2.8670%" y="1285" width="0.1147%" height="15" fill="rgb(251,115,12)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1295.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.11%)</title><rect x="2.8670%" y="1269" width="0.1147%" height="15" fill="rgb(240,54,50)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,alloc::vec::Vec&lt;alloc::string::String&gt;)&gt; (1 samples, 0.11%)</title><rect x="2.8670%" y="1253" width="0.1147%" height="15" fill="rgb(233,84,52)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.11%)</title><rect x="2.8670%" y="1237" width="0.1147%" height="15" fill="rgb(207,117,47)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.11%)</title><rect x="2.8670%" y="1221" width="0.1147%" height="15" fill="rgb(249,43,39)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="2.8670%" y="1205" width="0.1147%" height="15" fill="rgb(209,38,44)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="2.8670%" y="1189" width="0.1147%" height="15" fill="rgb(236,212,23)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="2.8670%" y="1173" width="0.1147%" height="15" fill="rgb(242,79,21)" fg:x="25" fg:w="1"/><text x="3.1170%" y="1183.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="2.9817%" y="1317" width="0.1147%" height="15" fill="rgb(211,96,35)" fg:x="26" fg:w="1"/><text x="3.2317%" y="1327.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="3.0963%" y="1317" width="0.1147%" height="15" fill="rgb(253,215,40)" fg:x="27" fg:w="1"/><text x="3.3463%" y="1327.50"></text></g><g><title>[unknown] (6 samples, 0.69%)</title><rect x="3.2110%" y="1317" width="0.6881%" height="15" fill="rgb(211,81,21)" fg:x="28" fg:w="6"/><text x="3.4610%" y="1327.50"></text></g><g><title>[unknown] (6 samples, 0.69%)</title><rect x="3.2110%" y="1301" width="0.6881%" height="15" fill="rgb(208,190,38)" fg:x="28" fg:w="6"/><text x="3.4610%" y="1311.50"></text></g><g><title>[unknown] (6 samples, 0.69%)</title><rect x="3.2110%" y="1285" width="0.6881%" height="15" fill="rgb(235,213,38)" fg:x="28" fg:w="6"/><text x="3.4610%" y="1295.50"></text></g><g><title>[unknown] (6 samples, 0.69%)</title><rect x="3.2110%" y="1269" width="0.6881%" height="15" fill="rgb(237,122,38)" fg:x="28" fg:w="6"/><text x="3.4610%" y="1279.50"></text></g><g><title>[unknown] (6 samples, 0.69%)</title><rect x="3.2110%" y="1253" width="0.6881%" height="15" fill="rgb(244,218,35)" fg:x="28" fg:w="6"/><text x="3.4610%" y="1263.50"></text></g><g><title>[unknown] (6 samples, 0.69%)</title><rect x="3.2110%" y="1237" width="0.6881%" height="15" fill="rgb(240,68,47)" fg:x="28" fg:w="6"/><text x="3.4610%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.69%)</title><rect x="3.2110%" y="1221" width="0.6881%" height="15" fill="rgb(210,16,53)" fg:x="28" fg:w="6"/><text x="3.4610%" y="1231.50"></text></g><g><title>[unknown] (6 samples, 0.69%)</title><rect x="3.2110%" y="1205" width="0.6881%" height="15" fill="rgb(235,124,12)" fg:x="28" fg:w="6"/><text x="3.4610%" y="1215.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="3.4404%" y="1189" width="0.4587%" height="15" fill="rgb(224,169,11)" fg:x="30" fg:w="4"/><text x="3.6904%" y="1199.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="3.4404%" y="1173" width="0.4587%" height="15" fill="rgb(250,166,2)" fg:x="30" fg:w="4"/><text x="3.6904%" y="1183.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="3.5550%" y="1157" width="0.3440%" height="15" fill="rgb(242,216,29)" fg:x="31" fg:w="3"/><text x="3.8050%" y="1167.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.6697%" y="1141" width="0.2294%" height="15" fill="rgb(230,116,27)" fg:x="32" fg:w="2"/><text x="3.9197%" y="1151.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.6697%" y="1125" width="0.2294%" height="15" fill="rgb(228,99,48)" fg:x="32" fg:w="2"/><text x="3.9197%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.6697%" y="1109" width="0.2294%" height="15" fill="rgb(253,11,6)" fg:x="32" fg:w="2"/><text x="3.9197%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="3.6697%" y="1093" width="0.2294%" height="15" fill="rgb(247,143,39)" fg:x="32" fg:w="2"/><text x="3.9197%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.7844%" y="1077" width="0.1147%" height="15" fill="rgb(236,97,10)" fg:x="33" fg:w="1"/><text x="4.0344%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.7844%" y="1061" width="0.1147%" height="15" fill="rgb(233,208,19)" fg:x="33" fg:w="1"/><text x="4.0344%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="3.7844%" y="1045" width="0.1147%" height="15" fill="rgb(216,164,2)" fg:x="33" fg:w="1"/><text x="4.0344%" y="1055.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="3.8991%" y="1317" width="0.2294%" height="15" fill="rgb(220,129,5)" fg:x="34" fg:w="2"/><text x="4.1491%" y="1327.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="4.1284%" y="1317" width="0.1147%" height="15" fill="rgb(242,17,10)" fg:x="36" fg:w="1"/><text x="4.3784%" y="1327.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="4.1284%" y="1301" width="0.1147%" height="15" fill="rgb(242,107,0)" fg:x="36" fg:w="1"/><text x="4.3784%" y="1311.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="4.2431%" y="1317" width="0.1147%" height="15" fill="rgb(251,28,31)" fg:x="37" fg:w="1"/><text x="4.4931%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="4.3578%" y="1317" width="0.2294%" height="15" fill="rgb(233,223,10)" fg:x="38" fg:w="2"/><text x="4.6078%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.23%)</title><rect x="4.3578%" y="1301" width="0.2294%" height="15" fill="rgb(215,21,27)" fg:x="38" fg:w="2"/><text x="4.6078%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.23%)</title><rect x="4.3578%" y="1285" width="0.2294%" height="15" fill="rgb(232,23,21)" fg:x="38" fg:w="2"/><text x="4.6078%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.23%)</title><rect x="4.3578%" y="1269" width="0.2294%" height="15" fill="rgb(244,5,23)" fg:x="38" fg:w="2"/><text x="4.6078%" y="1279.50"></text></g><g><title>core::unicode::printable::check (2 samples, 0.23%)</title><rect x="4.5872%" y="1317" width="0.2294%" height="15" fill="rgb(226,81,46)" fg:x="40" fg:w="2"/><text x="4.8372%" y="1327.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (2 samples, 0.23%)</title><rect x="4.8165%" y="1317" width="0.2294%" height="15" fill="rgb(247,70,30)" fg:x="42" fg:w="2"/><text x="5.0665%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="5.0459%" y="1317" width="0.1147%" height="15" fill="rgb(212,68,19)" fg:x="44" fg:w="1"/><text x="5.2959%" y="1327.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.11%)</title><rect x="5.1606%" y="1317" width="0.1147%" height="15" fill="rgb(240,187,13)" fg:x="45" fg:w="1"/><text x="5.4106%" y="1327.50"></text></g><g><title>&lt;&amp;strsim::StringWrapper as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.34%)</title><rect x="5.3899%" y="1301" width="0.3440%" height="15" fill="rgb(223,113,26)" fg:x="47" fg:w="3"/><text x="5.6399%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="5.7339%" y="1301" width="0.1147%" height="15" fill="rgb(206,192,2)" fg:x="50" fg:w="1"/><text x="5.9839%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="5.7339%" y="1285" width="0.1147%" height="15" fill="rgb(241,108,4)" fg:x="50" fg:w="1"/><text x="5.9839%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="5.7339%" y="1269" width="0.1147%" height="15" fill="rgb(247,173,49)" fg:x="50" fg:w="1"/><text x="5.9839%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="5.7339%" y="1253" width="0.1147%" height="15" fill="rgb(224,114,35)" fg:x="50" fg:w="1"/><text x="5.9839%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="5.7339%" y="1237" width="0.1147%" height="15" fill="rgb(245,159,27)" fg:x="50" fg:w="1"/><text x="5.9839%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="5.7339%" y="1221" width="0.1147%" height="15" fill="rgb(245,172,44)" fg:x="50" fg:w="1"/><text x="5.9839%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="5.7339%" y="1205" width="0.1147%" height="15" fill="rgb(236,23,11)" fg:x="50" fg:w="1"/><text x="5.9839%" y="1215.50"></text></g><g><title>strsim::generic_jaro (7 samples, 0.80%)</title><rect x="5.2752%" y="1317" width="0.8028%" height="15" fill="rgb(205,117,38)" fg:x="46" fg:w="7"/><text x="5.5252%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2 samples, 0.23%)</title><rect x="5.8486%" y="1301" width="0.2294%" height="15" fill="rgb(237,72,25)" fg:x="51" fg:w="2"/><text x="6.0986%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2 samples, 0.23%)</title><rect x="5.8486%" y="1285" width="0.2294%" height="15" fill="rgb(244,70,9)" fg:x="51" fg:w="2"/><text x="6.0986%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="5.8486%" y="1269" width="0.2294%" height="15" fill="rgb(217,125,39)" fg:x="51" fg:w="2"/><text x="6.0986%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.23%)</title><rect x="5.8486%" y="1253" width="0.2294%" height="15" fill="rgb(235,36,10)" fg:x="51" fg:w="2"/><text x="6.0986%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.23%)</title><rect x="5.8486%" y="1237" width="0.2294%" height="15" fill="rgb(251,123,47)" fg:x="51" fg:w="2"/><text x="6.0986%" y="1247.50"></text></g><g><title>[unknown] (34 samples, 3.90%)</title><rect x="2.2936%" y="1333" width="3.8991%" height="15" fill="rgb(221,13,13)" fg:x="20" fg:w="34"/><text x="2.5436%" y="1343.50">[unk..</text></g><g><title>strsim::jaro_winkler (1 samples, 0.11%)</title><rect x="6.0780%" y="1317" width="0.1147%" height="15" fill="rgb(238,131,9)" fg:x="53" fg:w="1"/><text x="6.3280%" y="1327.50"></text></g><g><title>__GI___libc_free (6 samples, 0.69%)</title><rect x="6.1927%" y="901" width="0.6881%" height="15" fill="rgb(211,50,8)" fg:x="54" fg:w="6"/><text x="6.4427%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.80%)</title><rect x="6.1927%" y="997" width="0.8028%" height="15" fill="rgb(245,182,24)" fg:x="54" fg:w="7"/><text x="6.4427%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.80%)</title><rect x="6.1927%" y="981" width="0.8028%" height="15" fill="rgb(242,14,37)" fg:x="54" fg:w="7"/><text x="6.4427%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.80%)</title><rect x="6.1927%" y="965" width="0.8028%" height="15" fill="rgb(246,228,12)" fg:x="54" fg:w="7"/><text x="6.4427%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.80%)</title><rect x="6.1927%" y="949" width="0.8028%" height="15" fill="rgb(213,55,15)" fg:x="54" fg:w="7"/><text x="6.4427%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.80%)</title><rect x="6.1927%" y="933" width="0.8028%" height="15" fill="rgb(209,9,3)" fg:x="54" fg:w="7"/><text x="6.4427%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.80%)</title><rect x="6.1927%" y="917" width="0.8028%" height="15" fill="rgb(230,59,30)" fg:x="54" fg:w="7"/><text x="6.4427%" y="927.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="6.8807%" y="901" width="0.1147%" height="15" fill="rgb(209,121,21)" fg:x="60" fg:w="1"/><text x="7.1307%" y="911.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="6.9954%" y="917" width="0.1147%" height="15" fill="rgb(220,109,13)" fg:x="61" fg:w="1"/><text x="7.2454%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 5.62%)</title><rect x="6.1927%" y="1077" width="5.6193%" height="15" fill="rgb(232,18,1)" fg:x="54" fg:w="49"/><text x="6.4427%" y="1087.50">&lt;hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (49 samples, 5.62%)</title><rect x="6.1927%" y="1061" width="5.6193%" height="15" fill="rgb(215,41,42)" fg:x="54" fg:w="49"/><text x="6.4427%" y="1071.50">hashbro..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (49 samples, 5.62%)</title><rect x="6.1927%" y="1045" width="5.6193%" height="15" fill="rgb(224,123,36)" fg:x="54" fg:w="49"/><text x="6.4427%" y="1055.50">hashbro..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (49 samples, 5.62%)</title><rect x="6.1927%" y="1029" width="5.6193%" height="15" fill="rgb(240,125,3)" fg:x="54" fg:w="49"/><text x="6.4427%" y="1039.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::vec::Vec&lt;usize&gt;)&gt; (49 samples, 5.62%)</title><rect x="6.1927%" y="1013" width="5.6193%" height="15" fill="rgb(205,98,50)" fg:x="54" fg:w="49"/><text x="6.4427%" y="1023.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (42 samples, 4.82%)</title><rect x="6.9954%" y="997" width="4.8165%" height="15" fill="rgb(205,185,37)" fg:x="61" fg:w="42"/><text x="7.2454%" y="1007.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (42 samples, 4.82%)</title><rect x="6.9954%" y="981" width="4.8165%" height="15" fill="rgb(238,207,15)" fg:x="61" fg:w="42"/><text x="7.2454%" y="991.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 4.82%)</title><rect x="6.9954%" y="965" width="4.8165%" height="15" fill="rgb(213,199,42)" fg:x="61" fg:w="42"/><text x="7.2454%" y="975.50">&lt;alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 4.82%)</title><rect x="6.9954%" y="949" width="4.8165%" height="15" fill="rgb(235,201,11)" fg:x="61" fg:w="42"/><text x="7.2454%" y="959.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (42 samples, 4.82%)</title><rect x="6.9954%" y="933" width="4.8165%" height="15" fill="rgb(207,46,11)" fg:x="61" fg:w="42"/><text x="7.2454%" y="943.50">alloc:..</text></g><g><title>_int_free (41 samples, 4.70%)</title><rect x="7.1101%" y="917" width="4.7018%" height="15" fill="rgb(241,35,35)" fg:x="62" fg:w="41"/><text x="7.3601%" y="927.50">_int_..</text></g><g><title>malloc_consolidate (39 samples, 4.47%)</title><rect x="7.3394%" y="901" width="4.4725%" height="15" fill="rgb(243,32,47)" fg:x="64" fg:w="39"/><text x="7.5894%" y="911.50">mallo..</text></g><g><title>unlink_chunk (12 samples, 1.38%)</title><rect x="10.4358%" y="885" width="1.3761%" height="15" fill="rgb(247,202,23)" fg:x="91" fg:w="12"/><text x="10.6858%" y="895.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.11%)</title><rect x="11.8119%" y="1077" width="0.1147%" height="15" fill="rgb(219,102,11)" fg:x="103" fg:w="1"/><text x="12.0619%" y="1087.50"></text></g><g><title>std::io::default_read_to_string (1 samples, 0.11%)</title><rect x="11.8119%" y="1061" width="0.1147%" height="15" fill="rgb(243,110,44)" fg:x="103" fg:w="1"/><text x="12.0619%" y="1071.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.11%)</title><rect x="11.8119%" y="1045" width="0.1147%" height="15" fill="rgb(222,74,54)" fg:x="103" fg:w="1"/><text x="12.0619%" y="1055.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (1 samples, 0.11%)</title><rect x="11.8119%" y="1029" width="0.1147%" height="15" fill="rgb(216,99,12)" fg:x="103" fg:w="1"/><text x="12.0619%" y="1039.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.11%)</title><rect x="11.8119%" y="1013" width="0.1147%" height="15" fill="rgb(226,22,26)" fg:x="103" fg:w="1"/><text x="12.0619%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="11.8119%" y="997" width="0.1147%" height="15" fill="rgb(217,163,10)" fg:x="103" fg:w="1"/><text x="12.0619%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.11%)</title><rect x="11.8119%" y="981" width="0.1147%" height="15" fill="rgb(213,25,53)" fg:x="103" fg:w="1"/><text x="12.0619%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.11%)</title><rect x="11.8119%" y="965" width="0.1147%" height="15" fill="rgb(252,105,26)" fg:x="103" fg:w="1"/><text x="12.0619%" y="975.50"></text></g><g><title>__libc_read (1 samples, 0.11%)</title><rect x="11.8119%" y="949" width="0.1147%" height="15" fill="rgb(220,39,43)" fg:x="103" fg:w="1"/><text x="12.0619%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="933" width="0.1147%" height="15" fill="rgb(229,68,48)" fg:x="103" fg:w="1"/><text x="12.0619%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="917" width="0.1147%" height="15" fill="rgb(252,8,32)" fg:x="103" fg:w="1"/><text x="12.0619%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="901" width="0.1147%" height="15" fill="rgb(223,20,43)" fg:x="103" fg:w="1"/><text x="12.0619%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="885" width="0.1147%" height="15" fill="rgb(229,81,49)" fg:x="103" fg:w="1"/><text x="12.0619%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="869" width="0.1147%" height="15" fill="rgb(236,28,36)" fg:x="103" fg:w="1"/><text x="12.0619%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="853" width="0.1147%" height="15" fill="rgb(249,185,26)" fg:x="103" fg:w="1"/><text x="12.0619%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="837" width="0.1147%" height="15" fill="rgb(249,174,33)" fg:x="103" fg:w="1"/><text x="12.0619%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="821" width="0.1147%" height="15" fill="rgb(233,201,37)" fg:x="103" fg:w="1"/><text x="12.0619%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="805" width="0.1147%" height="15" fill="rgb(221,78,26)" fg:x="103" fg:w="1"/><text x="12.0619%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="789" width="0.1147%" height="15" fill="rgb(250,127,30)" fg:x="103" fg:w="1"/><text x="12.0619%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.8119%" y="773" width="0.1147%" height="15" fill="rgb(230,49,44)" fg:x="103" fg:w="1"/><text x="12.0619%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;json::value::JsonValue&gt; (1 samples, 0.11%)</title><rect x="11.9266%" y="1077" width="0.1147%" height="15" fill="rgb(229,67,23)" fg:x="104" fg:w="1"/><text x="12.1766%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;json::value::JsonValue&gt;&gt; (1 samples, 0.11%)</title><rect x="11.9266%" y="1061" width="0.1147%" height="15" fill="rgb(249,83,47)" fg:x="104" fg:w="1"/><text x="12.1766%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="11.9266%" y="1045" width="0.1147%" height="15" fill="rgb(215,43,3)" fg:x="104" fg:w="1"/><text x="12.1766%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[json::value::JsonValue]&gt; (1 samples, 0.11%)</title><rect x="11.9266%" y="1029" width="0.1147%" height="15" fill="rgb(238,154,13)" fg:x="104" fg:w="1"/><text x="12.1766%" y="1039.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="11.9266%" y="1013" width="0.1147%" height="15" fill="rgb(219,56,2)" fg:x="104" fg:w="1"/><text x="12.1766%" y="1023.50"></text></g><g><title>__GI___libc_free (10 samples, 1.15%)</title><rect x="12.5000%" y="789" width="1.1468%" height="15" fill="rgb(233,0,4)" fg:x="109" fg:w="10"/><text x="12.7500%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.95%)</title><rect x="12.0413%" y="917" width="1.9495%" height="15" fill="rgb(235,30,7)" fg:x="105" fg:w="17"/><text x="12.2913%" y="927.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (17 samples, 1.95%)</title><rect x="12.0413%" y="901" width="1.9495%" height="15" fill="rgb(250,79,13)" fg:x="105" fg:w="17"/><text x="12.2913%" y="911.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (17 samples, 1.95%)</title><rect x="12.0413%" y="885" width="1.9495%" height="15" fill="rgb(211,146,34)" fg:x="105" fg:w="17"/><text x="12.2913%" y="895.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 1.95%)</title><rect x="12.0413%" y="869" width="1.9495%" height="15" fill="rgb(228,22,38)" fg:x="105" fg:w="17"/><text x="12.2913%" y="879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 1.95%)</title><rect x="12.0413%" y="853" width="1.9495%" height="15" fill="rgb(235,168,5)" fg:x="105" fg:w="17"/><text x="12.2913%" y="863.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.95%)</title><rect x="12.0413%" y="837" width="1.9495%" height="15" fill="rgb(221,155,16)" fg:x="105" fg:w="17"/><text x="12.2913%" y="847.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 1.49%)</title><rect x="12.5000%" y="821" width="1.4908%" height="15" fill="rgb(215,215,53)" fg:x="109" fg:w="13"/><text x="12.7500%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 1.49%)</title><rect x="12.5000%" y="805" width="1.4908%" height="15" fill="rgb(223,4,10)" fg:x="109" fg:w="13"/><text x="12.7500%" y="815.50"></text></g><g><title>_int_free (3 samples, 0.34%)</title><rect x="13.6468%" y="789" width="0.3440%" height="15" fill="rgb(234,103,6)" fg:x="119" fg:w="3"/><text x="13.8968%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;simsearch::SimSearch&lt;&amp;str&gt;&gt; (18 samples, 2.06%)</title><rect x="12.0413%" y="1077" width="2.0642%" height="15" fill="rgb(227,97,0)" fg:x="105" fg:w="18"/><text x="12.2913%" y="1087.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt; (18 samples, 2.06%)</title><rect x="12.0413%" y="1061" width="2.0642%" height="15" fill="rgb(234,150,53)" fg:x="105" fg:w="18"/><text x="12.2913%" y="1071.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::vec::Vec&lt;alloc::string::String&gt;,std::collections::hash::map::RandomState&gt;&gt; (18 samples, 2.06%)</title><rect x="12.0413%" y="1045" width="2.0642%" height="15" fill="rgb(228,201,54)" fg:x="105" fg:w="18"/><text x="12.2913%" y="1055.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::vec::Vec&lt;alloc::string::String&gt;)&gt;&gt; (18 samples, 2.06%)</title><rect x="12.0413%" y="1029" width="2.0642%" height="15" fill="rgb(222,22,37)" fg:x="105" fg:w="18"/><text x="12.2913%" y="1039.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 2.06%)</title><rect x="12.0413%" y="1013" width="2.0642%" height="15" fill="rgb(237,53,32)" fg:x="105" fg:w="18"/><text x="12.2913%" y="1023.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (18 samples, 2.06%)</title><rect x="12.0413%" y="997" width="2.0642%" height="15" fill="rgb(233,25,53)" fg:x="105" fg:w="18"/><text x="12.2913%" y="1007.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (18 samples, 2.06%)</title><rect x="12.0413%" y="981" width="2.0642%" height="15" fill="rgb(210,40,34)" fg:x="105" fg:w="18"/><text x="12.2913%" y="991.50">h..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (18 samples, 2.06%)</title><rect x="12.0413%" y="965" width="2.0642%" height="15" fill="rgb(241,220,44)" fg:x="105" fg:w="18"/><text x="12.2913%" y="975.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;(usize,alloc::vec::Vec&lt;alloc::string::String&gt;)&gt; (18 samples, 2.06%)</title><rect x="12.0413%" y="949" width="2.0642%" height="15" fill="rgb(235,28,35)" fg:x="105" fg:w="18"/><text x="12.2913%" y="959.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (18 samples, 2.06%)</title><rect x="12.0413%" y="933" width="2.0642%" height="15" fill="rgb(210,56,17)" fg:x="105" fg:w="18"/><text x="12.2913%" y="943.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.11%)</title><rect x="13.9908%" y="917" width="0.1147%" height="15" fill="rgb(224,130,29)" fg:x="122" fg:w="1"/><text x="14.2408%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="13.9908%" y="901" width="0.1147%" height="15" fill="rgb(235,212,8)" fg:x="122" fg:w="1"/><text x="14.2408%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="13.9908%" y="885" width="0.1147%" height="15" fill="rgb(223,33,50)" fg:x="122" fg:w="1"/><text x="14.2408%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="13.9908%" y="869" width="0.1147%" height="15" fill="rgb(219,149,13)" fg:x="122" fg:w="1"/><text x="14.2408%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="13.9908%" y="853" width="0.1147%" height="15" fill="rgb(250,156,29)" fg:x="122" fg:w="1"/><text x="14.2408%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="14.2202%" y="1045" width="0.1147%" height="15" fill="rgb(216,193,19)" fg:x="124" fg:w="1"/><text x="14.4702%" y="1055.50"></text></g><g><title>json::value::implements::&lt;impl core::convert::From&lt;&amp;str&gt; for json::value::JsonValue&gt;::from (1 samples, 0.11%)</title><rect x="14.2202%" y="1029" width="0.1147%" height="15" fill="rgb(216,135,14)" fg:x="124" fg:w="1"/><text x="14.4702%" y="1039.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="14.2202%" y="1013" width="0.1147%" height="15" fill="rgb(241,47,5)" fg:x="124" fg:w="1"/><text x="14.4702%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.11%)</title><rect x="14.2202%" y="997" width="0.1147%" height="15" fill="rgb(233,42,35)" fg:x="124" fg:w="1"/><text x="14.4702%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.11%)</title><rect x="14.2202%" y="981" width="0.1147%" height="15" fill="rgb(231,13,6)" fg:x="124" fg:w="1"/><text x="14.4702%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.11%)</title><rect x="14.2202%" y="965" width="0.1147%" height="15" fill="rgb(207,181,40)" fg:x="124" fg:w="1"/><text x="14.4702%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="14.2202%" y="949" width="0.1147%" height="15" fill="rgb(254,173,49)" fg:x="124" fg:w="1"/><text x="14.4702%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="14.2202%" y="933" width="0.1147%" height="15" fill="rgb(221,1,38)" fg:x="124" fg:w="1"/><text x="14.4702%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="14.2202%" y="917" width="0.1147%" height="15" fill="rgb(206,124,46)" fg:x="124" fg:w="1"/><text x="14.4702%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="14.2202%" y="901" width="0.1147%" height="15" fill="rgb(249,21,11)" fg:x="124" fg:w="1"/><text x="14.4702%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="14.2202%" y="885" width="0.1147%" height="15" fill="rgb(222,201,40)" fg:x="124" fg:w="1"/><text x="14.4702%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="14.2202%" y="869" width="0.1147%" height="15" fill="rgb(235,61,29)" fg:x="124" fg:w="1"/><text x="14.4702%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="14.2202%" y="853" width="0.1147%" height="15" fill="rgb(219,207,3)" fg:x="124" fg:w="1"/><text x="14.4702%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="14.2202%" y="837" width="0.1147%" height="15" fill="rgb(222,56,46)" fg:x="124" fg:w="1"/><text x="14.4702%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="14.2202%" y="821" width="0.1147%" height="15" fill="rgb(239,76,54)" fg:x="124" fg:w="1"/><text x="14.4702%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="14.2202%" y="805" width="0.1147%" height="15" fill="rgb(231,124,27)" fg:x="124" fg:w="1"/><text x="14.4702%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="14.2202%" y="789" width="0.1147%" height="15" fill="rgb(249,195,6)" fg:x="124" fg:w="1"/><text x="14.4702%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="14.2202%" y="773" width="0.1147%" height="15" fill="rgb(237,174,47)" fg:x="124" fg:w="1"/><text x="14.4702%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="14.2202%" y="757" width="0.1147%" height="15" fill="rgb(206,201,31)" fg:x="124" fg:w="1"/><text x="14.4702%" y="767.50"></text></g><g><title>json::parser::Parser::bump (1 samples, 0.11%)</title><rect x="14.3349%" y="1045" width="0.1147%" height="15" fill="rgb(231,57,52)" fg:x="125" fg:w="1"/><text x="14.5849%" y="1055.50"></text></g><g><title>json::parser::parse (4 samples, 0.46%)</title><rect x="14.1055%" y="1077" width="0.4587%" height="15" fill="rgb(248,177,22)" fg:x="123" fg:w="4"/><text x="14.3555%" y="1087.50"></text></g><g><title>json::parser::Parser::parse (4 samples, 0.46%)</title><rect x="14.1055%" y="1061" width="0.4587%" height="15" fill="rgb(215,211,37)" fg:x="123" fg:w="4"/><text x="14.3555%" y="1071.50"></text></g><g><title>json::parser::Parser::read_byte (1 samples, 0.11%)</title><rect x="14.4495%" y="1045" width="0.1147%" height="15" fill="rgb(241,128,51)" fg:x="126" fg:w="1"/><text x="14.6995%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.23%)</title><rect x="14.7936%" y="949" width="0.2294%" height="15" fill="rgb(227,165,31)" fg:x="129" fg:w="2"/><text x="15.0436%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.23%)</title><rect x="14.7936%" y="933" width="0.2294%" height="15" fill="rgb(228,167,24)" fg:x="129" fg:w="2"/><text x="15.0436%" y="943.50"></text></g><g><title>_int_malloc (6 samples, 0.69%)</title><rect x="15.1376%" y="789" width="0.6881%" height="15" fill="rgb(228,143,12)" fg:x="132" fg:w="6"/><text x="15.3876%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="773" width="0.1147%" height="15" fill="rgb(249,149,8)" fg:x="137" fg:w="1"/><text x="15.9610%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="757" width="0.1147%" height="15" fill="rgb(243,35,44)" fg:x="137" fg:w="1"/><text x="15.9610%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="741" width="0.1147%" height="15" fill="rgb(246,89,9)" fg:x="137" fg:w="1"/><text x="15.9610%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="725" width="0.1147%" height="15" fill="rgb(233,213,13)" fg:x="137" fg:w="1"/><text x="15.9610%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="709" width="0.1147%" height="15" fill="rgb(233,141,41)" fg:x="137" fg:w="1"/><text x="15.9610%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="693" width="0.1147%" height="15" fill="rgb(239,167,4)" fg:x="137" fg:w="1"/><text x="15.9610%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="677" width="0.1147%" height="15" fill="rgb(209,217,16)" fg:x="137" fg:w="1"/><text x="15.9610%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="661" width="0.1147%" height="15" fill="rgb(219,88,35)" fg:x="137" fg:w="1"/><text x="15.9610%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="645" width="0.1147%" height="15" fill="rgb(220,193,23)" fg:x="137" fg:w="1"/><text x="15.9610%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="15.7110%" y="629" width="0.1147%" height="15" fill="rgb(230,90,52)" fg:x="137" fg:w="1"/><text x="15.9610%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.92%)</title><rect x="15.0229%" y="901" width="0.9174%" height="15" fill="rgb(252,106,19)" fg:x="131" fg:w="8"/><text x="15.2729%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.92%)</title><rect x="15.0229%" y="885" width="0.9174%" height="15" fill="rgb(206,74,20)" fg:x="131" fg:w="8"/><text x="15.2729%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.92%)</title><rect x="15.0229%" y="869" width="0.9174%" height="15" fill="rgb(230,138,44)" fg:x="131" fg:w="8"/><text x="15.2729%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.92%)</title><rect x="15.0229%" y="853" width="0.9174%" height="15" fill="rgb(235,182,43)" fg:x="131" fg:w="8"/><text x="15.2729%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.92%)</title><rect x="15.0229%" y="837" width="0.9174%" height="15" fill="rgb(242,16,51)" fg:x="131" fg:w="8"/><text x="15.2729%" y="847.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.80%)</title><rect x="15.1376%" y="821" width="0.8028%" height="15" fill="rgb(248,9,4)" fg:x="132" fg:w="7"/><text x="15.3876%" y="831.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.80%)</title><rect x="15.1376%" y="805" width="0.8028%" height="15" fill="rgb(210,31,22)" fg:x="132" fg:w="7"/><text x="15.3876%" y="815.50"></text></g><g><title>tcache_get (1 samples, 0.11%)</title><rect x="15.8257%" y="789" width="0.1147%" height="15" fill="rgb(239,54,39)" fg:x="138" fg:w="1"/><text x="16.0757%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 1.38%)</title><rect x="14.7936%" y="981" width="1.3761%" height="15" fill="rgb(230,99,41)" fg:x="129" fg:w="12"/><text x="15.0436%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 1.38%)</title><rect x="14.7936%" y="965" width="1.3761%" height="15" fill="rgb(253,106,12)" fg:x="129" fg:w="12"/><text x="15.0436%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 1.15%)</title><rect x="15.0229%" y="949" width="1.1468%" height="15" fill="rgb(213,46,41)" fg:x="131" fg:w="10"/><text x="15.2729%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 1.15%)</title><rect x="15.0229%" y="933" width="1.1468%" height="15" fill="rgb(215,133,35)" fg:x="131" fg:w="10"/><text x="15.2729%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 1.15%)</title><rect x="15.0229%" y="917" width="1.1468%" height="15" fill="rgb(213,28,5)" fg:x="131" fg:w="10"/><text x="15.2729%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.23%)</title><rect x="15.9404%" y="901" width="0.2294%" height="15" fill="rgb(215,77,49)" fg:x="139" fg:w="2"/><text x="16.1904%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="15.9404%" y="885" width="0.2294%" height="15" fill="rgb(248,100,22)" fg:x="139" fg:w="2"/><text x="16.1904%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="15.9404%" y="869" width="0.2294%" height="15" fill="rgb(208,67,9)" fg:x="139" fg:w="2"/><text x="16.1904%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="981" width="0.1147%" height="15" fill="rgb(219,133,21)" fg:x="141" fg:w="1"/><text x="16.4197%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="965" width="0.1147%" height="15" fill="rgb(246,46,29)" fg:x="141" fg:w="1"/><text x="16.4197%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="949" width="0.1147%" height="15" fill="rgb(246,185,52)" fg:x="141" fg:w="1"/><text x="16.4197%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="933" width="0.1147%" height="15" fill="rgb(252,136,11)" fg:x="141" fg:w="1"/><text x="16.4197%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="917" width="0.1147%" height="15" fill="rgb(219,138,53)" fg:x="141" fg:w="1"/><text x="16.4197%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="901" width="0.1147%" height="15" fill="rgb(211,51,23)" fg:x="141" fg:w="1"/><text x="16.4197%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="885" width="0.1147%" height="15" fill="rgb(247,221,28)" fg:x="141" fg:w="1"/><text x="16.4197%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="869" width="0.1147%" height="15" fill="rgb(251,222,45)" fg:x="141" fg:w="1"/><text x="16.4197%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="853" width="0.1147%" height="15" fill="rgb(217,162,53)" fg:x="141" fg:w="1"/><text x="16.4197%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="837" width="0.1147%" height="15" fill="rgb(229,93,14)" fg:x="141" fg:w="1"/><text x="16.4197%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="821" width="0.1147%" height="15" fill="rgb(209,67,49)" fg:x="141" fg:w="1"/><text x="16.4197%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="805" width="0.1147%" height="15" fill="rgb(213,87,29)" fg:x="141" fg:w="1"/><text x="16.4197%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="789" width="0.1147%" height="15" fill="rgb(205,151,52)" fg:x="141" fg:w="1"/><text x="16.4197%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="773" width="0.1147%" height="15" fill="rgb(253,215,39)" fg:x="141" fg:w="1"/><text x="16.4197%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="757" width="0.1147%" height="15" fill="rgb(221,220,41)" fg:x="141" fg:w="1"/><text x="16.4197%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="741" width="0.1147%" height="15" fill="rgb(218,133,21)" fg:x="141" fg:w="1"/><text x="16.4197%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="725" width="0.1147%" height="15" fill="rgb(221,193,43)" fg:x="141" fg:w="1"/><text x="16.4197%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="709" width="0.1147%" height="15" fill="rgb(240,128,52)" fg:x="141" fg:w="1"/><text x="16.4197%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="693" width="0.1147%" height="15" fill="rgb(253,114,12)" fg:x="141" fg:w="1"/><text x="16.4197%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="677" width="0.1147%" height="15" fill="rgb(215,223,47)" fg:x="141" fg:w="1"/><text x="16.4197%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="661" width="0.1147%" height="15" fill="rgb(248,225,23)" fg:x="141" fg:w="1"/><text x="16.4197%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="645" width="0.1147%" height="15" fill="rgb(250,108,0)" fg:x="141" fg:w="1"/><text x="16.4197%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="629" width="0.1147%" height="15" fill="rgb(228,208,7)" fg:x="141" fg:w="1"/><text x="16.4197%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="613" width="0.1147%" height="15" fill="rgb(244,45,10)" fg:x="141" fg:w="1"/><text x="16.4197%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="597" width="0.1147%" height="15" fill="rgb(207,125,25)" fg:x="141" fg:w="1"/><text x="16.4197%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="581" width="0.1147%" height="15" fill="rgb(210,195,18)" fg:x="141" fg:w="1"/><text x="16.4197%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="565" width="0.1147%" height="15" fill="rgb(249,80,12)" fg:x="141" fg:w="1"/><text x="16.4197%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="549" width="0.1147%" height="15" fill="rgb(221,65,9)" fg:x="141" fg:w="1"/><text x="16.4197%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="533" width="0.1147%" height="15" fill="rgb(235,49,36)" fg:x="141" fg:w="1"/><text x="16.4197%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="16.1697%" y="517" width="0.1147%" height="15" fill="rgb(225,32,20)" fg:x="141" fg:w="1"/><text x="16.4197%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 2.06%)</title><rect x="14.7936%" y="1045" width="2.0642%" height="15" fill="rgb(215,141,46)" fg:x="129" fg:w="18"/><text x="15.0436%" y="1055.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 2.06%)</title><rect x="14.7936%" y="1029" width="2.0642%" height="15" fill="rgb(250,160,47)" fg:x="129" fg:w="18"/><text x="15.0436%" y="1039.50">a..</text></g><g><title>alloc::slice::hack::to_vec (18 samples, 2.06%)</title><rect x="14.7936%" y="1013" width="2.0642%" height="15" fill="rgb(216,222,40)" fg:x="129" fg:w="18"/><text x="15.0436%" y="1023.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 2.06%)</title><rect x="14.7936%" y="997" width="2.0642%" height="15" fill="rgb(234,217,39)" fg:x="129" fg:w="18"/><text x="15.0436%" y="1007.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.57%)</title><rect x="16.2844%" y="981" width="0.5734%" height="15" fill="rgb(207,178,40)" fg:x="142" fg:w="5"/><text x="16.5344%" y="991.50"></text></g><g><title>__memcmp_avx2_movbe (12 samples, 1.38%)</title><rect x="17.0872%" y="885" width="1.3761%" height="15" fill="rgb(221,136,13)" fg:x="149" fg:w="12"/><text x="17.3372%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort::{{closure}} (14 samples, 1.61%)</title><rect x="16.9725%" y="997" width="1.6055%" height="15" fill="rgb(249,199,10)" fg:x="148" fg:w="14"/><text x="17.2225%" y="1007.50"></text></g><g><title>core::cmp::PartialOrd::lt (14 samples, 1.61%)</title><rect x="16.9725%" y="981" width="1.6055%" height="15" fill="rgb(249,222,13)" fg:x="148" fg:w="14"/><text x="17.2225%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialOrd&gt;::partial_cmp (14 samples, 1.61%)</title><rect x="16.9725%" y="965" width="1.6055%" height="15" fill="rgb(244,185,38)" fg:x="148" fg:w="14"/><text x="17.2225%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::PartialOrd&gt;::partial_cmp (14 samples, 1.61%)</title><rect x="16.9725%" y="949" width="1.6055%" height="15" fill="rgb(236,202,9)" fg:x="148" fg:w="14"/><text x="17.2225%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (14 samples, 1.61%)</title><rect x="16.9725%" y="933" width="1.6055%" height="15" fill="rgb(250,229,37)" fg:x="148" fg:w="14"/><text x="17.2225%" y="943.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (14 samples, 1.61%)</title><rect x="16.9725%" y="917" width="1.6055%" height="15" fill="rgb(206,174,23)" fg:x="148" fg:w="14"/><text x="17.2225%" y="927.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (14 samples, 1.61%)</title><rect x="16.9725%" y="901" width="1.6055%" height="15" fill="rgb(211,33,43)" fg:x="148" fg:w="14"/><text x="17.2225%" y="911.50"></text></g><g><title>core::cmp::min (1 samples, 0.11%)</title><rect x="18.4633%" y="885" width="0.1147%" height="15" fill="rgb(245,58,50)" fg:x="161" fg:w="1"/><text x="18.7133%" y="895.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.11%)</title><rect x="18.4633%" y="869" width="0.1147%" height="15" fill="rgb(244,68,36)" fg:x="161" fg:w="1"/><text x="18.7133%" y="879.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.11%)</title><rect x="18.4633%" y="853" width="0.1147%" height="15" fill="rgb(232,229,15)" fg:x="161" fg:w="1"/><text x="18.7133%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="18.5780%" y="997" width="0.1147%" height="15" fill="rgb(254,30,23)" fg:x="162" fg:w="1"/><text x="18.8280%" y="1007.50"></text></g><g><title>alloc::slice::insert_head (16 samples, 1.83%)</title><rect x="16.9725%" y="1013" width="1.8349%" height="15" fill="rgb(235,160,14)" fg:x="148" fg:w="16"/><text x="17.2225%" y="1023.50">a..</text></g><g><title>core::ptr::read (1 samples, 0.11%)</title><rect x="18.6927%" y="997" width="0.1147%" height="15" fill="rgb(212,155,44)" fg:x="163" fg:w="1"/><text x="18.9427%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (18 samples, 2.06%)</title><rect x="16.8578%" y="1045" width="2.0642%" height="15" fill="rgb(226,2,50)" fg:x="147" fg:w="18"/><text x="17.1078%" y="1055.50">a..</text></g><g><title>alloc::slice::merge_sort (18 samples, 2.06%)</title><rect x="16.8578%" y="1029" width="2.0642%" height="15" fill="rgb(234,177,6)" fg:x="147" fg:w="18"/><text x="17.1078%" y="1039.50">a..</text></g><g><title>alloc::slice::merge (1 samples, 0.11%)</title><rect x="18.8073%" y="1013" width="0.1147%" height="15" fill="rgb(217,24,9)" fg:x="164" fg:w="1"/><text x="19.0573%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="18.8073%" y="997" width="0.1147%" height="15" fill="rgb(220,13,46)" fg:x="164" fg:w="1"/><text x="19.0573%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.11%)</title><rect x="18.9220%" y="965" width="0.1147%" height="15" fill="rgb(239,221,27)" fg:x="165" fg:w="1"/><text x="19.1720%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.11%)</title><rect x="18.9220%" y="949" width="0.1147%" height="15" fill="rgb(222,198,25)" fg:x="165" fg:w="1"/><text x="19.1720%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.11%)</title><rect x="18.9220%" y="933" width="0.1147%" height="15" fill="rgb(211,99,13)" fg:x="165" fg:w="1"/><text x="19.1720%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup::{{closure}} (4 samples, 0.46%)</title><rect x="18.9220%" y="1013" width="0.4587%" height="15" fill="rgb(232,111,31)" fg:x="165" fg:w="4"/><text x="19.1720%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;mut B&gt; for &amp;mut A&gt;::eq (4 samples, 0.46%)</title><rect x="18.9220%" y="997" width="0.4587%" height="15" fill="rgb(245,82,37)" fg:x="165" fg:w="4"/><text x="19.1720%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.46%)</title><rect x="18.9220%" y="981" width="0.4587%" height="15" fill="rgb(227,149,46)" fg:x="165" fg:w="4"/><text x="19.1720%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.34%)</title><rect x="19.0367%" y="965" width="0.3440%" height="15" fill="rgb(218,36,50)" fg:x="166" fg:w="3"/><text x="19.2867%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.34%)</title><rect x="19.0367%" y="949" width="0.3440%" height="15" fill="rgb(226,80,48)" fg:x="166" fg:w="3"/><text x="19.2867%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.23%)</title><rect x="19.1514%" y="933" width="0.2294%" height="15" fill="rgb(238,224,15)" fg:x="167" fg:w="2"/><text x="19.4014%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.23%)</title><rect x="19.1514%" y="917" width="0.2294%" height="15" fill="rgb(241,136,10)" fg:x="167" fg:w="2"/><text x="19.4014%" y="927.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.11%)</title><rect x="19.2661%" y="901" width="0.1147%" height="15" fill="rgb(208,32,45)" fg:x="168" fg:w="1"/><text x="19.5161%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup (5 samples, 0.57%)</title><rect x="18.9220%" y="1045" width="0.5734%" height="15" fill="rgb(207,135,9)" fg:x="165" fg:w="5"/><text x="19.1720%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (5 samples, 0.57%)</title><rect x="18.9220%" y="1029" width="0.5734%" height="15" fill="rgb(206,86,44)" fg:x="165" fg:w="5"/><text x="19.1720%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.11%)</title><rect x="19.3807%" y="1013" width="0.1147%" height="15" fill="rgb(245,177,15)" fg:x="169" fg:w="1"/><text x="19.6307%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="19.3807%" y="997" width="0.1147%" height="15" fill="rgb(206,64,50)" fg:x="169" fg:w="1"/><text x="19.6307%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="19.3807%" y="981" width="0.1147%" height="15" fill="rgb(234,36,40)" fg:x="169" fg:w="1"/><text x="19.6307%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="19.3807%" y="965" width="0.1147%" height="15" fill="rgb(213,64,8)" fg:x="169" fg:w="1"/><text x="19.6307%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="19.3807%" y="949" width="0.1147%" height="15" fill="rgb(210,75,36)" fg:x="169" fg:w="1"/><text x="19.6307%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="19.3807%" y="933" width="0.1147%" height="15" fill="rgb(229,88,21)" fg:x="169" fg:w="1"/><text x="19.6307%" y="943.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="19.3807%" y="917" width="0.1147%" height="15" fill="rgb(252,204,47)" fg:x="169" fg:w="1"/><text x="19.6307%" y="927.50"></text></g><g><title>tcache_put (1 samples, 0.11%)</title><rect x="19.3807%" y="901" width="0.1147%" height="15" fill="rgb(208,77,27)" fg:x="169" fg:w="1"/><text x="19.6307%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="885" width="0.1147%" height="15" fill="rgb(221,76,26)" fg:x="172" fg:w="1"/><text x="19.9748%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="869" width="0.1147%" height="15" fill="rgb(225,139,18)" fg:x="172" fg:w="1"/><text x="19.9748%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="853" width="0.1147%" height="15" fill="rgb(230,137,11)" fg:x="172" fg:w="1"/><text x="19.9748%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="837" width="0.1147%" height="15" fill="rgb(212,28,1)" fg:x="172" fg:w="1"/><text x="19.9748%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="821" width="0.1147%" height="15" fill="rgb(248,164,17)" fg:x="172" fg:w="1"/><text x="19.9748%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="805" width="0.1147%" height="15" fill="rgb(222,171,42)" fg:x="172" fg:w="1"/><text x="19.9748%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="789" width="0.1147%" height="15" fill="rgb(243,84,45)" fg:x="172" fg:w="1"/><text x="19.9748%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="773" width="0.1147%" height="15" fill="rgb(252,49,23)" fg:x="172" fg:w="1"/><text x="19.9748%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="757" width="0.1147%" height="15" fill="rgb(215,19,7)" fg:x="172" fg:w="1"/><text x="19.9748%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="741" width="0.1147%" height="15" fill="rgb(238,81,41)" fg:x="172" fg:w="1"/><text x="19.9748%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="725" width="0.1147%" height="15" fill="rgb(210,199,37)" fg:x="172" fg:w="1"/><text x="19.9748%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="709" width="0.1147%" height="15" fill="rgb(244,192,49)" fg:x="172" fg:w="1"/><text x="19.9748%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="693" width="0.1147%" height="15" fill="rgb(226,211,11)" fg:x="172" fg:w="1"/><text x="19.9748%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="677" width="0.1147%" height="15" fill="rgb(236,162,54)" fg:x="172" fg:w="1"/><text x="19.9748%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="661" width="0.1147%" height="15" fill="rgb(220,229,9)" fg:x="172" fg:w="1"/><text x="19.9748%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="645" width="0.1147%" height="15" fill="rgb(250,87,22)" fg:x="172" fg:w="1"/><text x="19.9748%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="629" width="0.1147%" height="15" fill="rgb(239,43,17)" fg:x="172" fg:w="1"/><text x="19.9748%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="613" width="0.1147%" height="15" fill="rgb(231,177,25)" fg:x="172" fg:w="1"/><text x="19.9748%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="597" width="0.1147%" height="15" fill="rgb(219,179,1)" fg:x="172" fg:w="1"/><text x="19.9748%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="581" width="0.1147%" height="15" fill="rgb(238,219,53)" fg:x="172" fg:w="1"/><text x="19.9748%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="565" width="0.1147%" height="15" fill="rgb(232,167,36)" fg:x="172" fg:w="1"/><text x="19.9748%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="549" width="0.1147%" height="15" fill="rgb(244,19,51)" fg:x="172" fg:w="1"/><text x="19.9748%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="533" width="0.1147%" height="15" fill="rgb(224,6,22)" fg:x="172" fg:w="1"/><text x="19.9748%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="517" width="0.1147%" height="15" fill="rgb(224,145,5)" fg:x="172" fg:w="1"/><text x="19.9748%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="501" width="0.1147%" height="15" fill="rgb(234,130,49)" fg:x="172" fg:w="1"/><text x="19.9748%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="485" width="0.1147%" height="15" fill="rgb(254,6,2)" fg:x="172" fg:w="1"/><text x="19.9748%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="469" width="0.1147%" height="15" fill="rgb(208,96,46)" fg:x="172" fg:w="1"/><text x="19.9748%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="453" width="0.1147%" height="15" fill="rgb(239,3,39)" fg:x="172" fg:w="1"/><text x="19.9748%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="437" width="0.1147%" height="15" fill="rgb(233,210,1)" fg:x="172" fg:w="1"/><text x="19.9748%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="19.7248%" y="421" width="0.1147%" height="15" fill="rgb(244,137,37)" fg:x="172" fg:w="1"/><text x="19.9748%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.92%)</title><rect x="19.4954%" y="1045" width="0.9174%" height="15" fill="rgb(240,136,2)" fg:x="170" fg:w="8"/><text x="19.7454%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.80%)</title><rect x="19.6101%" y="1029" width="0.8028%" height="15" fill="rgb(239,18,37)" fg:x="171" fg:w="7"/><text x="19.8601%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.80%)</title><rect x="19.6101%" y="1013" width="0.8028%" height="15" fill="rgb(218,185,22)" fg:x="171" fg:w="7"/><text x="19.8601%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.80%)</title><rect x="19.6101%" y="997" width="0.8028%" height="15" fill="rgb(225,218,4)" fg:x="171" fg:w="7"/><text x="19.8601%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.80%)</title><rect x="19.6101%" y="981" width="0.8028%" height="15" fill="rgb(230,182,32)" fg:x="171" fg:w="7"/><text x="19.8601%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.80%)</title><rect x="19.6101%" y="965" width="0.8028%" height="15" fill="rgb(242,56,43)" fg:x="171" fg:w="7"/><text x="19.8601%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.80%)</title><rect x="19.6101%" y="949" width="0.8028%" height="15" fill="rgb(233,99,24)" fg:x="171" fg:w="7"/><text x="19.8601%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.80%)</title><rect x="19.6101%" y="933" width="0.8028%" height="15" fill="rgb(234,209,42)" fg:x="171" fg:w="7"/><text x="19.8601%" y="943.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.80%)</title><rect x="19.6101%" y="917" width="0.8028%" height="15" fill="rgb(227,7,12)" fg:x="171" fg:w="7"/><text x="19.8601%" y="927.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.80%)</title><rect x="19.6101%" y="901" width="0.8028%" height="15" fill="rgb(245,203,43)" fg:x="171" fg:w="7"/><text x="19.8601%" y="911.50"></text></g><g><title>_int_realloc (5 samples, 0.57%)</title><rect x="19.8394%" y="885" width="0.5734%" height="15" fill="rgb(238,205,33)" fg:x="173" fg:w="5"/><text x="20.0894%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.34%)</title><rect x="20.0688%" y="869" width="0.3440%" height="15" fill="rgb(231,56,7)" fg:x="175" fg:w="3"/><text x="20.3188%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="20.2982%" y="853" width="0.1147%" height="15" fill="rgb(244,186,29)" fg:x="177" fg:w="1"/><text x="20.5482%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="20.2982%" y="837" width="0.1147%" height="15" fill="rgb(234,111,31)" fg:x="177" fg:w="1"/><text x="20.5482%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="20.2982%" y="821" width="0.1147%" height="15" fill="rgb(241,149,10)" fg:x="177" fg:w="1"/><text x="20.5482%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="20.2982%" y="805" width="0.1147%" height="15" fill="rgb(249,206,44)" fg:x="177" fg:w="1"/><text x="20.5482%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.69%)</title><rect x="21.7890%" y="997" width="0.6881%" height="15" fill="rgb(251,153,30)" fg:x="190" fg:w="6"/><text x="22.0390%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (31 samples, 3.56%)</title><rect x="20.4128%" y="1029" width="3.5550%" height="15" fill="rgb(239,152,38)" fg:x="178" fg:w="31"/><text x="20.6628%" y="1039.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::process_one (19 samples, 2.18%)</title><rect x="21.7890%" y="1013" width="2.1789%" height="15" fill="rgb(249,139,47)" fg:x="190" fg:w="19"/><text x="22.0390%" y="1023.50">a..</text></g><g><title>simsearch::SimSearch&lt;Id&gt;::delete::{{closure}} (13 samples, 1.49%)</title><rect x="22.4771%" y="997" width="1.4908%" height="15" fill="rgb(244,64,35)" fg:x="196" fg:w="13"/><text x="22.7271%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (6 samples, 0.69%)</title><rect x="23.2798%" y="981" width="0.6881%" height="15" fill="rgb(216,46,15)" fg:x="203" fg:w="6"/><text x="23.5298%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::ne (6 samples, 0.69%)</title><rect x="23.2798%" y="965" width="0.6881%" height="15" fill="rgb(250,74,19)" fg:x="203" fg:w="6"/><text x="23.5298%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="23.9679%" y="981" width="0.1147%" height="15" fill="rgb(249,42,33)" fg:x="209" fg:w="1"/><text x="24.2179%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="23.9679%" y="965" width="0.1147%" height="15" fill="rgb(242,149,17)" fg:x="209" fg:w="1"/><text x="24.2179%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.11%)</title><rect x="23.9679%" y="949" width="0.1147%" height="15" fill="rgb(244,29,21)" fg:x="209" fg:w="1"/><text x="24.2179%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="23.9679%" y="933" width="0.1147%" height="15" fill="rgb(220,130,37)" fg:x="209" fg:w="1"/><text x="24.2179%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="23.9679%" y="917" width="0.1147%" height="15" fill="rgb(211,67,2)" fg:x="209" fg:w="1"/><text x="24.2179%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="23.9679%" y="901" width="0.1147%" height="15" fill="rgb(235,68,52)" fg:x="209" fg:w="1"/><text x="24.2179%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="23.9679%" y="885" width="0.1147%" height="15" fill="rgb(246,142,3)" fg:x="209" fg:w="1"/><text x="24.2179%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.11%)</title><rect x="24.0826%" y="949" width="0.1147%" height="15" fill="rgb(241,25,7)" fg:x="210" fg:w="1"/><text x="24.3326%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.11%)</title><rect x="24.0826%" y="933" width="0.1147%" height="15" fill="rgb(242,119,39)" fg:x="210" fg:w="1"/><text x="24.3326%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.11%)</title><rect x="24.0826%" y="917" width="0.1147%" height="15" fill="rgb(241,98,45)" fg:x="210" fg:w="1"/><text x="24.3326%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.11%)</title><rect x="24.0826%" y="901" width="0.1147%" height="15" fill="rgb(254,28,30)" fg:x="210" fg:w="1"/><text x="24.3326%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.11%)</title><rect x="24.0826%" y="885" width="0.1147%" height="15" fill="rgb(241,142,54)" fg:x="210" fg:w="1"/><text x="24.3326%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.11%)</title><rect x="24.0826%" y="869" width="0.1147%" height="15" fill="rgb(222,85,15)" fg:x="210" fg:w="1"/><text x="24.3326%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.46%)</title><rect x="23.9679%" y="1029" width="0.4587%" height="15" fill="rgb(210,85,47)" fg:x="209" fg:w="4"/><text x="24.2179%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.46%)</title><rect x="23.9679%" y="1013" width="0.4587%" height="15" fill="rgb(224,206,25)" fg:x="209" fg:w="4"/><text x="24.2179%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.46%)</title><rect x="23.9679%" y="997" width="0.4587%" height="15" fill="rgb(243,201,19)" fg:x="209" fg:w="4"/><text x="24.2179%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.34%)</title><rect x="24.0826%" y="981" width="0.3440%" height="15" fill="rgb(236,59,4)" fg:x="210" fg:w="3"/><text x="24.3326%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.34%)</title><rect x="24.0826%" y="965" width="0.3440%" height="15" fill="rgb(254,179,45)" fg:x="210" fg:w="3"/><text x="24.3326%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.23%)</title><rect x="24.1972%" y="949" width="0.2294%" height="15" fill="rgb(226,14,10)" fg:x="211" fg:w="2"/><text x="24.4472%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.23%)</title><rect x="24.1972%" y="933" width="0.2294%" height="15" fill="rgb(244,27,41)" fg:x="211" fg:w="2"/><text x="24.4472%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.23%)</title><rect x="24.1972%" y="917" width="0.2294%" height="15" fill="rgb(235,35,32)" fg:x="211" fg:w="2"/><text x="24.4472%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.23%)</title><rect x="24.1972%" y="901" width="0.2294%" height="15" fill="rgb(218,68,31)" fg:x="211" fg:w="2"/><text x="24.4472%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.23%)</title><rect x="24.1972%" y="885" width="0.2294%" height="15" fill="rgb(207,120,37)" fg:x="211" fg:w="2"/><text x="24.4472%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="24.1972%" y="869" width="0.2294%" height="15" fill="rgb(227,98,0)" fg:x="211" fg:w="2"/><text x="24.4472%" y="879.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::delete (36 samples, 4.13%)</title><rect x="20.4128%" y="1045" width="4.1284%" height="15" fill="rgb(207,7,3)" fg:x="178" fg:w="36"/><text x="20.6628%" y="1055.50">sims..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.11%)</title><rect x="24.4266%" y="1029" width="0.1147%" height="15" fill="rgb(206,98,19)" fg:x="213" fg:w="1"/><text x="24.6766%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="24.4266%" y="1013" width="0.1147%" height="15" fill="rgb(217,5,26)" fg:x="213" fg:w="1"/><text x="24.6766%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.11%)</title><rect x="24.4266%" y="997" width="0.1147%" height="15" fill="rgb(235,190,38)" fg:x="213" fg:w="1"/><text x="24.6766%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="24.4266%" y="981" width="0.1147%" height="15" fill="rgb(247,86,24)" fg:x="213" fg:w="1"/><text x="24.6766%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="24.4266%" y="965" width="0.1147%" height="15" fill="rgb(205,101,16)" fg:x="213" fg:w="1"/><text x="24.6766%" y="975.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.11%)</title><rect x="24.4266%" y="949" width="0.1147%" height="15" fill="rgb(246,168,33)" fg:x="213" fg:w="1"/><text x="24.6766%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.11%)</title><rect x="24.4266%" y="933" width="0.1147%" height="15" fill="rgb(231,114,1)" fg:x="213" fg:w="1"/><text x="24.6766%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.11%)</title><rect x="24.4266%" y="917" width="0.1147%" height="15" fill="rgb(207,184,53)" fg:x="213" fg:w="1"/><text x="24.6766%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.11%)</title><rect x="24.4266%" y="901" width="0.1147%" height="15" fill="rgb(224,95,51)" fg:x="213" fg:w="1"/><text x="24.6766%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.11%)</title><rect x="24.4266%" y="885" width="0.1147%" height="15" fill="rgb(212,188,45)" fg:x="213" fg:w="1"/><text x="24.6766%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.11%)</title><rect x="24.4266%" y="869" width="0.1147%" height="15" fill="rgb(223,154,38)" fg:x="213" fg:w="1"/><text x="24.6766%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="1029" width="0.1147%" height="15" fill="rgb(251,22,52)" fg:x="215" fg:w="1"/><text x="24.9060%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="1013" width="0.1147%" height="15" fill="rgb(229,209,22)" fg:x="215" fg:w="1"/><text x="24.9060%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="997" width="0.1147%" height="15" fill="rgb(234,138,34)" fg:x="215" fg:w="1"/><text x="24.9060%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="981" width="0.1147%" height="15" fill="rgb(212,95,11)" fg:x="215" fg:w="1"/><text x="24.9060%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="965" width="0.1147%" height="15" fill="rgb(240,179,47)" fg:x="215" fg:w="1"/><text x="24.9060%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="949" width="0.1147%" height="15" fill="rgb(240,163,11)" fg:x="215" fg:w="1"/><text x="24.9060%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="933" width="0.1147%" height="15" fill="rgb(236,37,12)" fg:x="215" fg:w="1"/><text x="24.9060%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="917" width="0.1147%" height="15" fill="rgb(232,164,16)" fg:x="215" fg:w="1"/><text x="24.9060%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="901" width="0.1147%" height="15" fill="rgb(244,205,15)" fg:x="215" fg:w="1"/><text x="24.9060%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="885" width="0.1147%" height="15" fill="rgb(223,117,47)" fg:x="215" fg:w="1"/><text x="24.9060%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="869" width="0.1147%" height="15" fill="rgb(244,107,35)" fg:x="215" fg:w="1"/><text x="24.9060%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="853" width="0.1147%" height="15" fill="rgb(205,140,8)" fg:x="215" fg:w="1"/><text x="24.9060%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="837" width="0.1147%" height="15" fill="rgb(228,84,46)" fg:x="215" fg:w="1"/><text x="24.9060%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="821" width="0.1147%" height="15" fill="rgb(254,188,9)" fg:x="215" fg:w="1"/><text x="24.9060%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="805" width="0.1147%" height="15" fill="rgb(206,112,54)" fg:x="215" fg:w="1"/><text x="24.9060%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="789" width="0.1147%" height="15" fill="rgb(216,84,49)" fg:x="215" fg:w="1"/><text x="24.9060%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="773" width="0.1147%" height="15" fill="rgb(214,194,35)" fg:x="215" fg:w="1"/><text x="24.9060%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="757" width="0.1147%" height="15" fill="rgb(249,28,3)" fg:x="215" fg:w="1"/><text x="24.9060%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="741" width="0.1147%" height="15" fill="rgb(222,56,52)" fg:x="215" fg:w="1"/><text x="24.9060%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="725" width="0.1147%" height="15" fill="rgb(245,217,50)" fg:x="215" fg:w="1"/><text x="24.9060%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="709" width="0.1147%" height="15" fill="rgb(213,201,24)" fg:x="215" fg:w="1"/><text x="24.9060%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="24.6560%" y="693" width="0.1147%" height="15" fill="rgb(248,116,28)" fg:x="215" fg:w="1"/><text x="24.9060%" y="703.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (4 samples, 0.46%)</title><rect x="25.0000%" y="741" width="0.4587%" height="15" fill="rgb(219,72,43)" fg:x="218" fg:w="4"/><text x="25.2500%" y="751.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (4 samples, 0.46%)</title><rect x="25.0000%" y="725" width="0.4587%" height="15" fill="rgb(209,138,14)" fg:x="218" fg:w="4"/><text x="25.2500%" y="735.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (4 samples, 0.46%)</title><rect x="25.0000%" y="709" width="0.4587%" height="15" fill="rgb(222,18,33)" fg:x="218" fg:w="4"/><text x="25.2500%" y="719.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (4 samples, 0.46%)</title><rect x="25.0000%" y="693" width="0.4587%" height="15" fill="rgb(213,199,7)" fg:x="218" fg:w="4"/><text x="25.2500%" y="703.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.03%)</title><rect x="25.0000%" y="821" width="1.0321%" height="15" fill="rgb(250,110,10)" fg:x="218" fg:w="9"/><text x="25.2500%" y="831.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (9 samples, 1.03%)</title><rect x="25.0000%" y="805" width="1.0321%" height="15" fill="rgb(248,123,6)" fg:x="218" fg:w="9"/><text x="25.2500%" y="815.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (9 samples, 1.03%)</title><rect x="25.0000%" y="789" width="1.0321%" height="15" fill="rgb(206,91,31)" fg:x="218" fg:w="9"/><text x="25.2500%" y="799.50"></text></g><g><title>core::str::pattern::Searcher::next_match (9 samples, 1.03%)</title><rect x="25.0000%" y="773" width="1.0321%" height="15" fill="rgb(211,154,13)" fg:x="218" fg:w="9"/><text x="25.2500%" y="783.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (9 samples, 1.03%)</title><rect x="25.0000%" y="757" width="1.0321%" height="15" fill="rgb(225,148,7)" fg:x="218" fg:w="9"/><text x="25.2500%" y="767.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.57%)</title><rect x="25.4587%" y="741" width="0.5734%" height="15" fill="rgb(220,160,43)" fg:x="222" fg:w="5"/><text x="25.7087%" y="751.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="25.6881%" y="725" width="0.3440%" height="15" fill="rgb(213,52,39)" fg:x="224" fg:w="3"/><text x="25.9381%" y="735.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.34%)</title><rect x="25.6881%" y="709" width="0.3440%" height="15" fill="rgb(243,137,7)" fg:x="224" fg:w="3"/><text x="25.9381%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="25.6881%" y="693" width="0.3440%" height="15" fill="rgb(230,79,13)" fg:x="224" fg:w="3"/><text x="25.9381%" y="703.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.34%)</title><rect x="25.6881%" y="677" width="0.3440%" height="15" fill="rgb(247,105,23)" fg:x="224" fg:w="3"/><text x="25.9381%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="25.9174%" y="661" width="0.1147%" height="15" fill="rgb(223,179,41)" fg:x="226" fg:w="1"/><text x="26.1674%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.26%)</title><rect x="25.0000%" y="917" width="1.2615%" height="15" fill="rgb(218,9,34)" fg:x="218" fg:w="11"/><text x="25.2500%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.26%)</title><rect x="25.0000%" y="901" width="1.2615%" height="15" fill="rgb(222,106,8)" fg:x="218" fg:w="11"/><text x="25.2500%" y="911.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.26%)</title><rect x="25.0000%" y="885" width="1.2615%" height="15" fill="rgb(211,220,0)" fg:x="218" fg:w="11"/><text x="25.2500%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.26%)</title><rect x="25.0000%" y="869" width="1.2615%" height="15" fill="rgb(229,52,16)" fg:x="218" fg:w="11"/><text x="25.2500%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (11 samples, 1.26%)</title><rect x="25.0000%" y="853" width="1.2615%" height="15" fill="rgb(212,155,18)" fg:x="218" fg:w="11"/><text x="25.2500%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 1.26%)</title><rect x="25.0000%" y="837" width="1.2615%" height="15" fill="rgb(242,21,14)" fg:x="218" fg:w="11"/><text x="25.2500%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.23%)</title><rect x="26.0321%" y="821" width="0.2294%" height="15" fill="rgb(222,19,48)" fg:x="227" fg:w="2"/><text x="26.2821%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.11%)</title><rect x="26.1468%" y="805" width="0.1147%" height="15" fill="rgb(232,45,27)" fg:x="228" fg:w="1"/><text x="26.3968%" y="815.50"></text></g><g><title>&lt;core::str::IsNotEmpty as core::ops::function::FnMut&lt;(&amp;&amp;str,)&gt;&gt;::call_mut (1 samples, 0.11%)</title><rect x="26.1468%" y="789" width="0.1147%" height="15" fill="rgb(249,103,42)" fg:x="228" fg:w="1"/><text x="26.3968%" y="799.50"></text></g><g><title>&lt;core::str::IsNotEmpty as core::ops::function::Fn&lt;(&amp;&amp;str,)&gt;&gt;::call (1 samples, 0.11%)</title><rect x="26.1468%" y="773" width="0.1147%" height="15" fill="rgb(246,81,33)" fg:x="228" fg:w="1"/><text x="26.3968%" y="783.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.11%)</title><rect x="26.1468%" y="757" width="0.1147%" height="15" fill="rgb(252,33,42)" fg:x="228" fg:w="1"/><text x="26.3968%" y="767.50"></text></g><g><title>_int_malloc (6 samples, 0.69%)</title><rect x="26.7202%" y="629" width="0.6881%" height="15" fill="rgb(209,212,41)" fg:x="233" fg:w="6"/><text x="26.9702%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="27.1789%" y="613" width="0.2294%" height="15" fill="rgb(207,154,6)" fg:x="237" fg:w="2"/><text x="27.4289%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="27.1789%" y="597" width="0.2294%" height="15" fill="rgb(223,64,47)" fg:x="237" fg:w="2"/><text x="27.4289%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="27.1789%" y="581" width="0.2294%" height="15" fill="rgb(211,161,38)" fg:x="237" fg:w="2"/><text x="27.4289%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="27.1789%" y="565" width="0.2294%" height="15" fill="rgb(219,138,40)" fg:x="237" fg:w="2"/><text x="27.4289%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.2936%" y="549" width="0.1147%" height="15" fill="rgb(241,228,46)" fg:x="238" fg:w="1"/><text x="27.5436%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.2936%" y="533" width="0.1147%" height="15" fill="rgb(223,209,38)" fg:x="238" fg:w="1"/><text x="27.5436%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.2936%" y="517" width="0.1147%" height="15" fill="rgb(236,164,45)" fg:x="238" fg:w="1"/><text x="27.5436%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.2936%" y="501" width="0.1147%" height="15" fill="rgb(231,15,5)" fg:x="238" fg:w="1"/><text x="27.5436%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.2936%" y="485" width="0.1147%" height="15" fill="rgb(252,35,15)" fg:x="238" fg:w="1"/><text x="27.5436%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="27.2936%" y="469" width="0.1147%" height="15" fill="rgb(248,181,18)" fg:x="238" fg:w="1"/><text x="27.5436%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 1.26%)</title><rect x="26.2615%" y="741" width="1.2615%" height="15" fill="rgb(233,39,42)" fg:x="229" fg:w="11"/><text x="26.5115%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 1.26%)</title><rect x="26.2615%" y="725" width="1.2615%" height="15" fill="rgb(238,110,33)" fg:x="229" fg:w="11"/><text x="26.5115%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 1.26%)</title><rect x="26.2615%" y="709" width="1.2615%" height="15" fill="rgb(233,195,10)" fg:x="229" fg:w="11"/><text x="26.5115%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 1.26%)</title><rect x="26.2615%" y="693" width="1.2615%" height="15" fill="rgb(254,105,3)" fg:x="229" fg:w="11"/><text x="26.5115%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 1.26%)</title><rect x="26.2615%" y="677" width="1.2615%" height="15" fill="rgb(221,225,9)" fg:x="229" fg:w="11"/><text x="26.5115%" y="687.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 1.26%)</title><rect x="26.2615%" y="661" width="1.2615%" height="15" fill="rgb(224,227,45)" fg:x="229" fg:w="11"/><text x="26.5115%" y="671.50"></text></g><g><title>__GI___libc_malloc (11 samples, 1.26%)</title><rect x="26.2615%" y="645" width="1.2615%" height="15" fill="rgb(229,198,43)" fg:x="229" fg:w="11"/><text x="26.5115%" y="655.50"></text></g><g><title>tcache_get (1 samples, 0.11%)</title><rect x="27.4083%" y="629" width="0.1147%" height="15" fill="rgb(206,209,35)" fg:x="239" fg:w="1"/><text x="27.6583%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 2.75%)</title><rect x="25.0000%" y="933" width="2.7523%" height="15" fill="rgb(245,195,53)" fg:x="218" fg:w="24"/><text x="25.2500%" y="943.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 1.49%)</title><rect x="26.2615%" y="917" width="1.4908%" height="15" fill="rgb(240,92,26)" fg:x="229" fg:w="13"/><text x="26.5115%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 1.49%)</title><rect x="26.2615%" y="901" width="1.4908%" height="15" fill="rgb(207,40,23)" fg:x="229" fg:w="13"/><text x="26.5115%" y="911.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::tokenize::{{closure}} (13 samples, 1.49%)</title><rect x="26.2615%" y="885" width="1.4908%" height="15" fill="rgb(223,111,35)" fg:x="229" fg:w="13"/><text x="26.5115%" y="895.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (13 samples, 1.49%)</title><rect x="26.2615%" y="869" width="1.4908%" height="15" fill="rgb(229,147,28)" fg:x="229" fg:w="13"/><text x="26.5115%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (13 samples, 1.49%)</title><rect x="26.2615%" y="853" width="1.4908%" height="15" fill="rgb(211,29,28)" fg:x="229" fg:w="13"/><text x="26.5115%" y="863.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (13 samples, 1.49%)</title><rect x="26.2615%" y="837" width="1.4908%" height="15" fill="rgb(228,72,33)" fg:x="229" fg:w="13"/><text x="26.5115%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (13 samples, 1.49%)</title><rect x="26.2615%" y="821" width="1.4908%" height="15" fill="rgb(205,214,31)" fg:x="229" fg:w="13"/><text x="26.5115%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (13 samples, 1.49%)</title><rect x="26.2615%" y="805" width="1.4908%" height="15" fill="rgb(224,111,15)" fg:x="229" fg:w="13"/><text x="26.5115%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 1.49%)</title><rect x="26.2615%" y="789" width="1.4908%" height="15" fill="rgb(253,21,26)" fg:x="229" fg:w="13"/><text x="26.5115%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.49%)</title><rect x="26.2615%" y="773" width="1.4908%" height="15" fill="rgb(245,139,43)" fg:x="229" fg:w="13"/><text x="26.5115%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 1.49%)</title><rect x="26.2615%" y="757" width="1.4908%" height="15" fill="rgb(252,170,7)" fg:x="229" fg:w="13"/><text x="26.5115%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.23%)</title><rect x="27.5229%" y="741" width="0.2294%" height="15" fill="rgb(231,118,14)" fg:x="240" fg:w="2"/><text x="27.7729%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="27.5229%" y="725" width="0.2294%" height="15" fill="rgb(238,83,0)" fg:x="240" fg:w="2"/><text x="27.7729%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="27.5229%" y="709" width="0.2294%" height="15" fill="rgb(221,39,39)" fg:x="240" fg:w="2"/><text x="27.7729%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.11%)</title><rect x="27.7523%" y="933" width="0.1147%" height="15" fill="rgb(222,119,46)" fg:x="242" fg:w="1"/><text x="28.0023%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="28.0963%" y="773" width="0.1147%" height="15" fill="rgb(222,165,49)" fg:x="245" fg:w="1"/><text x="28.3463%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="28.2110%" y="773" width="0.1147%" height="15" fill="rgb(219,113,52)" fg:x="246" fg:w="1"/><text x="28.4610%" y="783.50"></text></g><g><title>_int_realloc (9 samples, 1.03%)</title><rect x="27.9817%" y="789" width="1.0321%" height="15" fill="rgb(214,7,15)" fg:x="244" fg:w="9"/><text x="28.2317%" y="799.50"></text></g><g><title>_int_malloc (6 samples, 0.69%)</title><rect x="28.3257%" y="773" width="0.6881%" height="15" fill="rgb(235,32,4)" fg:x="247" fg:w="6"/><text x="28.5757%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="28.7844%" y="757" width="0.2294%" height="15" fill="rgb(238,90,54)" fg:x="251" fg:w="2"/><text x="29.0344%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="28.7844%" y="741" width="0.2294%" height="15" fill="rgb(213,208,19)" fg:x="251" fg:w="2"/><text x="29.0344%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="28.7844%" y="725" width="0.2294%" height="15" fill="rgb(233,156,4)" fg:x="251" fg:w="2"/><text x="29.0344%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="28.8991%" y="709" width="0.1147%" height="15" fill="rgb(207,194,5)" fg:x="252" fg:w="1"/><text x="29.1491%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="28.8991%" y="693" width="0.1147%" height="15" fill="rgb(206,111,30)" fg:x="252" fg:w="1"/><text x="29.1491%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="28.8991%" y="677" width="0.1147%" height="15" fill="rgb(243,70,54)" fg:x="252" fg:w="1"/><text x="29.1491%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="28.8991%" y="661" width="0.1147%" height="15" fill="rgb(242,28,8)" fg:x="252" fg:w="1"/><text x="29.1491%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 1.26%)</title><rect x="27.8670%" y="933" width="1.2615%" height="15" fill="rgb(219,106,18)" fg:x="243" fg:w="11"/><text x="28.1170%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 1.26%)</title><rect x="27.8670%" y="917" width="1.2615%" height="15" fill="rgb(244,222,10)" fg:x="243" fg:w="11"/><text x="28.1170%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 1.26%)</title><rect x="27.8670%" y="901" width="1.2615%" height="15" fill="rgb(236,179,52)" fg:x="243" fg:w="11"/><text x="28.1170%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 1.26%)</title><rect x="27.8670%" y="885" width="1.2615%" height="15" fill="rgb(213,23,39)" fg:x="243" fg:w="11"/><text x="28.1170%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 1.26%)</title><rect x="27.8670%" y="869" width="1.2615%" height="15" fill="rgb(238,48,10)" fg:x="243" fg:w="11"/><text x="28.1170%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 1.26%)</title><rect x="27.8670%" y="853" width="1.2615%" height="15" fill="rgb(251,196,23)" fg:x="243" fg:w="11"/><text x="28.1170%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 1.26%)</title><rect x="27.8670%" y="837" width="1.2615%" height="15" fill="rgb(250,152,24)" fg:x="243" fg:w="11"/><text x="28.1170%" y="847.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 1.26%)</title><rect x="27.8670%" y="821" width="1.2615%" height="15" fill="rgb(209,150,17)" fg:x="243" fg:w="11"/><text x="28.1170%" y="831.50"></text></g><g><title>__GI___libc_realloc (11 samples, 1.26%)</title><rect x="27.8670%" y="805" width="1.2615%" height="15" fill="rgb(234,202,34)" fg:x="243" fg:w="11"/><text x="28.1170%" y="815.50"></text></g><g><title>checked_request2size (1 samples, 0.11%)</title><rect x="29.0138%" y="789" width="0.1147%" height="15" fill="rgb(253,148,53)" fg:x="253" fg:w="1"/><text x="29.2638%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (39 samples, 4.47%)</title><rect x="24.8853%" y="949" width="4.4725%" height="15" fill="rgb(218,129,16)" fg:x="217" fg:w="39"/><text x="25.1353%" y="959.50">alloc..</text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="29.1284%" y="933" width="0.2294%" height="15" fill="rgb(216,85,19)" fg:x="254" fg:w="2"/><text x="29.3784%" y="943.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.46%)</title><rect x="29.7018%" y="853" width="0.4587%" height="15" fill="rgb(235,228,7)" fg:x="259" fg:w="4"/><text x="29.9518%" y="863.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="29.8165%" y="837" width="0.3440%" height="15" fill="rgb(245,175,0)" fg:x="260" fg:w="3"/><text x="30.0665%" y="847.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.34%)</title><rect x="29.8165%" y="821" width="0.3440%" height="15" fill="rgb(208,168,36)" fg:x="260" fg:w="3"/><text x="30.0665%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="29.9312%" y="805" width="0.2294%" height="15" fill="rgb(246,171,24)" fg:x="261" fg:w="2"/><text x="30.1812%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.11%)</title><rect x="30.1606%" y="821" width="0.1147%" height="15" fill="rgb(215,142,24)" fg:x="263" fg:w="1"/><text x="30.4106%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.34%)</title><rect x="30.1606%" y="837" width="0.3440%" height="15" fill="rgb(250,187,7)" fg:x="263" fg:w="3"/><text x="30.4106%" y="847.50"></text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="30.2752%" y="821" width="0.2294%" height="15" fill="rgb(228,66,33)" fg:x="264" fg:w="2"/><text x="30.5252%" y="831.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.46%)</title><rect x="30.1606%" y="853" width="0.4587%" height="15" fill="rgb(234,215,21)" fg:x="263" fg:w="4"/><text x="30.4106%" y="863.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.11%)</title><rect x="30.5046%" y="837" width="0.1147%" height="15" fill="rgb(222,191,20)" fg:x="266" fg:w="1"/><text x="30.7546%" y="847.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.11%)</title><rect x="30.5046%" y="821" width="0.1147%" height="15" fill="rgb(245,79,54)" fg:x="266" fg:w="1"/><text x="30.7546%" y="831.50"></text></g><g><title>alloc::string::String::with_capacity (2 samples, 0.23%)</title><rect x="30.6193%" y="853" width="0.2294%" height="15" fill="rgb(240,10,37)" fg:x="267" fg:w="2"/><text x="30.8693%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.23%)</title><rect x="30.6193%" y="837" width="0.2294%" height="15" fill="rgb(214,192,32)" fg:x="267" fg:w="2"/><text x="30.8693%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="30.6193%" y="821" width="0.2294%" height="15" fill="rgb(209,36,54)" fg:x="267" fg:w="2"/><text x="30.8693%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="30.6193%" y="805" width="0.2294%" height="15" fill="rgb(220,10,11)" fg:x="267" fg:w="2"/><text x="30.8693%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="30.6193%" y="789" width="0.2294%" height="15" fill="rgb(221,106,17)" fg:x="267" fg:w="2"/><text x="30.8693%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.23%)</title><rect x="30.6193%" y="773" width="0.2294%" height="15" fill="rgb(251,142,44)" fg:x="267" fg:w="2"/><text x="30.8693%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.23%)</title><rect x="30.6193%" y="757" width="0.2294%" height="15" fill="rgb(238,13,15)" fg:x="267" fg:w="2"/><text x="30.8693%" y="767.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.23%)</title><rect x="30.6193%" y="741" width="0.2294%" height="15" fill="rgb(208,107,27)" fg:x="267" fg:w="2"/><text x="30.8693%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="30.6193%" y="725" width="0.2294%" height="15" fill="rgb(205,136,37)" fg:x="267" fg:w="2"/><text x="30.8693%" y="735.50"></text></g><g><title>tcache_get (1 samples, 0.11%)</title><rect x="30.7339%" y="709" width="0.1147%" height="15" fill="rgb(250,205,27)" fg:x="268" fg:w="1"/><text x="30.9839%" y="719.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii (1 samples, 0.11%)</title><rect x="31.0780%" y="837" width="0.1147%" height="15" fill="rgb(210,80,43)" fg:x="271" fg:w="1"/><text x="31.3280%" y="847.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (1 samples, 0.11%)</title><rect x="31.1927%" y="837" width="0.1147%" height="15" fill="rgb(247,160,36)" fg:x="272" fg:w="1"/><text x="31.4427%" y="847.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (1 samples, 0.11%)</title><rect x="31.1927%" y="821" width="0.1147%" height="15" fill="rgb(234,13,49)" fg:x="272" fg:w="1"/><text x="31.4427%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.1927%" y="805" width="0.1147%" height="15" fill="rgb(234,122,0)" fg:x="272" fg:w="1"/><text x="31.4427%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.1927%" y="789" width="0.1147%" height="15" fill="rgb(207,146,38)" fg:x="272" fg:w="1"/><text x="31.4427%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.1927%" y="773" width="0.1147%" height="15" fill="rgb(207,177,25)" fg:x="272" fg:w="1"/><text x="31.4427%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.1927%" y="757" width="0.1147%" height="15" fill="rgb(211,178,42)" fg:x="272" fg:w="1"/><text x="31.4427%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.1927%" y="741" width="0.1147%" height="15" fill="rgb(230,69,54)" fg:x="272" fg:w="1"/><text x="31.4427%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.1927%" y="725" width="0.1147%" height="15" fill="rgb(214,135,41)" fg:x="272" fg:w="1"/><text x="31.4427%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.1927%" y="709" width="0.1147%" height="15" fill="rgb(237,67,25)" fg:x="272" fg:w="1"/><text x="31.4427%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.1927%" y="693" width="0.1147%" height="15" fill="rgb(222,189,50)" fg:x="272" fg:w="1"/><text x="31.4427%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (58 samples, 6.65%)</title><rect x="24.7706%" y="965" width="6.6514%" height="15" fill="rgb(245,148,34)" fg:x="216" fg:w="58"/><text x="25.0206%" y="975.50">&lt;alloc::v..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 2.06%)</title><rect x="29.3578%" y="949" width="2.0642%" height="15" fill="rgb(222,29,6)" fg:x="256" fg:w="18"/><text x="29.6078%" y="959.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 2.06%)</title><rect x="29.3578%" y="933" width="2.0642%" height="15" fill="rgb(221,189,43)" fg:x="256" fg:w="18"/><text x="29.6078%" y="943.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 2.06%)</title><rect x="29.3578%" y="917" width="2.0642%" height="15" fill="rgb(207,36,27)" fg:x="256" fg:w="18"/><text x="29.6078%" y="927.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (18 samples, 2.06%)</title><rect x="29.3578%" y="901" width="2.0642%" height="15" fill="rgb(217,90,24)" fg:x="256" fg:w="18"/><text x="29.6078%" y="911.50">c..</text></g><g><title>simsearch::SimSearch&lt;Id&gt;::tokenize::{{closure}} (18 samples, 2.06%)</title><rect x="29.3578%" y="885" width="2.0642%" height="15" fill="rgb(224,66,35)" fg:x="256" fg:w="18"/><text x="29.6078%" y="895.50">s..</text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (18 samples, 2.06%)</title><rect x="29.3578%" y="869" width="2.0642%" height="15" fill="rgb(221,13,50)" fg:x="256" fg:w="18"/><text x="29.6078%" y="879.50">a..</text></g><g><title>core::unicode::unicode_data::conversions::to_lower (5 samples, 0.57%)</title><rect x="30.8486%" y="853" width="0.5734%" height="15" fill="rgb(236,68,49)" fg:x="269" fg:w="5"/><text x="31.0986%" y="863.50"></text></g><g><title>core::unicode::unicode_data::conversions::bsearch_case_table (1 samples, 0.11%)</title><rect x="31.3073%" y="837" width="0.1147%" height="15" fill="rgb(229,146,28)" fg:x="273" fg:w="1"/><text x="31.5573%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.11%)</title><rect x="31.3073%" y="821" width="0.1147%" height="15" fill="rgb(225,31,38)" fg:x="273" fg:w="1"/><text x="31.5573%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="31.4220%" y="949" width="0.3440%" height="15" fill="rgb(250,208,3)" fg:x="274" fg:w="3"/><text x="31.6720%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="31.4220%" y="933" width="0.3440%" height="15" fill="rgb(246,54,23)" fg:x="274" fg:w="3"/><text x="31.6720%" y="943.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="31.4220%" y="917" width="0.3440%" height="15" fill="rgb(243,76,11)" fg:x="274" fg:w="3"/><text x="31.6720%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="31.4220%" y="901" width="0.3440%" height="15" fill="rgb(245,21,50)" fg:x="274" fg:w="3"/><text x="31.6720%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.34%)</title><rect x="31.4220%" y="885" width="0.3440%" height="15" fill="rgb(228,9,43)" fg:x="274" fg:w="3"/><text x="31.6720%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.34%)</title><rect x="31.4220%" y="869" width="0.3440%" height="15" fill="rgb(208,100,47)" fg:x="274" fg:w="3"/><text x="31.6720%" y="879.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="31.4220%" y="853" width="0.3440%" height="15" fill="rgb(232,26,8)" fg:x="274" fg:w="3"/><text x="31.6720%" y="863.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (3 samples, 0.34%)</title><rect x="31.4220%" y="837" width="0.3440%" height="15" fill="rgb(216,166,38)" fg:x="274" fg:w="3"/><text x="31.6720%" y="847.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.34%)</title><rect x="31.4220%" y="821" width="0.3440%" height="15" fill="rgb(251,202,51)" fg:x="274" fg:w="3"/><text x="31.6720%" y="831.50"></text></g><g><title>core::str::pattern::Searcher::next_match (3 samples, 0.34%)</title><rect x="31.4220%" y="805" width="0.3440%" height="15" fill="rgb(254,216,34)" fg:x="274" fg:w="3"/><text x="31.6720%" y="815.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (3 samples, 0.34%)</title><rect x="31.4220%" y="789" width="0.3440%" height="15" fill="rgb(251,32,27)" fg:x="274" fg:w="3"/><text x="31.6720%" y="799.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (3 samples, 0.34%)</title><rect x="31.4220%" y="773" width="0.3440%" height="15" fill="rgb(208,127,28)" fg:x="274" fg:w="3"/><text x="31.6720%" y="783.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (3 samples, 0.34%)</title><rect x="31.4220%" y="757" width="0.3440%" height="15" fill="rgb(224,137,22)" fg:x="274" fg:w="3"/><text x="31.6720%" y="767.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (3 samples, 0.34%)</title><rect x="31.4220%" y="741" width="0.3440%" height="15" fill="rgb(254,70,32)" fg:x="274" fg:w="3"/><text x="31.6720%" y="751.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (3 samples, 0.34%)</title><rect x="31.4220%" y="725" width="0.3440%" height="15" fill="rgb(229,75,37)" fg:x="274" fg:w="3"/><text x="31.6720%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8807%" y="661" width="0.1147%" height="15" fill="rgb(252,64,23)" fg:x="278" fg:w="1"/><text x="32.1307%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8807%" y="645" width="0.1147%" height="15" fill="rgb(232,162,48)" fg:x="278" fg:w="1"/><text x="32.1307%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8807%" y="629" width="0.1147%" height="15" fill="rgb(246,160,12)" fg:x="278" fg:w="1"/><text x="32.1307%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8807%" y="613" width="0.1147%" height="15" fill="rgb(247,166,0)" fg:x="278" fg:w="1"/><text x="32.1307%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8807%" y="597" width="0.1147%" height="15" fill="rgb(249,219,21)" fg:x="278" fg:w="1"/><text x="32.1307%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8807%" y="581" width="0.1147%" height="15" fill="rgb(205,209,3)" fg:x="278" fg:w="1"/><text x="32.1307%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8807%" y="565" width="0.1147%" height="15" fill="rgb(243,44,1)" fg:x="278" fg:w="1"/><text x="32.1307%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="31.8807%" y="549" width="0.1147%" height="15" fill="rgb(206,159,16)" fg:x="278" fg:w="1"/><text x="32.1307%" y="559.50"></text></g><g><title>checked_request2size (1 samples, 0.11%)</title><rect x="31.9954%" y="661" width="0.1147%" height="15" fill="rgb(244,77,30)" fg:x="279" fg:w="1"/><text x="32.2454%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.46%)</title><rect x="31.7661%" y="773" width="0.4587%" height="15" fill="rgb(218,69,12)" fg:x="277" fg:w="4"/><text x="32.0161%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.46%)</title><rect x="31.7661%" y="757" width="0.4587%" height="15" fill="rgb(212,87,7)" fg:x="277" fg:w="4"/><text x="32.0161%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.46%)</title><rect x="31.7661%" y="741" width="0.4587%" height="15" fill="rgb(245,114,25)" fg:x="277" fg:w="4"/><text x="32.0161%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.46%)</title><rect x="31.7661%" y="725" width="0.4587%" height="15" fill="rgb(210,61,42)" fg:x="277" fg:w="4"/><text x="32.0161%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.46%)</title><rect x="31.7661%" y="709" width="0.4587%" height="15" fill="rgb(211,52,33)" fg:x="277" fg:w="4"/><text x="32.0161%" y="719.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.46%)</title><rect x="31.7661%" y="693" width="0.4587%" height="15" fill="rgb(234,58,33)" fg:x="277" fg:w="4"/><text x="32.0161%" y="703.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.46%)</title><rect x="31.7661%" y="677" width="0.4587%" height="15" fill="rgb(220,115,36)" fg:x="277" fg:w="4"/><text x="32.0161%" y="687.50"></text></g><g><title>tcache_get (1 samples, 0.11%)</title><rect x="32.1101%" y="661" width="0.1147%" height="15" fill="rgb(243,153,54)" fg:x="280" fg:w="1"/><text x="32.3601%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (66 samples, 7.57%)</title><rect x="24.7706%" y="981" width="7.5688%" height="15" fill="rgb(251,47,18)" fg:x="216" fg:w="66"/><text x="25.0206%" y="991.50">&lt;alloc::ve..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.92%)</title><rect x="31.4220%" y="965" width="0.9174%" height="15" fill="rgb(242,102,42)" fg:x="274" fg:w="8"/><text x="31.6720%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.57%)</title><rect x="31.7661%" y="949" width="0.5734%" height="15" fill="rgb(234,31,38)" fg:x="277" fg:w="5"/><text x="32.0161%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.57%)</title><rect x="31.7661%" y="933" width="0.5734%" height="15" fill="rgb(221,117,51)" fg:x="277" fg:w="5"/><text x="32.0161%" y="943.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::tokenize::{{closure}} (5 samples, 0.57%)</title><rect x="31.7661%" y="917" width="0.5734%" height="15" fill="rgb(212,20,18)" fg:x="277" fg:w="5"/><text x="32.0161%" y="927.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (5 samples, 0.57%)</title><rect x="31.7661%" y="901" width="0.5734%" height="15" fill="rgb(245,133,36)" fg:x="277" fg:w="5"/><text x="32.0161%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.57%)</title><rect x="31.7661%" y="885" width="0.5734%" height="15" fill="rgb(212,6,19)" fg:x="277" fg:w="5"/><text x="32.0161%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.57%)</title><rect x="31.7661%" y="869" width="0.5734%" height="15" fill="rgb(218,1,36)" fg:x="277" fg:w="5"/><text x="32.0161%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5 samples, 0.57%)</title><rect x="31.7661%" y="853" width="0.5734%" height="15" fill="rgb(246,84,54)" fg:x="277" fg:w="5"/><text x="32.0161%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.57%)</title><rect x="31.7661%" y="837" width="0.5734%" height="15" fill="rgb(242,110,6)" fg:x="277" fg:w="5"/><text x="32.0161%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.57%)</title><rect x="31.7661%" y="821" width="0.5734%" height="15" fill="rgb(214,47,5)" fg:x="277" fg:w="5"/><text x="32.0161%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.57%)</title><rect x="31.7661%" y="805" width="0.5734%" height="15" fill="rgb(218,159,25)" fg:x="277" fg:w="5"/><text x="32.0161%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.57%)</title><rect x="31.7661%" y="789" width="0.5734%" height="15" fill="rgb(215,211,28)" fg:x="277" fg:w="5"/><text x="32.0161%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.11%)</title><rect x="32.2248%" y="773" width="0.1147%" height="15" fill="rgb(238,59,32)" fg:x="281" fg:w="1"/><text x="32.4748%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="32.2248%" y="757" width="0.1147%" height="15" fill="rgb(226,82,3)" fg:x="281" fg:w="1"/><text x="32.4748%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="32.2248%" y="741" width="0.1147%" height="15" fill="rgb(240,164,32)" fg:x="281" fg:w="1"/><text x="32.4748%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (68 samples, 7.80%)</title><rect x="24.7706%" y="1029" width="7.7982%" height="15" fill="rgb(232,46,7)" fg:x="216" fg:w="68"/><text x="25.0206%" y="1039.50">core::iter:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (68 samples, 7.80%)</title><rect x="24.7706%" y="1013" width="7.7982%" height="15" fill="rgb(229,129,53)" fg:x="216" fg:w="68"/><text x="25.0206%" y="1023.50">&lt;alloc::vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (68 samples, 7.80%)</title><rect x="24.7706%" y="997" width="7.7982%" height="15" fill="rgb(234,188,29)" fg:x="216" fg:w="68"/><text x="25.0206%" y="1007.50">&lt;alloc::vec..</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="32.3394%" y="981" width="0.2294%" height="15" fill="rgb(246,141,4)" fg:x="282" fg:w="2"/><text x="32.5894%" y="991.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::tokenize (72 samples, 8.26%)</title><rect x="24.5413%" y="1045" width="8.2569%" height="15" fill="rgb(229,23,39)" fg:x="214" fg:w="72"/><text x="24.7913%" y="1055.50">simsearch::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (2 samples, 0.23%)</title><rect x="32.5688%" y="1029" width="0.2294%" height="15" fill="rgb(206,12,3)" fg:x="284" fg:w="2"/><text x="32.8188%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (2 samples, 0.23%)</title><rect x="32.5688%" y="1013" width="0.2294%" height="15" fill="rgb(252,226,20)" fg:x="284" fg:w="2"/><text x="32.8188%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="32.5688%" y="997" width="0.2294%" height="15" fill="rgb(216,123,35)" fg:x="284" fg:w="2"/><text x="32.8188%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.23%)</title><rect x="32.5688%" y="981" width="0.2294%" height="15" fill="rgb(212,68,40)" fg:x="284" fg:w="2"/><text x="32.8188%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.23%)</title><rect x="32.5688%" y="965" width="0.2294%" height="15" fill="rgb(254,125,32)" fg:x="284" fg:w="2"/><text x="32.8188%" y="975.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="32.5688%" y="949" width="0.2294%" height="15" fill="rgb(253,97,22)" fg:x="284" fg:w="2"/><text x="32.8188%" y="959.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::insert_tokens::{{closure}} (1 samples, 0.11%)</title><rect x="32.7982%" y="1029" width="0.1147%" height="15" fill="rgb(241,101,14)" fg:x="286" fg:w="1"/><text x="33.0482%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="32.7982%" y="1013" width="0.1147%" height="15" fill="rgb(238,103,29)" fg:x="286" fg:w="1"/><text x="33.0482%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="32.7982%" y="997" width="0.1147%" height="15" fill="rgb(233,195,47)" fg:x="286" fg:w="1"/><text x="33.0482%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="32.7982%" y="981" width="0.1147%" height="15" fill="rgb(246,218,30)" fg:x="286" fg:w="1"/><text x="33.0482%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="32.7982%" y="965" width="0.1147%" height="15" fill="rgb(219,145,47)" fg:x="286" fg:w="1"/><text x="33.0482%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="32.7982%" y="949" width="0.1147%" height="15" fill="rgb(243,12,26)" fg:x="286" fg:w="1"/><text x="33.0482%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="32.7982%" y="933" width="0.1147%" height="15" fill="rgb(214,87,16)" fg:x="286" fg:w="1"/><text x="33.0482%" y="943.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="32.7982%" y="917" width="0.1147%" height="15" fill="rgb(208,99,42)" fg:x="286" fg:w="1"/><text x="33.0482%" y="927.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="32.7982%" y="901" width="0.1147%" height="15" fill="rgb(253,99,2)" fg:x="286" fg:w="1"/><text x="33.0482%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="32.7982%" y="885" width="0.1147%" height="15" fill="rgb(220,168,23)" fg:x="286" fg:w="1"/><text x="33.0482%" y="895.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="33.0275%" y="869" width="0.1147%" height="15" fill="rgb(242,38,24)" fg:x="288" fg:w="1"/><text x="33.2775%" y="879.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (4 samples, 0.46%)</title><rect x="32.7982%" y="1045" width="0.4587%" height="15" fill="rgb(225,182,9)" fg:x="286" fg:w="4"/><text x="33.0482%" y="1055.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (3 samples, 0.34%)</title><rect x="32.9128%" y="1029" width="0.3440%" height="15" fill="rgb(243,178,37)" fg:x="287" fg:w="3"/><text x="33.1628%" y="1039.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::into_mut (3 samples, 0.34%)</title><rect x="32.9128%" y="1013" width="0.3440%" height="15" fill="rgb(232,139,19)" fg:x="287" fg:w="3"/><text x="33.1628%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::rustc_entry::RustcOccupiedEntry&lt;alloc::string::String,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (3 samples, 0.34%)</title><rect x="32.9128%" y="997" width="0.3440%" height="15" fill="rgb(225,201,24)" fg:x="287" fg:w="3"/><text x="33.1628%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3 samples, 0.34%)</title><rect x="32.9128%" y="981" width="0.3440%" height="15" fill="rgb(221,47,46)" fg:x="287" fg:w="3"/><text x="33.1628%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.23%)</title><rect x="33.0275%" y="965" width="0.2294%" height="15" fill="rgb(249,23,13)" fg:x="288" fg:w="2"/><text x="33.2775%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.23%)</title><rect x="33.0275%" y="949" width="0.2294%" height="15" fill="rgb(219,9,5)" fg:x="288" fg:w="2"/><text x="33.2775%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.23%)</title><rect x="33.0275%" y="933" width="0.2294%" height="15" fill="rgb(254,171,16)" fg:x="288" fg:w="2"/><text x="33.2775%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="33.0275%" y="917" width="0.2294%" height="15" fill="rgb(230,171,20)" fg:x="288" fg:w="2"/><text x="33.2775%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.23%)</title><rect x="33.0275%" y="901" width="0.2294%" height="15" fill="rgb(210,71,41)" fg:x="288" fg:w="2"/><text x="33.2775%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.23%)</title><rect x="33.0275%" y="885" width="0.2294%" height="15" fill="rgb(206,173,20)" fg:x="288" fg:w="2"/><text x="33.2775%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="33.1422%" y="869" width="0.1147%" height="15" fill="rgb(233,88,34)" fg:x="289" fg:w="1"/><text x="33.3922%" y="879.50"></text></g><g><title>tcache_put (1 samples, 0.11%)</title><rect x="33.1422%" y="853" width="0.1147%" height="15" fill="rgb(223,209,46)" fg:x="289" fg:w="1"/><text x="33.3922%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.69%)</title><rect x="33.3716%" y="837" width="0.6881%" height="15" fill="rgb(250,43,18)" fg:x="291" fg:w="6"/><text x="33.6216%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.69%)</title><rect x="33.3716%" y="821" width="0.6881%" height="15" fill="rgb(208,13,10)" fg:x="291" fg:w="6"/><text x="33.6216%" y="831.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (9 samples, 1.03%)</title><rect x="33.3716%" y="949" width="1.0321%" height="15" fill="rgb(212,200,36)" fg:x="291" fg:w="9"/><text x="33.6216%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 1.03%)</title><rect x="33.3716%" y="933" width="1.0321%" height="15" fill="rgb(225,90,30)" fg:x="291" fg:w="9"/><text x="33.6216%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (9 samples, 1.03%)</title><rect x="33.3716%" y="917" width="1.0321%" height="15" fill="rgb(236,182,39)" fg:x="291" fg:w="9"/><text x="33.6216%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9 samples, 1.03%)</title><rect x="33.3716%" y="901" width="1.0321%" height="15" fill="rgb(212,144,35)" fg:x="291" fg:w="9"/><text x="33.6216%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 1.03%)</title><rect x="33.3716%" y="885" width="1.0321%" height="15" fill="rgb(228,63,44)" fg:x="291" fg:w="9"/><text x="33.6216%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 1.03%)</title><rect x="33.3716%" y="869" width="1.0321%" height="15" fill="rgb(228,109,6)" fg:x="291" fg:w="9"/><text x="33.6216%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 1.03%)</title><rect x="33.3716%" y="853" width="1.0321%" height="15" fill="rgb(238,117,24)" fg:x="291" fg:w="9"/><text x="33.6216%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.34%)</title><rect x="34.0596%" y="837" width="0.3440%" height="15" fill="rgb(242,26,26)" fg:x="297" fg:w="3"/><text x="34.3096%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (14 samples, 1.61%)</title><rect x="33.3716%" y="1013" width="1.6055%" height="15" fill="rgb(221,92,48)" fg:x="291" fg:w="14"/><text x="33.6216%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 1.61%)</title><rect x="33.3716%" y="997" width="1.6055%" height="15" fill="rgb(209,209,32)" fg:x="291" fg:w="14"/><text x="33.6216%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 1.61%)</title><rect x="33.3716%" y="981" width="1.6055%" height="15" fill="rgb(221,70,22)" fg:x="291" fg:w="14"/><text x="33.6216%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (14 samples, 1.61%)</title><rect x="33.3716%" y="965" width="1.6055%" height="15" fill="rgb(248,145,5)" fg:x="291" fg:w="14"/><text x="33.6216%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (5 samples, 0.57%)</title><rect x="34.4037%" y="949" width="0.5734%" height="15" fill="rgb(226,116,26)" fg:x="300" fg:w="5"/><text x="34.6537%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (5 samples, 0.57%)</title><rect x="34.4037%" y="933" width="0.5734%" height="15" fill="rgb(244,5,17)" fg:x="300" fg:w="5"/><text x="34.6537%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.57%)</title><rect x="34.4037%" y="917" width="0.5734%" height="15" fill="rgb(252,159,33)" fg:x="300" fg:w="5"/><text x="34.6537%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="34.5183%" y="901" width="0.4587%" height="15" fill="rgb(206,71,0)" fg:x="301" fg:w="4"/><text x="34.7683%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="34.6330%" y="885" width="0.3440%" height="15" fill="rgb(233,118,54)" fg:x="302" fg:w="3"/><text x="34.8830%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="34.6330%" y="869" width="0.3440%" height="15" fill="rgb(234,83,48)" fg:x="302" fg:w="3"/><text x="34.8830%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="34.6330%" y="853" width="0.3440%" height="15" fill="rgb(228,3,54)" fg:x="302" fg:w="3"/><text x="34.8830%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="34.7477%" y="837" width="0.2294%" height="15" fill="rgb(226,155,13)" fg:x="303" fg:w="2"/><text x="34.9977%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="34.8624%" y="821" width="0.1147%" height="15" fill="rgb(241,28,37)" fg:x="304" fg:w="1"/><text x="35.1124%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="34.8624%" y="805" width="0.1147%" height="15" fill="rgb(233,93,10)" fg:x="304" fg:w="1"/><text x="35.1124%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="34.8624%" y="789" width="0.1147%" height="15" fill="rgb(225,113,19)" fg:x="304" fg:w="1"/><text x="35.1124%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="34.9771%" y="965" width="0.2294%" height="15" fill="rgb(241,2,18)" fg:x="305" fg:w="2"/><text x="35.2271%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="34.9771%" y="949" width="0.2294%" height="15" fill="rgb(228,207,21)" fg:x="305" fg:w="2"/><text x="35.2271%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="34.9771%" y="933" width="0.2294%" height="15" fill="rgb(213,211,35)" fg:x="305" fg:w="2"/><text x="35.2271%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.23%)</title><rect x="34.9771%" y="917" width="0.2294%" height="15" fill="rgb(209,83,10)" fg:x="305" fg:w="2"/><text x="35.2271%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="35.0917%" y="901" width="0.1147%" height="15" fill="rgb(209,164,1)" fg:x="306" fg:w="1"/><text x="35.3417%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.34%)</title><rect x="34.9771%" y="997" width="0.3440%" height="15" fill="rgb(213,184,43)" fg:x="305" fg:w="3"/><text x="35.2271%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.34%)</title><rect x="34.9771%" y="981" width="0.3440%" height="15" fill="rgb(231,61,34)" fg:x="305" fg:w="3"/><text x="35.2271%" y="991.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.11%)</title><rect x="35.2064%" y="965" width="0.1147%" height="15" fill="rgb(235,75,3)" fg:x="307" fg:w="1"/><text x="35.4564%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="35.2064%" y="949" width="0.1147%" height="15" fill="rgb(220,106,47)" fg:x="307" fg:w="1"/><text x="35.4564%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="35.2064%" y="933" width="0.1147%" height="15" fill="rgb(210,196,33)" fg:x="307" fg:w="1"/><text x="35.4564%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="35.2064%" y="917" width="0.1147%" height="15" fill="rgb(229,154,42)" fg:x="307" fg:w="1"/><text x="35.4564%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="35.3211%" y="933" width="0.1147%" height="15" fill="rgb(228,114,26)" fg:x="308" fg:w="1"/><text x="35.5711%" y="943.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.57%)</title><rect x="34.9771%" y="1013" width="0.5734%" height="15" fill="rgb(208,144,1)" fg:x="305" fg:w="5"/><text x="35.2271%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.23%)</title><rect x="35.3211%" y="997" width="0.2294%" height="15" fill="rgb(239,112,37)" fg:x="308" fg:w="2"/><text x="35.5711%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.23%)</title><rect x="35.3211%" y="981" width="0.2294%" height="15" fill="rgb(210,96,50)" fg:x="308" fg:w="2"/><text x="35.5711%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.23%)</title><rect x="35.3211%" y="965" width="0.2294%" height="15" fill="rgb(222,178,2)" fg:x="308" fg:w="2"/><text x="35.5711%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.23%)</title><rect x="35.3211%" y="949" width="0.2294%" height="15" fill="rgb(226,74,18)" fg:x="308" fg:w="2"/><text x="35.5711%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="35.4358%" y="933" width="0.1147%" height="15" fill="rgb(225,67,54)" fg:x="309" fg:w="1"/><text x="35.6858%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="35.7798%" y="997" width="0.2294%" height="15" fill="rgb(251,92,32)" fg:x="312" fg:w="2"/><text x="36.0298%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="35.7798%" y="981" width="0.2294%" height="15" fill="rgb(228,149,22)" fg:x="312" fg:w="2"/><text x="36.0298%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.92%)</title><rect x="36.0092%" y="997" width="0.9174%" height="15" fill="rgb(243,54,13)" fg:x="314" fg:w="8"/><text x="36.2592%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.92%)</title><rect x="36.0092%" y="981" width="0.9174%" height="15" fill="rgb(243,180,28)" fg:x="314" fg:w="8"/><text x="36.2592%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.92%)</title><rect x="36.0092%" y="965" width="0.9174%" height="15" fill="rgb(208,167,24)" fg:x="314" fg:w="8"/><text x="36.2592%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.92%)</title><rect x="36.0092%" y="949" width="0.9174%" height="15" fill="rgb(245,73,45)" fg:x="314" fg:w="8"/><text x="36.2592%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (8 samples, 0.92%)</title><rect x="36.0092%" y="933" width="0.9174%" height="15" fill="rgb(237,203,48)" fg:x="314" fg:w="8"/><text x="36.2592%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.92%)</title><rect x="36.0092%" y="917" width="0.9174%" height="15" fill="rgb(211,197,16)" fg:x="314" fg:w="8"/><text x="36.2592%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.11%)</title><rect x="36.9266%" y="965" width="0.1147%" height="15" fill="rgb(243,99,51)" fg:x="322" fg:w="1"/><text x="37.1766%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.11%)</title><rect x="36.9266%" y="949" width="0.1147%" height="15" fill="rgb(215,123,29)" fg:x="322" fg:w="1"/><text x="37.1766%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.11%)</title><rect x="36.9266%" y="933" width="0.1147%" height="15" fill="rgb(239,186,37)" fg:x="322" fg:w="1"/><text x="37.1766%" y="943.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (45 samples, 5.16%)</title><rect x="33.2569%" y="1029" width="5.1606%" height="15" fill="rgb(252,136,39)" fg:x="290" fg:w="45"/><text x="33.5069%" y="1039.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 2.87%)</title><rect x="35.5505%" y="1013" width="2.8670%" height="15" fill="rgb(223,213,32)" fg:x="310" fg:w="25"/><text x="35.8005%" y="1023.50">ha..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (13 samples, 1.49%)</title><rect x="36.9266%" y="997" width="1.4908%" height="15" fill="rgb(233,115,5)" fg:x="322" fg:w="13"/><text x="37.1766%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (13 samples, 1.49%)</title><rect x="36.9266%" y="981" width="1.4908%" height="15" fill="rgb(207,226,44)" fg:x="322" fg:w="13"/><text x="37.1766%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (12 samples, 1.38%)</title><rect x="37.0413%" y="965" width="1.3761%" height="15" fill="rgb(208,126,0)" fg:x="323" fg:w="12"/><text x="37.2913%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 1.38%)</title><rect x="37.0413%" y="949" width="1.3761%" height="15" fill="rgb(244,66,21)" fg:x="323" fg:w="12"/><text x="37.2913%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 1.38%)</title><rect x="37.0413%" y="933" width="1.3761%" height="15" fill="rgb(222,97,12)" fg:x="323" fg:w="12"/><text x="37.2913%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 1.38%)</title><rect x="37.0413%" y="917" width="1.3761%" height="15" fill="rgb(219,213,19)" fg:x="323" fg:w="12"/><text x="37.2913%" y="927.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.80%)</title><rect x="37.6147%" y="901" width="0.8028%" height="15" fill="rgb(252,169,30)" fg:x="328" fg:w="7"/><text x="37.8647%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (51 samples, 5.85%)</title><rect x="33.2569%" y="1045" width="5.8486%" height="15" fill="rgb(206,32,51)" fg:x="290" fg:w="51"/><text x="33.5069%" y="1055.50">std::co..</text></g><g><title>std::collections::hash::map::map_entry (6 samples, 0.69%)</title><rect x="38.4174%" y="1029" width="0.6881%" height="15" fill="rgb(250,172,42)" fg:x="335" fg:w="6"/><text x="38.6674%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.23%)</title><rect x="39.1055%" y="997" width="0.2294%" height="15" fill="rgb(209,34,43)" fg:x="341" fg:w="2"/><text x="39.3555%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.23%)</title><rect x="39.1055%" y="981" width="0.2294%" height="15" fill="rgb(223,11,35)" fg:x="341" fg:w="2"/><text x="39.3555%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="39.1055%" y="965" width="0.2294%" height="15" fill="rgb(251,219,26)" fg:x="341" fg:w="2"/><text x="39.3555%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="39.1055%" y="949" width="0.2294%" height="15" fill="rgb(231,119,3)" fg:x="341" fg:w="2"/><text x="39.3555%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.23%)</title><rect x="39.1055%" y="933" width="0.2294%" height="15" fill="rgb(216,97,11)" fg:x="341" fg:w="2"/><text x="39.3555%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.11%)</title><rect x="39.2202%" y="917" width="0.1147%" height="15" fill="rgb(223,59,9)" fg:x="342" fg:w="1"/><text x="39.4702%" y="927.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.57%)</title><rect x="39.1055%" y="1013" width="0.5734%" height="15" fill="rgb(233,93,31)" fg:x="341" fg:w="5"/><text x="39.3555%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.34%)</title><rect x="39.3349%" y="997" width="0.3440%" height="15" fill="rgb(239,81,33)" fg:x="343" fg:w="3"/><text x="39.5849%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.34%)</title><rect x="39.3349%" y="981" width="0.3440%" height="15" fill="rgb(213,120,34)" fg:x="343" fg:w="3"/><text x="39.5849%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.34%)</title><rect x="39.3349%" y="965" width="0.3440%" height="15" fill="rgb(243,49,53)" fg:x="343" fg:w="3"/><text x="39.5849%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.34%)</title><rect x="39.3349%" y="949" width="0.3440%" height="15" fill="rgb(247,216,33)" fg:x="343" fg:w="3"/><text x="39.5849%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.34%)</title><rect x="39.3349%" y="933" width="0.3440%" height="15" fill="rgb(226,26,14)" fg:x="343" fg:w="3"/><text x="39.5849%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.11%)</title><rect x="39.5642%" y="917" width="0.1147%" height="15" fill="rgb(215,49,53)" fg:x="345" fg:w="1"/><text x="39.8142%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (5 samples, 0.57%)</title><rect x="39.6789%" y="1013" width="0.5734%" height="15" fill="rgb(245,162,40)" fg:x="346" fg:w="5"/><text x="39.9289%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.57%)</title><rect x="39.6789%" y="997" width="0.5734%" height="15" fill="rgb(229,68,17)" fg:x="346" fg:w="5"/><text x="39.9289%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.46%)</title><rect x="39.7936%" y="981" width="0.4587%" height="15" fill="rgb(213,182,10)" fg:x="347" fg:w="4"/><text x="40.0436%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.46%)</title><rect x="39.7936%" y="965" width="0.4587%" height="15" fill="rgb(245,125,30)" fg:x="347" fg:w="4"/><text x="40.0436%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.46%)</title><rect x="39.7936%" y="949" width="0.4587%" height="15" fill="rgb(232,202,2)" fg:x="347" fg:w="4"/><text x="40.0436%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.46%)</title><rect x="39.7936%" y="933" width="0.4587%" height="15" fill="rgb(237,140,51)" fg:x="347" fg:w="4"/><text x="40.0436%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.46%)</title><rect x="39.7936%" y="917" width="0.4587%" height="15" fill="rgb(236,157,25)" fg:x="347" fg:w="4"/><text x="40.0436%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.46%)</title><rect x="39.7936%" y="901" width="0.4587%" height="15" fill="rgb(219,209,0)" fg:x="347" fg:w="4"/><text x="40.0436%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.34%)</title><rect x="40.2523%" y="997" width="0.3440%" height="15" fill="rgb(240,116,54)" fg:x="351" fg:w="3"/><text x="40.5023%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.34%)</title><rect x="40.2523%" y="981" width="0.3440%" height="15" fill="rgb(216,10,36)" fg:x="351" fg:w="3"/><text x="40.5023%" y="991.50"></text></g><g><title>core::ptr::write (3 samples, 0.34%)</title><rect x="40.2523%" y="965" width="0.3440%" height="15" fill="rgb(222,72,44)" fg:x="351" fg:w="3"/><text x="40.5023%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.11%)</title><rect x="40.5963%" y="997" width="0.1147%" height="15" fill="rgb(232,159,9)" fg:x="354" fg:w="1"/><text x="40.8463%" y="1007.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.11%)</title><rect x="40.5963%" y="981" width="0.1147%" height="15" fill="rgb(210,39,32)" fg:x="354" fg:w="1"/><text x="40.8463%" y="991.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.11%)</title><rect x="40.5963%" y="965" width="0.1147%" height="15" fill="rgb(216,194,45)" fg:x="354" fg:w="1"/><text x="40.8463%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="949" width="0.1147%" height="15" fill="rgb(218,18,35)" fg:x="354" fg:w="1"/><text x="40.8463%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="933" width="0.1147%" height="15" fill="rgb(207,83,51)" fg:x="354" fg:w="1"/><text x="40.8463%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="917" width="0.1147%" height="15" fill="rgb(225,63,43)" fg:x="354" fg:w="1"/><text x="40.8463%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="901" width="0.1147%" height="15" fill="rgb(207,57,36)" fg:x="354" fg:w="1"/><text x="40.8463%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="885" width="0.1147%" height="15" fill="rgb(216,99,33)" fg:x="354" fg:w="1"/><text x="40.8463%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="869" width="0.1147%" height="15" fill="rgb(225,42,16)" fg:x="354" fg:w="1"/><text x="40.8463%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="853" width="0.1147%" height="15" fill="rgb(220,201,45)" fg:x="354" fg:w="1"/><text x="40.8463%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="837" width="0.1147%" height="15" fill="rgb(225,33,4)" fg:x="354" fg:w="1"/><text x="40.8463%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="821" width="0.1147%" height="15" fill="rgb(224,33,50)" fg:x="354" fg:w="1"/><text x="40.8463%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="805" width="0.1147%" height="15" fill="rgb(246,198,51)" fg:x="354" fg:w="1"/><text x="40.8463%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="789" width="0.1147%" height="15" fill="rgb(205,22,4)" fg:x="354" fg:w="1"/><text x="40.8463%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="773" width="0.1147%" height="15" fill="rgb(206,3,8)" fg:x="354" fg:w="1"/><text x="40.8463%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.5963%" y="757" width="0.1147%" height="15" fill="rgb(251,23,15)" fg:x="354" fg:w="1"/><text x="40.8463%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.7110%" y="949" width="0.1147%" height="15" fill="rgb(252,88,28)" fg:x="355" fg:w="1"/><text x="40.9610%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.7110%" y="933" width="0.1147%" height="15" fill="rgb(212,127,14)" fg:x="355" fg:w="1"/><text x="40.9610%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.7110%" y="917" width="0.1147%" height="15" fill="rgb(247,145,37)" fg:x="355" fg:w="1"/><text x="40.9610%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="40.7110%" y="901" width="0.1147%" height="15" fill="rgb(209,117,53)" fg:x="355" fg:w="1"/><text x="40.9610%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.23%)</title><rect x="40.8257%" y="917" width="0.2294%" height="15" fill="rgb(212,90,42)" fg:x="356" fg:w="2"/><text x="41.0757%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.23%)</title><rect x="40.8257%" y="901" width="0.2294%" height="15" fill="rgb(218,164,37)" fg:x="356" fg:w="2"/><text x="41.0757%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.23%)</title><rect x="40.8257%" y="885" width="0.2294%" height="15" fill="rgb(246,65,34)" fg:x="356" fg:w="2"/><text x="41.0757%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.23%)</title><rect x="40.8257%" y="869" width="0.2294%" height="15" fill="rgb(231,100,33)" fg:x="356" fg:w="2"/><text x="41.0757%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.23%)</title><rect x="40.8257%" y="853" width="0.2294%" height="15" fill="rgb(228,126,14)" fg:x="356" fg:w="2"/><text x="41.0757%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.11%)</title><rect x="41.0550%" y="917" width="0.1147%" height="15" fill="rgb(215,173,21)" fg:x="358" fg:w="1"/><text x="41.3050%" y="927.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.11%)</title><rect x="41.0550%" y="901" width="0.1147%" height="15" fill="rgb(210,6,40)" fg:x="358" fg:w="1"/><text x="41.3050%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.11%)</title><rect x="41.0550%" y="885" width="0.1147%" height="15" fill="rgb(212,48,18)" fg:x="358" fg:w="1"/><text x="41.3050%" y="895.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.11%)</title><rect x="41.0550%" y="869" width="0.1147%" height="15" fill="rgb(230,214,11)" fg:x="358" fg:w="1"/><text x="41.3050%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.11%)</title><rect x="41.1697%" y="837" width="0.1147%" height="15" fill="rgb(254,105,39)" fg:x="359" fg:w="1"/><text x="41.4197%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.1697%" y="821" width="0.1147%" height="15" fill="rgb(245,158,5)" fg:x="359" fg:w="1"/><text x="41.4197%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.1697%" y="805" width="0.1147%" height="15" fill="rgb(249,208,11)" fg:x="359" fg:w="1"/><text x="41.4197%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.1697%" y="789" width="0.1147%" height="15" fill="rgb(210,39,28)" fg:x="359" fg:w="1"/><text x="41.4197%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.1697%" y="773" width="0.1147%" height="15" fill="rgb(211,56,53)" fg:x="359" fg:w="1"/><text x="41.4197%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.1697%" y="757" width="0.1147%" height="15" fill="rgb(226,201,30)" fg:x="359" fg:w="1"/><text x="41.4197%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.1697%" y="741" width="0.1147%" height="15" fill="rgb(239,101,34)" fg:x="359" fg:w="1"/><text x="41.4197%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.1697%" y="725" width="0.1147%" height="15" fill="rgb(226,209,5)" fg:x="359" fg:w="1"/><text x="41.4197%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.1697%" y="709" width="0.1147%" height="15" fill="rgb(250,105,47)" fg:x="359" fg:w="1"/><text x="41.4197%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="41.1697%" y="693" width="0.1147%" height="15" fill="rgb(230,72,3)" fg:x="359" fg:w="1"/><text x="41.4197%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.11%)</title><rect x="41.2844%" y="837" width="0.1147%" height="15" fill="rgb(232,218,39)" fg:x="360" fg:w="1"/><text x="41.5344%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="41.2844%" y="821" width="0.1147%" height="15" fill="rgb(248,166,6)" fg:x="360" fg:w="1"/><text x="41.5344%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.69%)</title><rect x="41.1697%" y="917" width="0.6881%" height="15" fill="rgb(247,89,20)" fg:x="359" fg:w="6"/><text x="41.4197%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.69%)</title><rect x="41.1697%" y="901" width="0.6881%" height="15" fill="rgb(248,130,54)" fg:x="359" fg:w="6"/><text x="41.4197%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.69%)</title><rect x="41.1697%" y="885" width="0.6881%" height="15" fill="rgb(234,196,4)" fg:x="359" fg:w="6"/><text x="41.4197%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.69%)</title><rect x="41.1697%" y="869" width="0.6881%" height="15" fill="rgb(250,143,31)" fg:x="359" fg:w="6"/><text x="41.4197%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.69%)</title><rect x="41.1697%" y="853" width="0.6881%" height="15" fill="rgb(211,110,34)" fg:x="359" fg:w="6"/><text x="41.4197%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.46%)</title><rect x="41.3991%" y="837" width="0.4587%" height="15" fill="rgb(215,124,48)" fg:x="361" fg:w="4"/><text x="41.6491%" y="847.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (12 samples, 1.38%)</title><rect x="40.8257%" y="949" width="1.3761%" height="15" fill="rgb(216,46,13)" fg:x="356" fg:w="12"/><text x="41.0757%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 1.38%)</title><rect x="40.8257%" y="933" width="1.3761%" height="15" fill="rgb(205,184,25)" fg:x="356" fg:w="12"/><text x="41.0757%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.34%)</title><rect x="41.8578%" y="917" width="0.3440%" height="15" fill="rgb(228,1,10)" fg:x="365" fg:w="3"/><text x="42.1078%" y="927.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.34%)</title><rect x="41.8578%" y="901" width="0.3440%" height="15" fill="rgb(213,116,27)" fg:x="365" fg:w="3"/><text x="42.1078%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.34%)</title><rect x="41.8578%" y="885" width="0.3440%" height="15" fill="rgb(241,95,50)" fg:x="365" fg:w="3"/><text x="42.1078%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.34%)</title><rect x="41.8578%" y="869" width="0.3440%" height="15" fill="rgb(238,48,32)" fg:x="365" fg:w="3"/><text x="42.1078%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.34%)</title><rect x="41.8578%" y="853" width="0.3440%" height="15" fill="rgb(235,113,49)" fg:x="365" fg:w="3"/><text x="42.1078%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.11%)</title><rect x="42.0872%" y="837" width="0.1147%" height="15" fill="rgb(205,127,43)" fg:x="367" fg:w="1"/><text x="42.3372%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.0872%" y="821" width="0.1147%" height="15" fill="rgb(250,162,2)" fg:x="367" fg:w="1"/><text x="42.3372%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.0872%" y="805" width="0.1147%" height="15" fill="rgb(220,13,41)" fg:x="367" fg:w="1"/><text x="42.3372%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.0872%" y="789" width="0.1147%" height="15" fill="rgb(249,221,25)" fg:x="367" fg:w="1"/><text x="42.3372%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.0872%" y="773" width="0.1147%" height="15" fill="rgb(215,208,19)" fg:x="367" fg:w="1"/><text x="42.3372%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.0872%" y="757" width="0.1147%" height="15" fill="rgb(236,175,2)" fg:x="367" fg:w="1"/><text x="42.3372%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.0872%" y="741" width="0.1147%" height="15" fill="rgb(241,52,2)" fg:x="367" fg:w="1"/><text x="42.3372%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.0872%" y="725" width="0.1147%" height="15" fill="rgb(248,140,14)" fg:x="367" fg:w="1"/><text x="42.3372%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.0872%" y="709" width="0.1147%" height="15" fill="rgb(253,22,42)" fg:x="367" fg:w="1"/><text x="42.3372%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (3 samples, 0.34%)</title><rect x="42.2018%" y="949" width="0.3440%" height="15" fill="rgb(234,61,47)" fg:x="368" fg:w="3"/><text x="42.4518%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3 samples, 0.34%)</title><rect x="42.2018%" y="933" width="0.3440%" height="15" fill="rgb(208,226,15)" fg:x="368" fg:w="3"/><text x="42.4518%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.34%)</title><rect x="42.2018%" y="917" width="0.3440%" height="15" fill="rgb(217,221,4)" fg:x="368" fg:w="3"/><text x="42.4518%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="42.2018%" y="901" width="0.3440%" height="15" fill="rgb(212,174,34)" fg:x="368" fg:w="3"/><text x="42.4518%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="42.2018%" y="885" width="0.3440%" height="15" fill="rgb(253,83,4)" fg:x="368" fg:w="3"/><text x="42.4518%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="42.2018%" y="869" width="0.3440%" height="15" fill="rgb(250,195,49)" fg:x="368" fg:w="3"/><text x="42.4518%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="42.2018%" y="853" width="0.3440%" height="15" fill="rgb(241,192,25)" fg:x="368" fg:w="3"/><text x="42.4518%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="42.3165%" y="837" width="0.2294%" height="15" fill="rgb(208,124,10)" fg:x="369" fg:w="2"/><text x="42.5665%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="42.3165%" y="821" width="0.2294%" height="15" fill="rgb(222,33,0)" fg:x="369" fg:w="2"/><text x="42.5665%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.4312%" y="805" width="0.1147%" height="15" fill="rgb(234,209,28)" fg:x="370" fg:w="1"/><text x="42.6812%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.4312%" y="789" width="0.1147%" height="15" fill="rgb(224,11,23)" fg:x="370" fg:w="1"/><text x="42.6812%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.4312%" y="773" width="0.1147%" height="15" fill="rgb(232,99,1)" fg:x="370" fg:w="1"/><text x="42.6812%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="42.4312%" y="757" width="0.1147%" height="15" fill="rgb(237,95,45)" fg:x="370" fg:w="1"/><text x="42.6812%" y="767.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::insert (245 samples, 28.10%)</title><rect x="14.5642%" y="1077" width="28.0963%" height="15" fill="rgb(208,109,11)" fg:x="127" fg:w="245"/><text x="14.8142%" y="1087.50">simsearch::SimSearch&lt;Id&gt;::insert</text></g><g><title>simsearch::SimSearch&lt;Id&gt;::insert_tokens (245 samples, 28.10%)</title><rect x="14.5642%" y="1061" width="28.0963%" height="15" fill="rgb(216,190,48)" fg:x="127" fg:w="245"/><text x="14.8142%" y="1071.50">simsearch::SimSearch&lt;Id&gt;::insert_tokens</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (31 samples, 3.56%)</title><rect x="39.1055%" y="1045" width="3.5550%" height="15" fill="rgb(251,171,36)" fg:x="341" fg:w="31"/><text x="39.3555%" y="1055.50">std:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (31 samples, 3.56%)</title><rect x="39.1055%" y="1029" width="3.5550%" height="15" fill="rgb(230,62,22)" fg:x="341" fg:w="31"/><text x="39.3555%" y="1039.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (21 samples, 2.41%)</title><rect x="40.2523%" y="1013" width="2.4083%" height="15" fill="rgb(225,114,35)" fg:x="351" fg:w="21"/><text x="40.5023%" y="1023.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (17 samples, 1.95%)</title><rect x="40.7110%" y="997" width="1.9495%" height="15" fill="rgb(215,118,42)" fg:x="355" fg:w="17"/><text x="40.9610%" y="1007.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 1.95%)</title><rect x="40.7110%" y="981" width="1.9495%" height="15" fill="rgb(243,119,21)" fg:x="355" fg:w="17"/><text x="40.9610%" y="991.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (17 samples, 1.95%)</title><rect x="40.7110%" y="965" width="1.9495%" height="15" fill="rgb(252,177,53)" fg:x="355" fg:w="17"/><text x="40.9610%" y="975.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.11%)</title><rect x="42.5459%" y="949" width="0.1147%" height="15" fill="rgb(237,209,29)" fg:x="371" fg:w="1"/><text x="42.7959%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.11%)</title><rect x="42.5459%" y="933" width="0.1147%" height="15" fill="rgb(212,65,23)" fg:x="371" fg:w="1"/><text x="42.7959%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="42.5459%" y="917" width="0.1147%" height="15" fill="rgb(230,222,46)" fg:x="371" fg:w="1"/><text x="42.7959%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (11 samples, 1.26%)</title><rect x="42.8899%" y="1045" width="1.2615%" height="15" fill="rgb(215,135,32)" fg:x="374" fg:w="11"/><text x="43.1399%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 1.26%)</title><rect x="42.8899%" y="1029" width="1.2615%" height="15" fill="rgb(246,101,22)" fg:x="374" fg:w="11"/><text x="43.1399%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 1.26%)</title><rect x="42.8899%" y="1013" width="1.2615%" height="15" fill="rgb(206,107,13)" fg:x="374" fg:w="11"/><text x="43.1399%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="44.1514%" y="1045" width="0.1147%" height="15" fill="rgb(250,100,44)" fg:x="385" fg:w="1"/><text x="44.4014%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="44.1514%" y="1029" width="0.1147%" height="15" fill="rgb(231,147,38)" fg:x="385" fg:w="1"/><text x="44.4014%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="44.1514%" y="1013" width="0.1147%" height="15" fill="rgb(229,8,40)" fg:x="385" fg:w="1"/><text x="44.4014%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="44.1514%" y="997" width="0.1147%" height="15" fill="rgb(221,135,30)" fg:x="385" fg:w="1"/><text x="44.4014%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="44.1514%" y="981" width="0.1147%" height="15" fill="rgb(249,193,18)" fg:x="385" fg:w="1"/><text x="44.4014%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.11%)</title><rect x="44.1514%" y="965" width="0.1147%" height="15" fill="rgb(209,133,39)" fg:x="385" fg:w="1"/><text x="44.4014%" y="975.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (1 samples, 0.11%)</title><rect x="44.1514%" y="949" width="0.1147%" height="15" fill="rgb(232,100,14)" fg:x="385" fg:w="1"/><text x="44.4014%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (1 samples, 0.11%)</title><rect x="44.2661%" y="965" width="0.1147%" height="15" fill="rgb(224,185,1)" fg:x="386" fg:w="1"/><text x="44.5161%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.11%)</title><rect x="44.2661%" y="949" width="0.1147%" height="15" fill="rgb(223,139,8)" fg:x="386" fg:w="1"/><text x="44.5161%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (1 samples, 0.11%)</title><rect x="44.2661%" y="933" width="0.1147%" height="15" fill="rgb(232,213,38)" fg:x="386" fg:w="1"/><text x="44.5161%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (2 samples, 0.23%)</title><rect x="44.2661%" y="997" width="0.2294%" height="15" fill="rgb(207,94,22)" fg:x="386" fg:w="2"/><text x="44.5161%" y="1007.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::search_tokens::{{closure}} (2 samples, 0.23%)</title><rect x="44.2661%" y="981" width="0.2294%" height="15" fill="rgb(219,183,54)" fg:x="386" fg:w="2"/><text x="44.5161%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="44.3807%" y="965" width="0.1147%" height="15" fill="rgb(216,185,54)" fg:x="387" fg:w="1"/><text x="44.6307%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (3 samples, 0.34%)</title><rect x="44.2661%" y="1045" width="0.3440%" height="15" fill="rgb(254,217,39)" fg:x="386" fg:w="3"/><text x="44.5161%" y="1055.50"></text></g><g><title>alloc::slice::merge_sort (3 samples, 0.34%)</title><rect x="44.2661%" y="1029" width="0.3440%" height="15" fill="rgb(240,178,23)" fg:x="386" fg:w="3"/><text x="44.5161%" y="1039.50"></text></g><g><title>alloc::slice::merge (3 samples, 0.34%)</title><rect x="44.2661%" y="1013" width="0.3440%" height="15" fill="rgb(218,11,47)" fg:x="386" fg:w="3"/><text x="44.5161%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="44.4954%" y="997" width="0.1147%" height="15" fill="rgb(218,51,51)" fg:x="388" fg:w="1"/><text x="44.7454%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="44.6101%" y="821" width="0.1147%" height="15" fill="rgb(238,126,27)" fg:x="389" fg:w="1"/><text x="44.8601%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="44.6101%" y="805" width="0.1147%" height="15" fill="rgb(249,202,22)" fg:x="389" fg:w="1"/><text x="44.8601%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="44.6101%" y="789" width="0.1147%" height="15" fill="rgb(254,195,49)" fg:x="389" fg:w="1"/><text x="44.8601%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.11%)</title><rect x="44.6101%" y="773" width="0.1147%" height="15" fill="rgb(208,123,14)" fg:x="389" fg:w="1"/><text x="44.8601%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.11%)</title><rect x="44.6101%" y="757" width="0.1147%" height="15" fill="rgb(224,200,8)" fg:x="389" fg:w="1"/><text x="44.8601%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.23%)</title><rect x="44.6101%" y="837" width="0.2294%" height="15" fill="rgb(217,61,36)" fg:x="389" fg:w="2"/><text x="44.8601%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.11%)</title><rect x="44.7248%" y="821" width="0.1147%" height="15" fill="rgb(206,35,45)" fg:x="390" fg:w="1"/><text x="44.9748%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.11%)</title><rect x="44.7248%" y="805" width="0.1147%" height="15" fill="rgb(217,65,33)" fg:x="390" fg:w="1"/><text x="44.9748%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="44.7248%" y="789" width="0.1147%" height="15" fill="rgb(222,158,48)" fg:x="390" fg:w="1"/><text x="44.9748%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="44.7248%" y="773" width="0.1147%" height="15" fill="rgb(254,2,54)" fg:x="390" fg:w="1"/><text x="44.9748%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="44.7248%" y="757" width="0.1147%" height="15" fill="rgb(250,143,38)" fg:x="390" fg:w="1"/><text x="44.9748%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.11%)</title><rect x="44.7248%" y="741" width="0.1147%" height="15" fill="rgb(248,25,0)" fg:x="390" fg:w="1"/><text x="44.9748%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="44.7248%" y="725" width="0.1147%" height="15" fill="rgb(206,152,27)" fg:x="390" fg:w="1"/><text x="44.9748%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.34%)</title><rect x="44.6101%" y="1045" width="0.3440%" height="15" fill="rgb(240,77,30)" fg:x="389" fg:w="3"/><text x="44.8601%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="44.6101%" y="1029" width="0.3440%" height="15" fill="rgb(231,5,3)" fg:x="389" fg:w="3"/><text x="44.8601%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="44.6101%" y="1013" width="0.3440%" height="15" fill="rgb(207,226,32)" fg:x="389" fg:w="3"/><text x="44.8601%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="44.6101%" y="997" width="0.3440%" height="15" fill="rgb(222,207,47)" fg:x="389" fg:w="3"/><text x="44.8601%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.34%)</title><rect x="44.6101%" y="981" width="0.3440%" height="15" fill="rgb(229,115,45)" fg:x="389" fg:w="3"/><text x="44.8601%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.34%)</title><rect x="44.6101%" y="965" width="0.3440%" height="15" fill="rgb(224,191,6)" fg:x="389" fg:w="3"/><text x="44.8601%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.34%)</title><rect x="44.6101%" y="949" width="0.3440%" height="15" fill="rgb(230,227,24)" fg:x="389" fg:w="3"/><text x="44.8601%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.34%)</title><rect x="44.6101%" y="933" width="0.3440%" height="15" fill="rgb(228,80,19)" fg:x="389" fg:w="3"/><text x="44.8601%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.34%)</title><rect x="44.6101%" y="917" width="0.3440%" height="15" fill="rgb(247,229,0)" fg:x="389" fg:w="3"/><text x="44.8601%" y="927.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::search_tokens::{{closure}} (3 samples, 0.34%)</title><rect x="44.6101%" y="901" width="0.3440%" height="15" fill="rgb(237,194,15)" fg:x="389" fg:w="3"/><text x="44.8601%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.34%)</title><rect x="44.6101%" y="885" width="0.3440%" height="15" fill="rgb(219,203,20)" fg:x="389" fg:w="3"/><text x="44.8601%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.34%)</title><rect x="44.6101%" y="869" width="0.3440%" height="15" fill="rgb(234,128,8)" fg:x="389" fg:w="3"/><text x="44.8601%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.34%)</title><rect x="44.6101%" y="853" width="0.3440%" height="15" fill="rgb(248,202,8)" fg:x="389" fg:w="3"/><text x="44.8601%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.11%)</title><rect x="44.8394%" y="837" width="0.1147%" height="15" fill="rgb(206,104,37)" fg:x="391" fg:w="1"/><text x="45.0894%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="44.8394%" y="821" width="0.1147%" height="15" fill="rgb(223,8,27)" fg:x="391" fg:w="1"/><text x="45.0894%" y="831.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1 samples, 0.11%)</title><rect x="44.9541%" y="1045" width="0.1147%" height="15" fill="rgb(216,217,28)" fg:x="392" fg:w="1"/><text x="45.2041%" y="1055.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.11%)</title><rect x="44.9541%" y="1029" width="0.1147%" height="15" fill="rgb(249,199,1)" fg:x="392" fg:w="1"/><text x="45.2041%" y="1039.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.11%)</title><rect x="44.9541%" y="1013" width="0.1147%" height="15" fill="rgb(240,85,17)" fg:x="392" fg:w="1"/><text x="45.2041%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.11%)</title><rect x="44.9541%" y="997" width="0.1147%" height="15" fill="rgb(206,108,45)" fg:x="392" fg:w="1"/><text x="45.2041%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.11%)</title><rect x="44.9541%" y="981" width="0.1147%" height="15" fill="rgb(245,210,41)" fg:x="392" fg:w="1"/><text x="45.2041%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.11%)</title><rect x="44.9541%" y="965" width="0.1147%" height="15" fill="rgb(206,13,37)" fg:x="392" fg:w="1"/><text x="45.2041%" y="975.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.11%)</title><rect x="44.9541%" y="949" width="0.1147%" height="15" fill="rgb(250,61,18)" fg:x="392" fg:w="1"/><text x="45.2041%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="45.0688%" y="917" width="0.1147%" height="15" fill="rgb(235,172,48)" fg:x="393" fg:w="1"/><text x="45.3188%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="45.0688%" y="901" width="0.1147%" height="15" fill="rgb(249,201,17)" fg:x="393" fg:w="1"/><text x="45.3188%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="45.0688%" y="885" width="0.1147%" height="15" fill="rgb(219,208,6)" fg:x="393" fg:w="1"/><text x="45.3188%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.23%)</title><rect x="45.0688%" y="1013" width="0.2294%" height="15" fill="rgb(248,31,23)" fg:x="393" fg:w="2"/><text x="45.3188%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="45.0688%" y="997" width="0.2294%" height="15" fill="rgb(245,15,42)" fg:x="393" fg:w="2"/><text x="45.3188%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.23%)</title><rect x="45.0688%" y="981" width="0.2294%" height="15" fill="rgb(222,217,39)" fg:x="393" fg:w="2"/><text x="45.3188%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.23%)</title><rect x="45.0688%" y="965" width="0.2294%" height="15" fill="rgb(210,219,27)" fg:x="393" fg:w="2"/><text x="45.3188%" y="975.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.23%)</title><rect x="45.0688%" y="949" width="0.2294%" height="15" fill="rgb(252,166,36)" fg:x="393" fg:w="2"/><text x="45.3188%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.23%)</title><rect x="45.0688%" y="933" width="0.2294%" height="15" fill="rgb(245,132,34)" fg:x="393" fg:w="2"/><text x="45.3188%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.11%)</title><rect x="45.1835%" y="917" width="0.1147%" height="15" fill="rgb(236,54,3)" fg:x="394" fg:w="1"/><text x="45.4335%" y="927.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.11%)</title><rect x="45.1835%" y="901" width="0.1147%" height="15" fill="rgb(241,173,43)" fg:x="394" fg:w="1"/><text x="45.4335%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="45.1835%" y="885" width="0.1147%" height="15" fill="rgb(215,190,9)" fg:x="394" fg:w="1"/><text x="45.4335%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="45.1835%" y="869" width="0.1147%" height="15" fill="rgb(242,101,16)" fg:x="394" fg:w="1"/><text x="45.4335%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.11%)</title><rect x="45.1835%" y="853" width="0.1147%" height="15" fill="rgb(223,190,21)" fg:x="394" fg:w="1"/><text x="45.4335%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.11%)</title><rect x="45.1835%" y="837" width="0.1147%" height="15" fill="rgb(215,228,25)" fg:x="394" fg:w="1"/><text x="45.4335%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="45.1835%" y="821" width="0.1147%" height="15" fill="rgb(225,36,22)" fg:x="394" fg:w="1"/><text x="45.4335%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="45.2982%" y="997" width="0.1147%" height="15" fill="rgb(251,106,46)" fg:x="395" fg:w="1"/><text x="45.5482%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="45.2982%" y="981" width="0.1147%" height="15" fill="rgb(208,90,1)" fg:x="395" fg:w="1"/><text x="45.5482%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="45.2982%" y="965" width="0.1147%" height="15" fill="rgb(243,10,4)" fg:x="395" fg:w="1"/><text x="45.5482%" y="975.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="45.2982%" y="949" width="0.1147%" height="15" fill="rgb(212,137,27)" fg:x="395" fg:w="1"/><text x="45.5482%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (4 samples, 0.46%)</title><rect x="45.0688%" y="1045" width="0.4587%" height="15" fill="rgb(231,220,49)" fg:x="393" fg:w="4"/><text x="45.3188%" y="1055.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.46%)</title><rect x="45.0688%" y="1029" width="0.4587%" height="15" fill="rgb(237,96,20)" fg:x="393" fg:w="4"/><text x="45.3188%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.23%)</title><rect x="45.2982%" y="1013" width="0.2294%" height="15" fill="rgb(239,229,30)" fg:x="395" fg:w="2"/><text x="45.5482%" y="1023.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1 samples, 0.11%)</title><rect x="45.4128%" y="997" width="0.1147%" height="15" fill="rgb(219,65,33)" fg:x="396" fg:w="1"/><text x="45.6628%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (1 samples, 0.11%)</title><rect x="45.4128%" y="981" width="0.1147%" height="15" fill="rgb(243,134,7)" fg:x="396" fg:w="1"/><text x="45.6628%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.11%)</title><rect x="45.5275%" y="1045" width="0.1147%" height="15" fill="rgb(216,177,54)" fg:x="397" fg:w="1"/><text x="45.7775%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="45.5275%" y="1029" width="0.1147%" height="15" fill="rgb(211,160,20)" fg:x="397" fg:w="1"/><text x="45.7775%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="45.5275%" y="1013" width="0.1147%" height="15" fill="rgb(239,85,39)" fg:x="397" fg:w="1"/><text x="45.7775%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="45.5275%" y="997" width="0.1147%" height="15" fill="rgb(232,125,22)" fg:x="397" fg:w="1"/><text x="45.7775%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="45.5275%" y="981" width="0.1147%" height="15" fill="rgb(244,57,34)" fg:x="397" fg:w="1"/><text x="45.7775%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.11%)</title><rect x="45.5275%" y="965" width="0.1147%" height="15" fill="rgb(214,203,32)" fg:x="397" fg:w="1"/><text x="45.7775%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.11%)</title><rect x="45.5275%" y="949" width="0.1147%" height="15" fill="rgb(207,58,43)" fg:x="397" fg:w="1"/><text x="45.7775%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.11%)</title><rect x="45.5275%" y="933" width="0.1147%" height="15" fill="rgb(215,193,15)" fg:x="397" fg:w="1"/><text x="45.7775%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="45.5275%" y="917" width="0.1147%" height="15" fill="rgb(232,15,44)" fg:x="397" fg:w="1"/><text x="45.7775%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="45.5275%" y="901" width="0.1147%" height="15" fill="rgb(212,3,48)" fg:x="397" fg:w="1"/><text x="45.7775%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.34%)</title><rect x="46.9037%" y="1013" width="0.3440%" height="15" fill="rgb(218,128,7)" fg:x="409" fg:w="3"/><text x="47.1537%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.34%)</title><rect x="46.9037%" y="997" width="0.3440%" height="15" fill="rgb(226,216,39)" fg:x="409" fg:w="3"/><text x="47.1537%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.34%)</title><rect x="46.9037%" y="981" width="0.3440%" height="15" fill="rgb(243,47,51)" fg:x="409" fg:w="3"/><text x="47.1537%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.34%)</title><rect x="46.9037%" y="965" width="0.3440%" height="15" fill="rgb(241,183,40)" fg:x="409" fg:w="3"/><text x="47.1537%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="47.0183%" y="949" width="0.2294%" height="15" fill="rgb(231,217,32)" fg:x="410" fg:w="2"/><text x="47.2683%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.23%)</title><rect x="47.0183%" y="933" width="0.2294%" height="15" fill="rgb(229,61,38)" fg:x="410" fg:w="2"/><text x="47.2683%" y="943.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="47.0183%" y="917" width="0.2294%" height="15" fill="rgb(225,210,5)" fg:x="410" fg:w="2"/><text x="47.2683%" y="927.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.23%)</title><rect x="47.0183%" y="901" width="0.2294%" height="15" fill="rgb(231,79,45)" fg:x="410" fg:w="2"/><text x="47.2683%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="47.1330%" y="885" width="0.1147%" height="15" fill="rgb(224,100,7)" fg:x="411" fg:w="1"/><text x="47.3830%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="47.1330%" y="869" width="0.1147%" height="15" fill="rgb(241,198,18)" fg:x="411" fg:w="1"/><text x="47.3830%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="47.1330%" y="853" width="0.1147%" height="15" fill="rgb(252,97,53)" fg:x="411" fg:w="1"/><text x="47.3830%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="47.1330%" y="837" width="0.1147%" height="15" fill="rgb(220,88,7)" fg:x="411" fg:w="1"/><text x="47.3830%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="47.1330%" y="821" width="0.1147%" height="15" fill="rgb(213,176,14)" fg:x="411" fg:w="1"/><text x="47.3830%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (16 samples, 1.83%)</title><rect x="56.1927%" y="997" width="1.8349%" height="15" fill="rgb(246,73,7)" fg:x="490" fg:w="16"/><text x="56.4427%" y="1007.50">&lt;..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (16 samples, 1.83%)</title><rect x="56.1927%" y="981" width="1.8349%" height="15" fill="rgb(245,64,36)" fg:x="490" fg:w="16"/><text x="56.4427%" y="991.50">c..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 1.83%)</title><rect x="56.1927%" y="965" width="1.8349%" height="15" fill="rgb(245,80,10)" fg:x="490" fg:w="16"/><text x="56.4427%" y="975.50">&lt;..</text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="933" width="0.1147%" height="15" fill="rgb(232,107,50)" fg:x="564" fg:w="1"/><text x="64.9289%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="917" width="0.1147%" height="15" fill="rgb(253,3,0)" fg:x="564" fg:w="1"/><text x="64.9289%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="901" width="0.1147%" height="15" fill="rgb(212,99,53)" fg:x="564" fg:w="1"/><text x="64.9289%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="885" width="0.1147%" height="15" fill="rgb(249,111,54)" fg:x="564" fg:w="1"/><text x="64.9289%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="869" width="0.1147%" height="15" fill="rgb(249,55,30)" fg:x="564" fg:w="1"/><text x="64.9289%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="853" width="0.1147%" height="15" fill="rgb(237,47,42)" fg:x="564" fg:w="1"/><text x="64.9289%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="837" width="0.1147%" height="15" fill="rgb(211,20,18)" fg:x="564" fg:w="1"/><text x="64.9289%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="821" width="0.1147%" height="15" fill="rgb(231,203,46)" fg:x="564" fg:w="1"/><text x="64.9289%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="805" width="0.1147%" height="15" fill="rgb(237,142,3)" fg:x="564" fg:w="1"/><text x="64.9289%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="789" width="0.1147%" height="15" fill="rgb(241,107,1)" fg:x="564" fg:w="1"/><text x="64.9289%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="773" width="0.1147%" height="15" fill="rgb(229,83,13)" fg:x="564" fg:w="1"/><text x="64.9289%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="757" width="0.1147%" height="15" fill="rgb(241,91,40)" fg:x="564" fg:w="1"/><text x="64.9289%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="741" width="0.1147%" height="15" fill="rgb(225,3,45)" fg:x="564" fg:w="1"/><text x="64.9289%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="725" width="0.1147%" height="15" fill="rgb(244,223,14)" fg:x="564" fg:w="1"/><text x="64.9289%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="709" width="0.1147%" height="15" fill="rgb(224,124,37)" fg:x="564" fg:w="1"/><text x="64.9289%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="693" width="0.1147%" height="15" fill="rgb(251,171,30)" fg:x="564" fg:w="1"/><text x="64.9289%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="677" width="0.1147%" height="15" fill="rgb(236,46,54)" fg:x="564" fg:w="1"/><text x="64.9289%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="64.6789%" y="661" width="0.1147%" height="15" fill="rgb(245,213,5)" fg:x="564" fg:w="1"/><text x="64.9289%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 2.41%)</title><rect x="63.0734%" y="949" width="2.4083%" height="15" fill="rgb(230,144,27)" fg:x="550" fg:w="21"/><text x="63.3234%" y="959.50">&lt;c..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (6 samples, 0.69%)</title><rect x="64.7936%" y="933" width="0.6881%" height="15" fill="rgb(220,86,6)" fg:x="565" fg:w="6"/><text x="65.0436%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.69%)</title><rect x="64.7936%" y="917" width="0.6881%" height="15" fill="rgb(240,20,13)" fg:x="565" fg:w="6"/><text x="65.0436%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 6.77%)</title><rect x="59.0596%" y="981" width="6.7661%" height="15" fill="rgb(217,89,34)" fg:x="515" fg:w="59"/><text x="59.3096%" y="991.50">&lt;core::st..</text></g><g><title>core::str::validations::next_code_point (59 samples, 6.77%)</title><rect x="59.0596%" y="965" width="6.7661%" height="15" fill="rgb(229,13,5)" fg:x="515" fg:w="59"/><text x="59.3096%" y="975.50">core::str..</text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="65.4817%" y="949" width="0.3440%" height="15" fill="rgb(244,67,35)" fg:x="571" fg:w="3"/><text x="65.7317%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="65.4817%" y="933" width="0.3440%" height="15" fill="rgb(221,40,2)" fg:x="571" fg:w="3"/><text x="65.7317%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="65.4817%" y="917" width="0.3440%" height="15" fill="rgb(237,157,21)" fg:x="571" fg:w="3"/><text x="65.7317%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="65.4817%" y="901" width="0.3440%" height="15" fill="rgb(222,94,11)" fg:x="571" fg:w="3"/><text x="65.7317%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="65.4817%" y="885" width="0.3440%" height="15" fill="rgb(249,113,6)" fg:x="571" fg:w="3"/><text x="65.7317%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="65.4817%" y="869" width="0.3440%" height="15" fill="rgb(238,137,36)" fg:x="571" fg:w="3"/><text x="65.7317%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="65.4817%" y="853" width="0.3440%" height="15" fill="rgb(210,102,26)" fg:x="571" fg:w="3"/><text x="65.7317%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="65.4817%" y="837" width="0.3440%" height="15" fill="rgb(218,30,30)" fg:x="571" fg:w="3"/><text x="65.7317%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="821" width="0.1147%" height="15" fill="rgb(214,67,26)" fg:x="573" fg:w="1"/><text x="65.9610%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="805" width="0.1147%" height="15" fill="rgb(251,9,53)" fg:x="573" fg:w="1"/><text x="65.9610%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="789" width="0.1147%" height="15" fill="rgb(228,204,25)" fg:x="573" fg:w="1"/><text x="65.9610%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="773" width="0.1147%" height="15" fill="rgb(207,153,8)" fg:x="573" fg:w="1"/><text x="65.9610%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="757" width="0.1147%" height="15" fill="rgb(242,9,16)" fg:x="573" fg:w="1"/><text x="65.9610%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="741" width="0.1147%" height="15" fill="rgb(217,211,10)" fg:x="573" fg:w="1"/><text x="65.9610%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="725" width="0.1147%" height="15" fill="rgb(219,228,52)" fg:x="573" fg:w="1"/><text x="65.9610%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="709" width="0.1147%" height="15" fill="rgb(231,92,29)" fg:x="573" fg:w="1"/><text x="65.9610%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="693" width="0.1147%" height="15" fill="rgb(232,8,23)" fg:x="573" fg:w="1"/><text x="65.9610%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="677" width="0.1147%" height="15" fill="rgb(216,211,34)" fg:x="573" fg:w="1"/><text x="65.9610%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="661" width="0.1147%" height="15" fill="rgb(236,151,0)" fg:x="573" fg:w="1"/><text x="65.9610%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="645" width="0.1147%" height="15" fill="rgb(209,168,3)" fg:x="573" fg:w="1"/><text x="65.9610%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="629" width="0.1147%" height="15" fill="rgb(208,129,28)" fg:x="573" fg:w="1"/><text x="65.9610%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="613" width="0.1147%" height="15" fill="rgb(229,78,22)" fg:x="573" fg:w="1"/><text x="65.9610%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="597" width="0.1147%" height="15" fill="rgb(228,187,13)" fg:x="573" fg:w="1"/><text x="65.9610%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="581" width="0.1147%" height="15" fill="rgb(240,119,24)" fg:x="573" fg:w="1"/><text x="65.9610%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="565" width="0.1147%" height="15" fill="rgb(209,194,42)" fg:x="573" fg:w="1"/><text x="65.9610%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="549" width="0.1147%" height="15" fill="rgb(247,200,46)" fg:x="573" fg:w="1"/><text x="65.9610%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="533" width="0.1147%" height="15" fill="rgb(218,76,16)" fg:x="573" fg:w="1"/><text x="65.9610%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.7110%" y="517" width="0.1147%" height="15" fill="rgb(225,21,48)" fg:x="573" fg:w="1"/><text x="65.9610%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 7.91%)</title><rect x="58.0275%" y="997" width="7.9128%" height="15" fill="rgb(239,223,50)" fg:x="506" fg:w="69"/><text x="58.2775%" y="1007.50">&lt;core::iter..</text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.8257%" y="981" width="0.1147%" height="15" fill="rgb(244,45,21)" fg:x="574" fg:w="1"/><text x="66.0757%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.8257%" y="965" width="0.1147%" height="15" fill="rgb(232,33,43)" fg:x="574" fg:w="1"/><text x="66.0757%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.8257%" y="949" width="0.1147%" height="15" fill="rgb(209,8,3)" fg:x="574" fg:w="1"/><text x="66.0757%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.8257%" y="933" width="0.1147%" height="15" fill="rgb(214,25,53)" fg:x="574" fg:w="1"/><text x="66.0757%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.8257%" y="917" width="0.1147%" height="15" fill="rgb(254,186,54)" fg:x="574" fg:w="1"/><text x="66.0757%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.8257%" y="901" width="0.1147%" height="15" fill="rgb(208,174,49)" fg:x="574" fg:w="1"/><text x="66.0757%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.8257%" y="885" width="0.1147%" height="15" fill="rgb(233,191,51)" fg:x="574" fg:w="1"/><text x="66.0757%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="65.8257%" y="869" width="0.1147%" height="15" fill="rgb(222,134,10)" fg:x="574" fg:w="1"/><text x="66.0757%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 1.38%)</title><rect x="79.7018%" y="901" width="1.3761%" height="15" fill="rgb(230,226,20)" fg:x="695" fg:w="12"/><text x="79.9518%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.23%)</title><rect x="80.8486%" y="885" width="0.2294%" height="15" fill="rgb(251,111,25)" fg:x="705" fg:w="2"/><text x="81.0986%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.23%)</title><rect x="80.8486%" y="869" width="0.2294%" height="15" fill="rgb(224,40,46)" fg:x="705" fg:w="2"/><text x="81.0986%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="901" width="0.5734%" height="15" fill="rgb(236,108,47)" fg:x="707" fg:w="5"/><text x="81.3280%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="885" width="0.5734%" height="15" fill="rgb(234,93,0)" fg:x="707" fg:w="5"/><text x="81.3280%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="869" width="0.5734%" height="15" fill="rgb(224,213,32)" fg:x="707" fg:w="5"/><text x="81.3280%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="853" width="0.5734%" height="15" fill="rgb(251,11,48)" fg:x="707" fg:w="5"/><text x="81.3280%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="837" width="0.5734%" height="15" fill="rgb(236,173,5)" fg:x="707" fg:w="5"/><text x="81.3280%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="821" width="0.5734%" height="15" fill="rgb(230,95,12)" fg:x="707" fg:w="5"/><text x="81.3280%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="805" width="0.5734%" height="15" fill="rgb(232,209,1)" fg:x="707" fg:w="5"/><text x="81.3280%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="789" width="0.5734%" height="15" fill="rgb(232,6,1)" fg:x="707" fg:w="5"/><text x="81.3280%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="773" width="0.5734%" height="15" fill="rgb(210,224,50)" fg:x="707" fg:w="5"/><text x="81.3280%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="757" width="0.5734%" height="15" fill="rgb(228,127,35)" fg:x="707" fg:w="5"/><text x="81.3280%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="741" width="0.5734%" height="15" fill="rgb(245,102,45)" fg:x="707" fg:w="5"/><text x="81.3280%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="725" width="0.5734%" height="15" fill="rgb(214,1,49)" fg:x="707" fg:w="5"/><text x="81.3280%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="81.0780%" y="709" width="0.5734%" height="15" fill="rgb(226,163,40)" fg:x="707" fg:w="5"/><text x="81.3280%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (17 samples, 1.95%)</title><rect x="81.6514%" y="885" width="1.9495%" height="15" fill="rgb(239,212,28)" fg:x="712" fg:w="17"/><text x="81.9014%" y="895.50">&lt;..</text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count::{{closure}} (8 samples, 0.92%)</title><rect x="82.6835%" y="869" width="0.9174%" height="15" fill="rgb(220,20,13)" fg:x="721" fg:w="8"/><text x="82.9335%" y="879.50"></text></g><g><title>core::str::validations::utf8_is_cont_byte (8 samples, 0.92%)</title><rect x="82.6835%" y="853" width="0.9174%" height="15" fill="rgb(210,164,35)" fg:x="721" fg:w="8"/><text x="82.9335%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="83.4862%" y="837" width="0.1147%" height="15" fill="rgb(248,109,41)" fg:x="728" fg:w="1"/><text x="83.7362%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="83.4862%" y="821" width="0.1147%" height="15" fill="rgb(238,23,50)" fg:x="728" fg:w="1"/><text x="83.7362%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="83.4862%" y="805" width="0.1147%" height="15" fill="rgb(211,48,49)" fg:x="728" fg:w="1"/><text x="83.7362%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="83.4862%" y="789" width="0.1147%" height="15" fill="rgb(223,36,21)" fg:x="728" fg:w="1"/><text x="83.7362%" y="799.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (159 samples, 18.23%)</title><rect x="65.9404%" y="997" width="18.2339%" height="15" fill="rgb(207,123,46)" fg:x="575" fg:w="159"/><text x="66.1904%" y="1007.50">&lt;core::str::iter::Chars as c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (159 samples, 18.23%)</title><rect x="65.9404%" y="981" width="18.2339%" height="15" fill="rgb(240,218,32)" fg:x="575" fg:w="159"/><text x="66.1904%" y="991.50">&lt;core::iter::adapters::filte..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (159 samples, 18.23%)</title><rect x="65.9404%" y="965" width="18.2339%" height="15" fill="rgb(252,5,43)" fg:x="575" fg:w="159"/><text x="66.1904%" y="975.50">core::iter::traits::iterator..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (159 samples, 18.23%)</title><rect x="65.9404%" y="949" width="18.2339%" height="15" fill="rgb(252,84,19)" fg:x="575" fg:w="159"/><text x="66.1904%" y="959.50">&lt;usize as core::iter::traits..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (159 samples, 18.23%)</title><rect x="65.9404%" y="933" width="18.2339%" height="15" fill="rgb(243,152,39)" fg:x="575" fg:w="159"/><text x="66.1904%" y="943.50">&lt;core::iter::adapters::map::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (159 samples, 18.23%)</title><rect x="65.9404%" y="917" width="18.2339%" height="15" fill="rgb(234,160,15)" fg:x="575" fg:w="159"/><text x="66.1904%" y="927.50">core::iter::traits::iterator..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (22 samples, 2.52%)</title><rect x="81.6514%" y="901" width="2.5229%" height="15" fill="rgb(237,34,20)" fg:x="712" fg:w="22"/><text x="81.9014%" y="911.50">co..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (5 samples, 0.57%)</title><rect x="83.6009%" y="885" width="0.5734%" height="15" fill="rgb(229,97,13)" fg:x="729" fg:w="5"/><text x="83.8509%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="869" width="0.1147%" height="15" fill="rgb(234,71,50)" fg:x="733" fg:w="1"/><text x="84.3096%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="853" width="0.1147%" height="15" fill="rgb(253,155,4)" fg:x="733" fg:w="1"/><text x="84.3096%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="837" width="0.1147%" height="15" fill="rgb(222,185,37)" fg:x="733" fg:w="1"/><text x="84.3096%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="821" width="0.1147%" height="15" fill="rgb(251,177,13)" fg:x="733" fg:w="1"/><text x="84.3096%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="805" width="0.1147%" height="15" fill="rgb(250,179,40)" fg:x="733" fg:w="1"/><text x="84.3096%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="789" width="0.1147%" height="15" fill="rgb(242,44,2)" fg:x="733" fg:w="1"/><text x="84.3096%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="773" width="0.1147%" height="15" fill="rgb(216,177,13)" fg:x="733" fg:w="1"/><text x="84.3096%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="757" width="0.1147%" height="15" fill="rgb(216,106,43)" fg:x="733" fg:w="1"/><text x="84.3096%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="741" width="0.1147%" height="15" fill="rgb(216,183,2)" fg:x="733" fg:w="1"/><text x="84.3096%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="725" width="0.1147%" height="15" fill="rgb(249,75,3)" fg:x="733" fg:w="1"/><text x="84.3096%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="709" width="0.1147%" height="15" fill="rgb(219,67,39)" fg:x="733" fg:w="1"/><text x="84.3096%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="693" width="0.1147%" height="15" fill="rgb(253,228,2)" fg:x="733" fg:w="1"/><text x="84.3096%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="677" width="0.1147%" height="15" fill="rgb(235,138,27)" fg:x="733" fg:w="1"/><text x="84.3096%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="661" width="0.1147%" height="15" fill="rgb(236,97,51)" fg:x="733" fg:w="1"/><text x="84.3096%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="645" width="0.1147%" height="15" fill="rgb(240,80,30)" fg:x="733" fg:w="1"/><text x="84.3096%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="629" width="0.1147%" height="15" fill="rgb(230,178,19)" fg:x="733" fg:w="1"/><text x="84.3096%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="613" width="0.1147%" height="15" fill="rgb(210,190,27)" fg:x="733" fg:w="1"/><text x="84.3096%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.0596%" y="597" width="0.1147%" height="15" fill="rgb(222,107,31)" fg:x="733" fg:w="1"/><text x="84.3096%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="997" width="0.2294%" height="15" fill="rgb(216,127,34)" fg:x="734" fg:w="2"/><text x="84.4243%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="981" width="0.2294%" height="15" fill="rgb(234,116,52)" fg:x="734" fg:w="2"/><text x="84.4243%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="965" width="0.2294%" height="15" fill="rgb(222,124,15)" fg:x="734" fg:w="2"/><text x="84.4243%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="949" width="0.2294%" height="15" fill="rgb(231,179,28)" fg:x="734" fg:w="2"/><text x="84.4243%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="933" width="0.2294%" height="15" fill="rgb(226,93,45)" fg:x="734" fg:w="2"/><text x="84.4243%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="917" width="0.2294%" height="15" fill="rgb(215,8,51)" fg:x="734" fg:w="2"/><text x="84.4243%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="901" width="0.2294%" height="15" fill="rgb(223,106,5)" fg:x="734" fg:w="2"/><text x="84.4243%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="885" width="0.2294%" height="15" fill="rgb(250,191,5)" fg:x="734" fg:w="2"/><text x="84.4243%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="869" width="0.2294%" height="15" fill="rgb(242,132,44)" fg:x="734" fg:w="2"/><text x="84.4243%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="853" width="0.2294%" height="15" fill="rgb(251,152,29)" fg:x="734" fg:w="2"/><text x="84.4243%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="837" width="0.2294%" height="15" fill="rgb(218,179,5)" fg:x="734" fg:w="2"/><text x="84.4243%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="821" width="0.2294%" height="15" fill="rgb(227,67,19)" fg:x="734" fg:w="2"/><text x="84.4243%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="805" width="0.2294%" height="15" fill="rgb(233,119,31)" fg:x="734" fg:w="2"/><text x="84.4243%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="789" width="0.2294%" height="15" fill="rgb(241,120,22)" fg:x="734" fg:w="2"/><text x="84.4243%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="773" width="0.2294%" height="15" fill="rgb(224,102,30)" fg:x="734" fg:w="2"/><text x="84.4243%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="757" width="0.2294%" height="15" fill="rgb(210,164,37)" fg:x="734" fg:w="2"/><text x="84.4243%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="741" width="0.2294%" height="15" fill="rgb(226,191,16)" fg:x="734" fg:w="2"/><text x="84.4243%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="725" width="0.2294%" height="15" fill="rgb(214,40,45)" fg:x="734" fg:w="2"/><text x="84.4243%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="709" width="0.2294%" height="15" fill="rgb(244,29,26)" fg:x="734" fg:w="2"/><text x="84.4243%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="84.1743%" y="693" width="0.2294%" height="15" fill="rgb(216,16,5)" fg:x="734" fg:w="2"/><text x="84.4243%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.2890%" y="677" width="0.1147%" height="15" fill="rgb(249,76,35)" fg:x="735" fg:w="1"/><text x="84.5390%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.2890%" y="661" width="0.1147%" height="15" fill="rgb(207,11,44)" fg:x="735" fg:w="1"/><text x="84.5390%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="84.2890%" y="645" width="0.1147%" height="15" fill="rgb(228,190,49)" fg:x="735" fg:w="1"/><text x="84.5390%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 1.26%)</title><rect x="84.4037%" y="997" width="1.2615%" height="15" fill="rgb(214,173,12)" fg:x="736" fg:w="11"/><text x="84.6537%" y="1007.50"></text></g><g><title>core::ptr::write (4 samples, 0.46%)</title><rect x="85.2064%" y="981" width="0.4587%" height="15" fill="rgb(218,26,35)" fg:x="743" fg:w="4"/><text x="85.4564%" y="991.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="85.6651%" y="885" width="0.1147%" height="15" fill="rgb(220,200,19)" fg:x="747" fg:w="1"/><text x="85.9151%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.23%)</title><rect x="85.6651%" y="997" width="0.2294%" height="15" fill="rgb(239,95,49)" fg:x="747" fg:w="2"/><text x="85.9151%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="85.6651%" y="981" width="0.2294%" height="15" fill="rgb(235,85,53)" fg:x="747" fg:w="2"/><text x="85.9151%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="85.6651%" y="965" width="0.2294%" height="15" fill="rgb(233,133,31)" fg:x="747" fg:w="2"/><text x="85.9151%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="85.6651%" y="949" width="0.2294%" height="15" fill="rgb(218,25,20)" fg:x="747" fg:w="2"/><text x="85.9151%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.23%)</title><rect x="85.6651%" y="933" width="0.2294%" height="15" fill="rgb(252,210,38)" fg:x="747" fg:w="2"/><text x="85.9151%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.23%)</title><rect x="85.6651%" y="917" width="0.2294%" height="15" fill="rgb(242,134,21)" fg:x="747" fg:w="2"/><text x="85.9151%" y="927.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.23%)</title><rect x="85.6651%" y="901" width="0.2294%" height="15" fill="rgb(213,28,48)" fg:x="747" fg:w="2"/><text x="85.9151%" y="911.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="85.7798%" y="885" width="0.1147%" height="15" fill="rgb(250,196,2)" fg:x="748" fg:w="1"/><text x="86.0298%" y="895.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="85.7798%" y="869" width="0.1147%" height="15" fill="rgb(227,5,17)" fg:x="748" fg:w="1"/><text x="86.0298%" y="879.50"></text></g><g><title>core::cmp::max (2 samples, 0.23%)</title><rect x="85.8945%" y="997" width="0.2294%" height="15" fill="rgb(221,226,24)" fg:x="749" fg:w="2"/><text x="86.1445%" y="1007.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.23%)</title><rect x="85.8945%" y="981" width="0.2294%" height="15" fill="rgb(211,5,48)" fg:x="749" fg:w="2"/><text x="86.1445%" y="991.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.23%)</title><rect x="85.8945%" y="965" width="0.2294%" height="15" fill="rgb(219,150,6)" fg:x="749" fg:w="2"/><text x="86.1445%" y="975.50"></text></g><g><title>core::cmp::min (8 samples, 0.92%)</title><rect x="86.1239%" y="997" width="0.9174%" height="15" fill="rgb(251,46,16)" fg:x="751" fg:w="8"/><text x="86.3739%" y="1007.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.92%)</title><rect x="86.1239%" y="981" width="0.9174%" height="15" fill="rgb(220,204,40)" fg:x="751" fg:w="8"/><text x="86.3739%" y="991.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.92%)</title><rect x="86.1239%" y="965" width="0.9174%" height="15" fill="rgb(211,85,2)" fg:x="751" fg:w="8"/><text x="86.3739%" y="975.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.11%)</title><rect x="87.0413%" y="997" width="0.1147%" height="15" fill="rgb(229,17,7)" fg:x="759" fg:w="1"/><text x="87.2913%" y="1007.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.11%)</title><rect x="87.0413%" y="981" width="0.1147%" height="15" fill="rgb(239,72,28)" fg:x="759" fg:w="1"/><text x="87.2913%" y="991.50"></text></g><g><title>__GI___libc_free (9 samples, 1.03%)</title><rect x="87.2706%" y="917" width="1.0321%" height="15" fill="rgb(230,47,54)" fg:x="761" fg:w="9"/><text x="87.5206%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.1881%" y="901" width="0.1147%" height="15" fill="rgb(214,50,8)" fg:x="769" fg:w="1"/><text x="88.4381%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.1881%" y="885" width="0.1147%" height="15" fill="rgb(216,198,43)" fg:x="769" fg:w="1"/><text x="88.4381%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.1881%" y="869" width="0.1147%" height="15" fill="rgb(234,20,35)" fg:x="769" fg:w="1"/><text x="88.4381%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.1881%" y="853" width="0.1147%" height="15" fill="rgb(254,45,19)" fg:x="769" fg:w="1"/><text x="88.4381%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.1881%" y="837" width="0.1147%" height="15" fill="rgb(219,14,44)" fg:x="769" fg:w="1"/><text x="88.4381%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.1881%" y="821" width="0.1147%" height="15" fill="rgb(217,220,26)" fg:x="769" fg:w="1"/><text x="88.4381%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.1881%" y="805" width="0.1147%" height="15" fill="rgb(213,158,28)" fg:x="769" fg:w="1"/><text x="88.4381%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.1881%" y="789" width="0.1147%" height="15" fill="rgb(252,51,52)" fg:x="769" fg:w="1"/><text x="88.4381%" y="799.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.11%)</title><rect x="88.3028%" y="917" width="0.1147%" height="15" fill="rgb(246,89,16)" fg:x="770" fg:w="1"/><text x="88.5528%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.11%)</title><rect x="88.3028%" y="901" width="0.1147%" height="15" fill="rgb(216,158,49)" fg:x="770" fg:w="1"/><text x="88.5528%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.9908%" y="901" width="0.1147%" height="15" fill="rgb(236,107,19)" fg:x="776" fg:w="1"/><text x="89.2408%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.9908%" y="885" width="0.1147%" height="15" fill="rgb(228,185,30)" fg:x="776" fg:w="1"/><text x="89.2408%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.9908%" y="869" width="0.1147%" height="15" fill="rgb(246,134,8)" fg:x="776" fg:w="1"/><text x="89.2408%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.9908%" y="853" width="0.1147%" height="15" fill="rgb(214,143,50)" fg:x="776" fg:w="1"/><text x="89.2408%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.9908%" y="837" width="0.1147%" height="15" fill="rgb(228,75,8)" fg:x="776" fg:w="1"/><text x="89.2408%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.9908%" y="821" width="0.1147%" height="15" fill="rgb(207,175,4)" fg:x="776" fg:w="1"/><text x="89.2408%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.9908%" y="805" width="0.1147%" height="15" fill="rgb(205,108,24)" fg:x="776" fg:w="1"/><text x="89.2408%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="88.9908%" y="789" width="0.1147%" height="15" fill="rgb(244,120,49)" fg:x="776" fg:w="1"/><text x="89.2408%" y="799.50"></text></g><g><title>simsearch::SimSearch&lt;Id&gt;::search (408 samples, 46.79%)</title><rect x="42.6606%" y="1077" width="46.7890%" height="15" fill="rgb(223,47,38)" fg:x="372" fg:w="408"/><text x="42.9106%" y="1087.50">simsearch::SimSearch&lt;Id&gt;::search</text></g><g><title>simsearch::SimSearch&lt;Id&gt;::search_tokens (408 samples, 46.79%)</title><rect x="42.6606%" y="1061" width="46.7890%" height="15" fill="rgb(229,179,11)" fg:x="372" fg:w="408"/><text x="42.9106%" y="1071.50">simsearch::SimSearch&lt;Id&gt;::search_tokens</text></g><g><title>strsim::jaro_winkler (382 samples, 43.81%)</title><rect x="45.6422%" y="1045" width="43.8073%" height="15" fill="rgb(231,122,1)" fg:x="398" fg:w="382"/><text x="45.8922%" y="1055.50">strsim::jaro_winkler</text></g><g><title>strsim::generic_jaro_winkler (378 samples, 43.35%)</title><rect x="46.1009%" y="1029" width="43.3486%" height="15" fill="rgb(245,119,9)" fg:x="402" fg:w="378"/><text x="46.3509%" y="1039.50">strsim::generic_jaro_winkler</text></g><g><title>strsim::generic_jaro (368 samples, 42.20%)</title><rect x="47.2477%" y="1013" width="42.2018%" height="15" fill="rgb(241,163,25)" fg:x="412" fg:w="368"/><text x="47.4977%" y="1023.50">strsim::generic_jaro</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (20 samples, 2.29%)</title><rect x="87.1560%" y="997" width="2.2936%" height="15" fill="rgb(217,214,3)" fg:x="760" fg:w="20"/><text x="87.4060%" y="1007.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (20 samples, 2.29%)</title><rect x="87.1560%" y="981" width="2.2936%" height="15" fill="rgb(240,86,28)" fg:x="760" fg:w="20"/><text x="87.4060%" y="991.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 2.29%)</title><rect x="87.1560%" y="965" width="2.2936%" height="15" fill="rgb(215,47,9)" fg:x="760" fg:w="20"/><text x="87.4060%" y="975.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 2.18%)</title><rect x="87.2706%" y="949" width="2.1789%" height="15" fill="rgb(252,25,45)" fg:x="761" fg:w="19"/><text x="87.5206%" y="959.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (19 samples, 2.18%)</title><rect x="87.2706%" y="933" width="2.1789%" height="15" fill="rgb(251,164,9)" fg:x="761" fg:w="19"/><text x="87.5206%" y="943.50">a..</text></g><g><title>_int_free (9 samples, 1.03%)</title><rect x="88.4174%" y="917" width="1.0321%" height="15" fill="rgb(233,194,0)" fg:x="771" fg:w="9"/><text x="88.6674%" y="927.50"></text></g><g><title>tcache_put (3 samples, 0.34%)</title><rect x="89.1055%" y="901" width="0.3440%" height="15" fill="rgb(249,111,24)" fg:x="777" fg:w="3"/><text x="89.3555%" y="911.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.46%)</title><rect x="89.4495%" y="853" width="0.4587%" height="15" fill="rgb(250,223,3)" fg:x="780" fg:w="4"/><text x="89.6995%" y="863.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="89.5642%" y="837" width="0.3440%" height="15" fill="rgb(236,178,37)" fg:x="781" fg:w="3"/><text x="89.8142%" y="847.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.34%)</title><rect x="89.5642%" y="821" width="0.3440%" height="15" fill="rgb(241,158,50)" fg:x="781" fg:w="3"/><text x="89.8142%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="821" width="0.1147%" height="15" fill="rgb(213,121,41)" fg:x="789" fg:w="1"/><text x="90.7317%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="805" width="0.1147%" height="15" fill="rgb(240,92,3)" fg:x="789" fg:w="1"/><text x="90.7317%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="789" width="0.1147%" height="15" fill="rgb(205,123,3)" fg:x="789" fg:w="1"/><text x="90.7317%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="773" width="0.1147%" height="15" fill="rgb(205,97,47)" fg:x="789" fg:w="1"/><text x="90.7317%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="757" width="0.1147%" height="15" fill="rgb(247,152,14)" fg:x="789" fg:w="1"/><text x="90.7317%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="741" width="0.1147%" height="15" fill="rgb(248,195,53)" fg:x="789" fg:w="1"/><text x="90.7317%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="725" width="0.1147%" height="15" fill="rgb(226,201,16)" fg:x="789" fg:w="1"/><text x="90.7317%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="709" width="0.1147%" height="15" fill="rgb(205,98,0)" fg:x="789" fg:w="1"/><text x="90.7317%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="693" width="0.1147%" height="15" fill="rgb(214,191,48)" fg:x="789" fg:w="1"/><text x="90.7317%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="677" width="0.1147%" height="15" fill="rgb(237,112,39)" fg:x="789" fg:w="1"/><text x="90.7317%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="661" width="0.1147%" height="15" fill="rgb(247,203,27)" fg:x="789" fg:w="1"/><text x="90.7317%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="645" width="0.1147%" height="15" fill="rgb(235,124,28)" fg:x="789" fg:w="1"/><text x="90.7317%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="90.4817%" y="629" width="0.1147%" height="15" fill="rgb(208,207,46)" fg:x="789" fg:w="1"/><text x="90.7317%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.23%)</title><rect x="90.9404%" y="789" width="0.2294%" height="15" fill="rgb(234,176,4)" fg:x="793" fg:w="2"/><text x="91.1904%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.23%)</title><rect x="90.9404%" y="773" width="0.2294%" height="15" fill="rgb(230,133,28)" fg:x="793" fg:w="2"/><text x="91.1904%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="93.4633%" y="757" width="0.2294%" height="15" fill="rgb(211,137,40)" fg:x="815" fg:w="2"/><text x="93.7133%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="93.4633%" y="741" width="0.2294%" height="15" fill="rgb(254,35,13)" fg:x="815" fg:w="2"/><text x="93.7133%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="93.4633%" y="725" width="0.2294%" height="15" fill="rgb(225,49,51)" fg:x="815" fg:w="2"/><text x="93.7133%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="93.4633%" y="709" width="0.2294%" height="15" fill="rgb(251,10,15)" fg:x="815" fg:w="2"/><text x="93.7133%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="93.4633%" y="693" width="0.2294%" height="15" fill="rgb(228,207,15)" fg:x="815" fg:w="2"/><text x="93.7133%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="93.4633%" y="677" width="0.2294%" height="15" fill="rgb(241,99,19)" fg:x="815" fg:w="2"/><text x="93.7133%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="93.4633%" y="661" width="0.2294%" height="15" fill="rgb(207,104,49)" fg:x="815" fg:w="2"/><text x="93.7133%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="93.4633%" y="645" width="0.2294%" height="15" fill="rgb(234,99,18)" fg:x="815" fg:w="2"/><text x="93.7133%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (6 samples, 0.69%)</title><rect x="93.6927%" y="741" width="0.6881%" height="15" fill="rgb(213,191,49)" fg:x="817" fg:w="6"/><text x="93.9427%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="94.2661%" y="725" width="0.1147%" height="15" fill="rgb(210,226,19)" fg:x="822" fg:w="1"/><text x="94.5161%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="94.2661%" y="709" width="0.1147%" height="15" fill="rgb(229,97,18)" fg:x="822" fg:w="1"/><text x="94.5161%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="94.2661%" y="693" width="0.1147%" height="15" fill="rgb(211,167,15)" fg:x="822" fg:w="1"/><text x="94.5161%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="94.2661%" y="677" width="0.1147%" height="15" fill="rgb(210,169,34)" fg:x="822" fg:w="1"/><text x="94.5161%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="94.2661%" y="661" width="0.1147%" height="15" fill="rgb(241,121,31)" fg:x="822" fg:w="1"/><text x="94.5161%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="94.2661%" y="645" width="0.1147%" height="15" fill="rgb(232,40,11)" fg:x="822" fg:w="1"/><text x="94.5161%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="94.2661%" y="629" width="0.1147%" height="15" fill="rgb(205,86,26)" fg:x="822" fg:w="1"/><text x="94.5161%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (29 samples, 3.33%)</title><rect x="91.1697%" y="789" width="3.3257%" height="15" fill="rgb(231,126,28)" fg:x="795" fg:w="29"/><text x="91.4197%" y="799.50">cor..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (29 samples, 3.33%)</title><rect x="91.1697%" y="773" width="3.3257%" height="15" fill="rgb(219,221,18)" fg:x="795" fg:w="29"/><text x="91.4197%" y="783.50">cor..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (7 samples, 0.80%)</title><rect x="93.6927%" y="757" width="0.8028%" height="15" fill="rgb(211,40,0)" fg:x="817" fg:w="7"/><text x="93.9427%" y="767.50"></text></g><g><title>core::unicode::unicode_data::skip_search::{{closure}} (1 samples, 0.11%)</title><rect x="94.3807%" y="741" width="0.1147%" height="15" fill="rgb(239,85,43)" fg:x="823" fg:w="1"/><text x="94.6307%" y="751.50"></text></g><g><title>&lt;&amp;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (1 samples, 0.11%)</title><rect x="94.3807%" y="725" width="0.1147%" height="15" fill="rgb(231,55,21)" fg:x="823" fg:w="1"/><text x="94.6307%" y="735.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (1 samples, 0.11%)</title><rect x="94.3807%" y="709" width="0.1147%" height="15" fill="rgb(225,184,43)" fg:x="823" fg:w="1"/><text x="94.6307%" y="719.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (37 samples, 4.24%)</title><rect x="90.4817%" y="837" width="4.2431%" height="15" fill="rgb(251,158,41)" fg:x="789" fg:w="37"/><text x="90.7317%" y="847.50">core:..</text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (36 samples, 4.13%)</title><rect x="90.5963%" y="821" width="4.1284%" height="15" fill="rgb(234,159,37)" fg:x="790" fg:w="36"/><text x="90.8463%" y="831.50">core..</text></g><g><title>core::unicode::unicode_data::skip_search (36 samples, 4.13%)</title><rect x="90.5963%" y="805" width="4.1284%" height="15" fill="rgb(216,204,22)" fg:x="790" fg:w="36"/><text x="90.8463%" y="815.50">core..</text></g><g><title>core::unicode::unicode_data::decode_length (2 samples, 0.23%)</title><rect x="94.4954%" y="789" width="0.2294%" height="15" fill="rgb(214,17,3)" fg:x="824" fg:w="2"/><text x="94.7454%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="97.0183%" y="805" width="0.2294%" height="15" fill="rgb(212,111,17)" fg:x="846" fg:w="2"/><text x="97.2683%" y="815.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.11%)</title><rect x="97.1330%" y="789" width="0.1147%" height="15" fill="rgb(221,157,24)" fg:x="847" fg:w="1"/><text x="97.3830%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.11%)</title><rect x="97.1330%" y="773" width="0.1147%" height="15" fill="rgb(252,16,13)" fg:x="847" fg:w="1"/><text x="97.3830%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.1330%" y="757" width="0.1147%" height="15" fill="rgb(221,62,2)" fg:x="847" fg:w="1"/><text x="97.3830%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.1330%" y="741" width="0.1147%" height="15" fill="rgb(247,87,22)" fg:x="847" fg:w="1"/><text x="97.3830%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.1330%" y="725" width="0.1147%" height="15" fill="rgb(215,73,9)" fg:x="847" fg:w="1"/><text x="97.3830%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.1330%" y="709" width="0.1147%" height="15" fill="rgb(207,175,33)" fg:x="847" fg:w="1"/><text x="97.3830%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.1330%" y="693" width="0.1147%" height="15" fill="rgb(243,129,54)" fg:x="847" fg:w="1"/><text x="97.3830%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.1330%" y="677" width="0.1147%" height="15" fill="rgb(227,119,45)" fg:x="847" fg:w="1"/><text x="97.3830%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.1330%" y="661" width="0.1147%" height="15" fill="rgb(205,109,36)" fg:x="847" fg:w="1"/><text x="97.3830%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.1330%" y="645" width="0.1147%" height="15" fill="rgb(205,6,39)" fg:x="847" fg:w="1"/><text x="97.3830%" y="655.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (68 samples, 7.80%)</title><rect x="89.9083%" y="853" width="7.7982%" height="15" fill="rgb(221,32,16)" fg:x="784" fg:w="68"/><text x="90.1583%" y="863.50">core::char:..</text></g><g><title>core::unicode::printable::is_printable (26 samples, 2.98%)</title><rect x="94.7248%" y="837" width="2.9817%" height="15" fill="rgb(228,144,50)" fg:x="826" fg:w="26"/><text x="94.9748%" y="847.50">cor..</text></g><g><title>core::unicode::printable::check (25 samples, 2.87%)</title><rect x="94.8394%" y="821" width="2.8670%" height="15" fill="rgb(229,201,53)" fg:x="827" fg:w="25"/><text x="95.0894%" y="831.50">co..</text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="97.2477%" y="805" width="0.4587%" height="15" fill="rgb(249,153,27)" fg:x="848" fg:w="4"/><text x="97.4977%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="97.2477%" y="789" width="0.4587%" height="15" fill="rgb(227,106,25)" fg:x="848" fg:w="4"/><text x="97.4977%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="97.2477%" y="773" width="0.4587%" height="15" fill="rgb(230,65,29)" fg:x="848" fg:w="4"/><text x="97.4977%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="97.2477%" y="757" width="0.4587%" height="15" fill="rgb(221,57,46)" fg:x="848" fg:w="4"/><text x="97.4977%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="97.2477%" y="741" width="0.4587%" height="15" fill="rgb(229,161,17)" fg:x="848" fg:w="4"/><text x="97.4977%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="97.3624%" y="725" width="0.3440%" height="15" fill="rgb(222,213,11)" fg:x="849" fg:w="3"/><text x="97.6124%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="97.3624%" y="709" width="0.3440%" height="15" fill="rgb(235,35,13)" fg:x="849" fg:w="3"/><text x="97.6124%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="97.3624%" y="693" width="0.3440%" height="15" fill="rgb(233,158,34)" fg:x="849" fg:w="3"/><text x="97.6124%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.5917%" y="677" width="0.1147%" height="15" fill="rgb(215,151,48)" fg:x="851" fg:w="1"/><text x="97.8417%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.5917%" y="661" width="0.1147%" height="15" fill="rgb(229,84,14)" fg:x="851" fg:w="1"/><text x="97.8417%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.5917%" y="645" width="0.1147%" height="15" fill="rgb(229,68,14)" fg:x="851" fg:w="1"/><text x="97.8417%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (11 samples, 1.26%)</title><rect x="97.7064%" y="853" width="1.2615%" height="15" fill="rgb(243,106,26)" fg:x="852" fg:w="11"/><text x="97.9564%" y="863.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (11 samples, 1.26%)</title><rect x="97.7064%" y="837" width="1.2615%" height="15" fill="rgb(206,45,38)" fg:x="852" fg:w="11"/><text x="97.9564%" y="847.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (11 samples, 1.26%)</title><rect x="97.7064%" y="821" width="1.2615%" height="15" fill="rgb(226,6,15)" fg:x="852" fg:w="11"/><text x="97.9564%" y="831.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (11 samples, 1.26%)</title><rect x="97.7064%" y="805" width="1.2615%" height="15" fill="rgb(232,22,54)" fg:x="852" fg:w="11"/><text x="97.9564%" y="815.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (11 samples, 1.26%)</title><rect x="97.7064%" y="789" width="1.2615%" height="15" fill="rgb(229,222,32)" fg:x="852" fg:w="11"/><text x="97.9564%" y="799.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (11 samples, 1.26%)</title><rect x="97.7064%" y="773" width="1.2615%" height="15" fill="rgb(228,62,29)" fg:x="852" fg:w="11"/><text x="97.9564%" y="783.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (11 samples, 1.26%)</title><rect x="97.7064%" y="757" width="1.2615%" height="15" fill="rgb(251,103,34)" fg:x="852" fg:w="11"/><text x="97.9564%" y="767.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (11 samples, 1.26%)</title><rect x="97.7064%" y="741" width="1.2615%" height="15" fill="rgb(233,12,30)" fg:x="852" fg:w="11"/><text x="97.9564%" y="751.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (11 samples, 1.26%)</title><rect x="97.7064%" y="725" width="1.2615%" height="15" fill="rgb(238,52,0)" fg:x="852" fg:w="11"/><text x="97.9564%" y="735.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (11 samples, 1.26%)</title><rect x="97.7064%" y="709" width="1.2615%" height="15" fill="rgb(223,98,5)" fg:x="852" fg:w="11"/><text x="97.9564%" y="719.50"></text></g><g><title>__libc_write (11 samples, 1.26%)</title><rect x="97.7064%" y="693" width="1.2615%" height="15" fill="rgb(228,75,37)" fg:x="852" fg:w="11"/><text x="97.9564%" y="703.50"></text></g><g><title>[unknown] (11 samples, 1.26%)</title><rect x="97.7064%" y="677" width="1.2615%" height="15" fill="rgb(205,115,49)" fg:x="852" fg:w="11"/><text x="97.9564%" y="687.50"></text></g><g><title>[unknown] (11 samples, 1.26%)</title><rect x="97.7064%" y="661" width="1.2615%" height="15" fill="rgb(250,154,43)" fg:x="852" fg:w="11"/><text x="97.9564%" y="671.50"></text></g><g><title>[unknown] (11 samples, 1.26%)</title><rect x="97.7064%" y="645" width="1.2615%" height="15" fill="rgb(226,43,29)" fg:x="852" fg:w="11"/><text x="97.9564%" y="655.50"></text></g><g><title>[unknown] (11 samples, 1.26%)</title><rect x="97.7064%" y="629" width="1.2615%" height="15" fill="rgb(249,228,39)" fg:x="852" fg:w="11"/><text x="97.9564%" y="639.50"></text></g><g><title>[unknown] (11 samples, 1.26%)</title><rect x="97.7064%" y="613" width="1.2615%" height="15" fill="rgb(216,79,43)" fg:x="852" fg:w="11"/><text x="97.9564%" y="623.50"></text></g><g><title>[unknown] (11 samples, 1.26%)</title><rect x="97.7064%" y="597" width="1.2615%" height="15" fill="rgb(228,95,12)" fg:x="852" fg:w="11"/><text x="97.9564%" y="607.50"></text></g><g><title>[unknown] (11 samples, 1.26%)</title><rect x="97.7064%" y="581" width="1.2615%" height="15" fill="rgb(249,221,15)" fg:x="852" fg:w="11"/><text x="97.9564%" y="591.50"></text></g><g><title>[unknown] (11 samples, 1.26%)</title><rect x="97.7064%" y="565" width="1.2615%" height="15" fill="rgb(233,34,13)" fg:x="852" fg:w="11"/><text x="97.9564%" y="575.50"></text></g><g><title>[unknown] (11 samples, 1.26%)</title><rect x="97.7064%" y="549" width="1.2615%" height="15" fill="rgb(214,103,39)" fg:x="852" fg:w="11"/><text x="97.9564%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="98.5092%" y="533" width="0.4587%" height="15" fill="rgb(251,126,39)" fg:x="859" fg:w="4"/><text x="98.7592%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="98.6239%" y="517" width="0.3440%" height="15" fill="rgb(214,216,36)" fg:x="860" fg:w="3"/><text x="98.8739%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.34%)</title><rect x="98.6239%" y="501" width="0.3440%" height="15" fill="rgb(220,221,8)" fg:x="860" fg:w="3"/><text x="98.8739%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="98.7385%" y="485" width="0.2294%" height="15" fill="rgb(240,216,3)" fg:x="861" fg:w="2"/><text x="98.9885%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="98.7385%" y="469" width="0.2294%" height="15" fill="rgb(232,218,17)" fg:x="861" fg:w="2"/><text x="98.9885%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="98.7385%" y="453" width="0.2294%" height="15" fill="rgb(229,163,45)" fg:x="861" fg:w="2"/><text x="98.9885%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="98.7385%" y="437" width="0.2294%" height="15" fill="rgb(231,110,42)" fg:x="861" fg:w="2"/><text x="98.9885%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="98.7385%" y="421" width="0.2294%" height="15" fill="rgb(208,170,48)" fg:x="861" fg:w="2"/><text x="98.9885%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="98.7385%" y="405" width="0.2294%" height="15" fill="rgb(239,116,25)" fg:x="861" fg:w="2"/><text x="98.9885%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="389" width="0.1147%" height="15" fill="rgb(219,200,50)" fg:x="862" fg:w="1"/><text x="99.1032%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="373" width="0.1147%" height="15" fill="rgb(245,200,0)" fg:x="862" fg:w="1"/><text x="99.1032%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="357" width="0.1147%" height="15" fill="rgb(245,119,33)" fg:x="862" fg:w="1"/><text x="99.1032%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="341" width="0.1147%" height="15" fill="rgb(231,125,12)" fg:x="862" fg:w="1"/><text x="99.1032%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="325" width="0.1147%" height="15" fill="rgb(216,96,41)" fg:x="862" fg:w="1"/><text x="99.1032%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="309" width="0.1147%" height="15" fill="rgb(248,43,45)" fg:x="862" fg:w="1"/><text x="99.1032%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="293" width="0.1147%" height="15" fill="rgb(217,222,7)" fg:x="862" fg:w="1"/><text x="99.1032%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="277" width="0.1147%" height="15" fill="rgb(233,28,6)" fg:x="862" fg:w="1"/><text x="99.1032%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="261" width="0.1147%" height="15" fill="rgb(231,218,15)" fg:x="862" fg:w="1"/><text x="99.1032%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="245" width="0.1147%" height="15" fill="rgb(226,171,48)" fg:x="862" fg:w="1"/><text x="99.1032%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="229" width="0.1147%" height="15" fill="rgb(235,201,9)" fg:x="862" fg:w="1"/><text x="99.1032%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="213" width="0.1147%" height="15" fill="rgb(217,80,15)" fg:x="862" fg:w="1"/><text x="99.1032%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="197" width="0.1147%" height="15" fill="rgb(219,152,8)" fg:x="862" fg:w="1"/><text x="99.1032%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="181" width="0.1147%" height="15" fill="rgb(243,107,38)" fg:x="862" fg:w="1"/><text x="99.1032%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="165" width="0.1147%" height="15" fill="rgb(231,17,5)" fg:x="862" fg:w="1"/><text x="99.1032%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="149" width="0.1147%" height="15" fill="rgb(209,25,54)" fg:x="862" fg:w="1"/><text x="99.1032%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="133" width="0.1147%" height="15" fill="rgb(219,0,2)" fg:x="862" fg:w="1"/><text x="99.1032%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="117" width="0.1147%" height="15" fill="rgb(246,9,5)" fg:x="862" fg:w="1"/><text x="99.1032%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="101" width="0.1147%" height="15" fill="rgb(226,159,4)" fg:x="862" fg:w="1"/><text x="99.1032%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="85" width="0.1147%" height="15" fill="rgb(219,175,34)" fg:x="862" fg:w="1"/><text x="99.1032%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="69" width="0.1147%" height="15" fill="rgb(236,10,46)" fg:x="862" fg:w="1"/><text x="99.1032%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="53" width="0.1147%" height="15" fill="rgb(240,211,16)" fg:x="862" fg:w="1"/><text x="99.1032%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="98.8532%" y="37" width="0.1147%" height="15" fill="rgb(205,3,43)" fg:x="862" fg:w="1"/><text x="99.1032%" y="47.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (84 samples, 9.63%)</title><rect x="89.4495%" y="869" width="9.6330%" height="15" fill="rgb(245,7,22)" fg:x="780" fg:w="84"/><text x="89.6995%" y="879.50">&lt;str as core::..</text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.11%)</title><rect x="98.9679%" y="853" width="0.1147%" height="15" fill="rgb(239,132,32)" fg:x="863" fg:w="1"/><text x="99.2179%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.11%)</title><rect x="98.9679%" y="837" width="0.1147%" height="15" fill="rgb(228,202,34)" fg:x="863" fg:w="1"/><text x="99.2179%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.11%)</title><rect x="98.9679%" y="821" width="0.1147%" height="15" fill="rgb(254,200,22)" fg:x="863" fg:w="1"/><text x="99.2179%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.11%)</title><rect x="98.9679%" y="805" width="0.1147%" height="15" fill="rgb(219,10,39)" fg:x="863" fg:w="1"/><text x="99.2179%" y="815.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.11%)</title><rect x="99.0826%" y="869" width="0.1147%" height="15" fill="rgb(226,210,39)" fg:x="864" fg:w="1"/><text x="99.3326%" y="879.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="99.0826%" y="853" width="0.1147%" height="15" fill="rgb(208,219,16)" fg:x="864" fg:w="1"/><text x="99.3326%" y="863.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="99.0826%" y="837" width="0.1147%" height="15" fill="rgb(216,158,51)" fg:x="864" fg:w="1"/><text x="99.3326%" y="847.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="99.0826%" y="821" width="0.1147%" height="15" fill="rgb(233,14,44)" fg:x="864" fg:w="1"/><text x="99.3326%" y="831.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="99.0826%" y="805" width="0.1147%" height="15" fill="rgb(237,97,39)" fg:x="864" fg:w="1"/><text x="99.3326%" y="815.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (1 samples, 0.11%)</title><rect x="99.0826%" y="789" width="0.1147%" height="15" fill="rgb(218,198,43)" fg:x="864" fg:w="1"/><text x="99.3326%" y="799.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.11%)</title><rect x="99.0826%" y="773" width="0.1147%" height="15" fill="rgb(231,104,20)" fg:x="864" fg:w="1"/><text x="99.3326%" y="783.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="99.0826%" y="757" width="0.1147%" height="15" fill="rgb(254,36,13)" fg:x="864" fg:w="1"/><text x="99.3326%" y="767.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.11%)</title><rect x="99.0826%" y="741" width="0.1147%" height="15" fill="rgb(248,14,50)" fg:x="864" fg:w="1"/><text x="99.3326%" y="751.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.11%)</title><rect x="99.0826%" y="725" width="0.1147%" height="15" fill="rgb(217,107,29)" fg:x="864" fg:w="1"/><text x="99.3326%" y="735.50"></text></g><g><title>__libc_write (1 samples, 0.11%)</title><rect x="99.0826%" y="709" width="0.1147%" height="15" fill="rgb(251,169,33)" fg:x="864" fg:w="1"/><text x="99.3326%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.0826%" y="693" width="0.1147%" height="15" fill="rgb(217,108,32)" fg:x="864" fg:w="1"/><text x="99.3326%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.0826%" y="677" width="0.1147%" height="15" fill="rgb(219,66,42)" fg:x="864" fg:w="1"/><text x="99.3326%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.0826%" y="661" width="0.1147%" height="15" fill="rgb(206,180,7)" fg:x="864" fg:w="1"/><text x="99.3326%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.0826%" y="645" width="0.1147%" height="15" fill="rgb(208,226,31)" fg:x="864" fg:w="1"/><text x="99.3326%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.0826%" y="629" width="0.1147%" height="15" fill="rgb(218,26,49)" fg:x="864" fg:w="1"/><text x="99.3326%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.0826%" y="613" width="0.1147%" height="15" fill="rgb(233,197,48)" fg:x="864" fg:w="1"/><text x="99.3326%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.0826%" y="597" width="0.1147%" height="15" fill="rgb(252,181,51)" fg:x="864" fg:w="1"/><text x="99.3326%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.0826%" y="581" width="0.1147%" height="15" fill="rgb(253,90,19)" fg:x="864" fg:w="1"/><text x="99.3326%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.0826%" y="565" width="0.1147%" height="15" fill="rgb(215,171,30)" fg:x="864" fg:w="1"/><text x="99.3326%" y="575.50"></text></g><g><title>std::panic::catch_unwind (812 samples, 93.12%)</title><rect x="6.1927%" y="1205" width="93.1193%" height="15" fill="rgb(214,222,9)" fg:x="54" fg:w="812"/><text x="6.4427%" y="1215.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (812 samples, 93.12%)</title><rect x="6.1927%" y="1189" width="93.1193%" height="15" fill="rgb(223,3,22)" fg:x="54" fg:w="812"/><text x="6.4427%" y="1199.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (812 samples, 93.12%)</title><rect x="6.1927%" y="1173" width="93.1193%" height="15" fill="rgb(225,196,46)" fg:x="54" fg:w="812"/><text x="6.4427%" y="1183.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (812 samples, 93.12%)</title><rect x="6.1927%" y="1157" width="93.1193%" height="15" fill="rgb(209,110,37)" fg:x="54" fg:w="812"/><text x="6.4427%" y="1167.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (812 samples, 93.12%)</title><rect x="6.1927%" y="1141" width="93.1193%" height="15" fill="rgb(249,89,12)" fg:x="54" fg:w="812"/><text x="6.4427%" y="1151.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (812 samples, 93.12%)</title><rect x="6.1927%" y="1125" width="93.1193%" height="15" fill="rgb(226,27,33)" fg:x="54" fg:w="812"/><text x="6.4427%" y="1135.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (812 samples, 93.12%)</title><rect x="6.1927%" y="1109" width="93.1193%" height="15" fill="rgb(213,82,22)" fg:x="54" fg:w="812"/><text x="6.4427%" y="1119.50">core::ops::function::FnOnce::call_once</text></g><g><title>simsearch::main (812 samples, 93.12%)</title><rect x="6.1927%" y="1093" width="93.1193%" height="15" fill="rgb(248,140,0)" fg:x="54" fg:w="812"/><text x="6.4427%" y="1103.50">simsearch::main</text></g><g><title>std::io::stdio::_print (86 samples, 9.86%)</title><rect x="89.4495%" y="1077" width="9.8624%" height="15" fill="rgb(228,106,3)" fg:x="780" fg:w="86"/><text x="89.6995%" y="1087.50">std::io::stdio..</text></g><g><title>std::io::stdio::print_to (86 samples, 9.86%)</title><rect x="89.4495%" y="1061" width="9.8624%" height="15" fill="rgb(209,23,37)" fg:x="780" fg:w="86"/><text x="89.6995%" y="1071.50">std::io::stdio..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (86 samples, 9.86%)</title><rect x="89.4495%" y="1045" width="9.8624%" height="15" fill="rgb(241,93,50)" fg:x="780" fg:w="86"/><text x="89.6995%" y="1055.50">&lt;std::io::stdi..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (86 samples, 9.86%)</title><rect x="89.4495%" y="1029" width="9.8624%" height="15" fill="rgb(253,46,43)" fg:x="780" fg:w="86"/><text x="89.6995%" y="1039.50">&lt;&amp;std::io::std..</text></g><g><title>std::io::Write::write_fmt (86 samples, 9.86%)</title><rect x="89.4495%" y="1013" width="9.8624%" height="15" fill="rgb(226,206,43)" fg:x="780" fg:w="86"/><text x="89.6995%" y="1023.50">std::io::Write..</text></g><g><title>core::fmt::write (86 samples, 9.86%)</title><rect x="89.4495%" y="997" width="9.8624%" height="15" fill="rgb(217,54,7)" fg:x="780" fg:w="86"/><text x="89.6995%" y="1007.50">core::fmt::wri..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (86 samples, 9.86%)</title><rect x="89.4495%" y="981" width="9.8624%" height="15" fill="rgb(223,5,52)" fg:x="780" fg:w="86"/><text x="89.6995%" y="991.50">&lt;alloc::vec::V..</text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (86 samples, 9.86%)</title><rect x="89.4495%" y="965" width="9.8624%" height="15" fill="rgb(206,52,46)" fg:x="780" fg:w="86"/><text x="89.6995%" y="975.50">&lt;[T] as core::..</text></g><g><title>core::fmt::builders::DebugList::entries (86 samples, 9.86%)</title><rect x="89.4495%" y="949" width="9.8624%" height="15" fill="rgb(253,136,11)" fg:x="780" fg:w="86"/><text x="89.6995%" y="959.50">core::fmt::bui..</text></g><g><title>core::fmt::builders::DebugSet::entry (86 samples, 9.86%)</title><rect x="89.4495%" y="933" width="9.8624%" height="15" fill="rgb(208,106,33)" fg:x="780" fg:w="86"/><text x="89.6995%" y="943.50">core::fmt::bui..</text></g><g><title>core::fmt::builders::DebugInner::entry (86 samples, 9.86%)</title><rect x="89.4495%" y="917" width="9.8624%" height="15" fill="rgb(206,54,4)" fg:x="780" fg:w="86"/><text x="89.6995%" y="927.50">core::fmt::bui..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (86 samples, 9.86%)</title><rect x="89.4495%" y="901" width="9.8624%" height="15" fill="rgb(213,3,15)" fg:x="780" fg:w="86"/><text x="89.6995%" y="911.50">core::result::..</text></g><g><title>core::fmt::builders::DebugInner::entry::{{closure}} (86 samples, 9.86%)</title><rect x="89.4495%" y="885" width="9.8624%" height="15" fill="rgb(252,211,39)" fg:x="780" fg:w="86"/><text x="89.6995%" y="895.50">core::fmt::bui..</text></g><g><title>core::fmt::Write::write_char (1 samples, 0.11%)</title><rect x="99.1972%" y="869" width="0.1147%" height="15" fill="rgb(223,6,36)" fg:x="865" fg:w="1"/><text x="99.4472%" y="879.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="99.1972%" y="853" width="0.1147%" height="15" fill="rgb(252,169,45)" fg:x="865" fg:w="1"/><text x="99.4472%" y="863.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="99.1972%" y="837" width="0.1147%" height="15" fill="rgb(212,48,26)" fg:x="865" fg:w="1"/><text x="99.4472%" y="847.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="99.1972%" y="821" width="0.1147%" height="15" fill="rgb(251,102,48)" fg:x="865" fg:w="1"/><text x="99.4472%" y="831.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.11%)</title><rect x="99.1972%" y="805" width="0.1147%" height="15" fill="rgb(243,208,16)" fg:x="865" fg:w="1"/><text x="99.4472%" y="815.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.11%)</title><rect x="99.1972%" y="789" width="0.1147%" height="15" fill="rgb(219,96,24)" fg:x="865" fg:w="1"/><text x="99.4472%" y="799.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.11%)</title><rect x="99.1972%" y="773" width="0.1147%" height="15" fill="rgb(219,33,29)" fg:x="865" fg:w="1"/><text x="99.4472%" y="783.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.11%)</title><rect x="99.1972%" y="757" width="0.1147%" height="15" fill="rgb(223,176,5)" fg:x="865" fg:w="1"/><text x="99.4472%" y="767.50"></text></g><g><title>__memrchr_avx2 (1 samples, 0.11%)</title><rect x="99.1972%" y="741" width="0.1147%" height="15" fill="rgb(228,140,14)" fg:x="865" fg:w="1"/><text x="99.4472%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="725" width="0.1147%" height="15" fill="rgb(217,179,31)" fg:x="865" fg:w="1"/><text x="99.4472%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="709" width="0.1147%" height="15" fill="rgb(230,9,30)" fg:x="865" fg:w="1"/><text x="99.4472%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="693" width="0.1147%" height="15" fill="rgb(230,136,20)" fg:x="865" fg:w="1"/><text x="99.4472%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="677" width="0.1147%" height="15" fill="rgb(215,210,22)" fg:x="865" fg:w="1"/><text x="99.4472%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="661" width="0.1147%" height="15" fill="rgb(218,43,5)" fg:x="865" fg:w="1"/><text x="99.4472%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="645" width="0.1147%" height="15" fill="rgb(216,11,5)" fg:x="865" fg:w="1"/><text x="99.4472%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="629" width="0.1147%" height="15" fill="rgb(209,82,29)" fg:x="865" fg:w="1"/><text x="99.4472%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="613" width="0.1147%" height="15" fill="rgb(244,115,12)" fg:x="865" fg:w="1"/><text x="99.4472%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="597" width="0.1147%" height="15" fill="rgb(222,82,18)" fg:x="865" fg:w="1"/><text x="99.4472%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="581" width="0.1147%" height="15" fill="rgb(249,227,8)" fg:x="865" fg:w="1"/><text x="99.4472%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="565" width="0.1147%" height="15" fill="rgb(253,141,45)" fg:x="865" fg:w="1"/><text x="99.4472%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="549" width="0.1147%" height="15" fill="rgb(234,184,4)" fg:x="865" fg:w="1"/><text x="99.4472%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="533" width="0.1147%" height="15" fill="rgb(218,194,23)" fg:x="865" fg:w="1"/><text x="99.4472%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="517" width="0.1147%" height="15" fill="rgb(235,66,41)" fg:x="865" fg:w="1"/><text x="99.4472%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="501" width="0.1147%" height="15" fill="rgb(245,217,1)" fg:x="865" fg:w="1"/><text x="99.4472%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="485" width="0.1147%" height="15" fill="rgb(229,91,1)" fg:x="865" fg:w="1"/><text x="99.4472%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="469" width="0.1147%" height="15" fill="rgb(207,101,30)" fg:x="865" fg:w="1"/><text x="99.4472%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.1972%" y="453" width="0.1147%" height="15" fill="rgb(223,82,49)" fg:x="865" fg:w="1"/><text x="99.4472%" y="463.50"></text></g><g><title>__libc_start_main (817 samples, 93.69%)</title><rect x="6.1927%" y="1317" width="93.6927%" height="15" fill="rgb(218,167,17)" fg:x="54" fg:w="817"/><text x="6.4427%" y="1327.50">__libc_start_main</text></g><g><title>main (817 samples, 93.69%)</title><rect x="6.1927%" y="1301" width="93.6927%" height="15" fill="rgb(208,103,14)" fg:x="54" fg:w="817"/><text x="6.4427%" y="1311.50">main</text></g><g><title>std::rt::lang_start_internal (817 samples, 93.69%)</title><rect x="6.1927%" y="1285" width="93.6927%" height="15" fill="rgb(238,20,8)" fg:x="54" fg:w="817"/><text x="6.4427%" y="1295.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (817 samples, 93.69%)</title><rect x="6.1927%" y="1269" width="93.6927%" height="15" fill="rgb(218,80,54)" fg:x="54" fg:w="817"/><text x="6.4427%" y="1279.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (817 samples, 93.69%)</title><rect x="6.1927%" y="1253" width="93.6927%" height="15" fill="rgb(240,144,17)" fg:x="54" fg:w="817"/><text x="6.4427%" y="1263.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (817 samples, 93.69%)</title><rect x="6.1927%" y="1237" width="93.6927%" height="15" fill="rgb(245,27,50)" fg:x="54" fg:w="817"/><text x="6.4427%" y="1247.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (817 samples, 93.69%)</title><rect x="6.1927%" y="1221" width="93.6927%" height="15" fill="rgb(251,51,7)" fg:x="54" fg:w="817"/><text x="6.4427%" y="1231.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::rt::init (5 samples, 0.57%)</title><rect x="99.3119%" y="1205" width="0.5734%" height="15" fill="rgb(245,217,29)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1215.50"></text></g><g><title>std::sys::unix::init (5 samples, 0.57%)</title><rect x="99.3119%" y="1189" width="0.5734%" height="15" fill="rgb(221,176,29)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1199.50"></text></g><g><title>std::sys::unix::init::sanitize_standard_fds (5 samples, 0.57%)</title><rect x="99.3119%" y="1173" width="0.5734%" height="15" fill="rgb(212,180,24)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1157" width="0.5734%" height="15" fill="rgb(254,24,2)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1141" width="0.5734%" height="15" fill="rgb(230,100,2)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1125" width="0.5734%" height="15" fill="rgb(219,142,25)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1109" width="0.5734%" height="15" fill="rgb(240,73,43)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1093" width="0.5734%" height="15" fill="rgb(214,114,15)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1077" width="0.5734%" height="15" fill="rgb(207,130,4)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1061" width="0.5734%" height="15" fill="rgb(221,25,40)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1045" width="0.5734%" height="15" fill="rgb(241,184,7)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1029" width="0.5734%" height="15" fill="rgb(235,159,4)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="1013" width="0.5734%" height="15" fill="rgb(214,87,48)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="997" width="0.5734%" height="15" fill="rgb(246,198,24)" fg:x="866" fg:w="5"/><text x="99.5619%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="981" width="0.5734%" height="15" fill="rgb(209,66,40)" fg:x="866" fg:w="5"/><text x="99.5619%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="965" width="0.5734%" height="15" fill="rgb(233,147,39)" fg:x="866" fg:w="5"/><text x="99.5619%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="949" width="0.5734%" height="15" fill="rgb(231,145,52)" fg:x="866" fg:w="5"/><text x="99.5619%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="933" width="0.5734%" height="15" fill="rgb(206,20,26)" fg:x="866" fg:w="5"/><text x="99.5619%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="917" width="0.5734%" height="15" fill="rgb(238,220,4)" fg:x="866" fg:w="5"/><text x="99.5619%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.57%)</title><rect x="99.3119%" y="901" width="0.5734%" height="15" fill="rgb(252,195,42)" fg:x="866" fg:w="5"/><text x="99.5619%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="99.4266%" y="885" width="0.4587%" height="15" fill="rgb(209,10,6)" fg:x="867" fg:w="4"/><text x="99.6766%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.46%)</title><rect x="99.4266%" y="869" width="0.4587%" height="15" fill="rgb(229,3,52)" fg:x="867" fg:w="4"/><text x="99.6766%" y="879.50"></text></g><g><title>all (872 samples, 100%)</title><rect x="0.0000%" y="1365" width="100.0000%" height="15" fill="rgb(253,49,37)" fg:x="0" fg:w="872"/><text x="0.2500%" y="1375.50"></text></g><g><title>simsearch (867 samples, 99.43%)</title><rect x="0.5734%" y="1349" width="99.4266%" height="15" fill="rgb(240,103,49)" fg:x="5" fg:w="867"/><text x="0.8234%" y="1359.50">simsearch</text></g><g><title>_start (818 samples, 93.81%)</title><rect x="6.1927%" y="1333" width="93.8073%" height="15" fill="rgb(250,182,30)" fg:x="54" fg:w="818"/><text x="6.4427%" y="1343.50">_start</text></g><g><title>_dl_start (1 samples, 0.11%)</title><rect x="99.8853%" y="1317" width="0.1147%" height="15" fill="rgb(248,8,30)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1327.50"></text></g><g><title>_dl_start_final (1 samples, 0.11%)</title><rect x="99.8853%" y="1301" width="0.1147%" height="15" fill="rgb(237,120,30)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1311.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.11%)</title><rect x="99.8853%" y="1285" width="0.1147%" height="15" fill="rgb(221,146,34)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1295.50"></text></g><g><title>dl_main (1 samples, 0.11%)</title><rect x="99.8853%" y="1269" width="0.1147%" height="15" fill="rgb(242,55,13)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1279.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.11%)</title><rect x="99.8853%" y="1253" width="0.1147%" height="15" fill="rgb(242,112,31)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1263.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.11%)</title><rect x="99.8853%" y="1237" width="0.1147%" height="15" fill="rgb(249,192,27)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1247.50"></text></g><g><title>openaux (1 samples, 0.11%)</title><rect x="99.8853%" y="1221" width="0.1147%" height="15" fill="rgb(208,204,44)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1231.50"></text></g><g><title>_dl_map_object (1 samples, 0.11%)</title><rect x="99.8853%" y="1205" width="0.1147%" height="15" fill="rgb(208,93,54)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1215.50"></text></g><g><title>open_verify (1 samples, 0.11%)</title><rect x="99.8853%" y="1189" width="0.1147%" height="15" fill="rgb(242,1,31)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1199.50"></text></g><g><title>__GI___read_nocancel (1 samples, 0.11%)</title><rect x="99.8853%" y="1173" width="0.1147%" height="15" fill="rgb(241,83,25)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1157" width="0.1147%" height="15" fill="rgb(205,169,50)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1141" width="0.1147%" height="15" fill="rgb(239,186,37)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1125" width="0.1147%" height="15" fill="rgb(205,221,10)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1109" width="0.1147%" height="15" fill="rgb(218,196,15)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1093" width="0.1147%" height="15" fill="rgb(218,196,35)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1077" width="0.1147%" height="15" fill="rgb(233,63,24)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1061" width="0.1147%" height="15" fill="rgb(225,8,4)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1045" width="0.1147%" height="15" fill="rgb(234,105,35)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1029" width="0.1147%" height="15" fill="rgb(236,21,32)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="1013" width="0.1147%" height="15" fill="rgb(228,109,6)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="99.8853%" y="997" width="0.1147%" height="15" fill="rgb(229,215,31)" fg:x="871" fg:w="1"/><text x="100.1353%" y="1007.50"></text></g></svg></svg>